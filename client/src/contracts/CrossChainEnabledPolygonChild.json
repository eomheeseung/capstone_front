{
  "contractName": "CrossChainEnabledPolygonChild",
  "abi": [
    {
      "inputs": [],
      "name": "NotCrossChainCall",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "rootMessageSender",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "processMessageFromRoot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"NotCrossChainCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"rootMessageSender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"processMessageFromRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"https://polygon.technology/[Polygon] specialization or the {CrossChainEnabled} abstraction the child side (polygon/mumbai). This version should only be deployed on child chain to process cross-chain messages originating from the parent chain. The fxChild contract is provided and maintained by the polygon team. You can find the address of this contract polygon and mumbai in https://docs.polygon.technology/docs/develop/l1-l2-communication/fx-portal/#contract-addresses[Polygon's Fx-Portal documentation]. _Available since v4.6._\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"processMessageFromRoot(uint256,address,bytes)\":{\"details\":\"External entry point to receive and relay messages originating from the fxChild. Non-reentrancy is crucial to avoid a cross-chain call being able to impersonate anyone by just looping through this with user-defined arguments. Note: if _fxChild calls any other function that does a delegate-call, then security could be compromised.\"}},\"stateVariables\":{\"_fxChild\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/crosschain/polygon/CrossChainEnabledPolygonChild.sol\":\"CrossChainEnabledPolygonChild\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/crosschain/CrossChainEnabled.sol\":{\"keccak256\":\"0x1ec2f661e2b0bd06b245f7e847111d5b40d32380794bd2d791e89b0bdc3ef082\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9466ccdfd19225a51b9b785e60f22b04220684b8c9f24e11b62b740ad77f761f\",\"dweb:/ipfs/QmUAXfC4rzW9cqVdNkXA5c4HgqxNRwzo2MbUV4wDT52tED\"]},\"project:/contracts/crosschain/errors.sol\":{\"keccak256\":\"0xa1e9b651a2427925598b49ef35da5930abc07859cfac5b9dfb1912f063a024b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c514518c36a3fb1c5f1a99d88857e93160c72ea1fd728c443406ad1acb43ae9a\",\"dweb:/ipfs/Qmc3oXjBNhdeM5cfWpsvewXZAhH34Scgna2W3MvLaiiapQ\"]},\"project:/contracts/crosschain/polygon/CrossChainEnabledPolygonChild.sol\":{\"keccak256\":\"0xd3f8d66e3d4337a4327a4b9a63e07093a2a84d511cc8f3110078766a855655ca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecba86ff03b4c021575f47ffa7042b8685ea22f2ac2958698281ad06166d94dc\",\"dweb:/ipfs/QmULt8ynbcXGxDTVbf16zj7APLYwBG1YcHMjJXGaJPD9T2\"]},\"project:/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"project:/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"project:/contracts/vendor/polygon/IFxMessageProcessor.sol\":{\"keccak256\":\"0xf613eaa6dfa0c12f4d0e5bf4362d0b9aa0aa9d7577af2822bc859ed2994e1558\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d02619992daca10a2d5e3dff5356dfd4cb028b9fc3d58398fc78b9c650c970d\",\"dweb:/ipfs/QmYYo2B4bY3XYmPotsRF7p3gVVG3DeFSaJ96frr2miYh1a\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (crosschain/polygon/CrossChainEnabledPolygonChild.sol)\n\npragma solidity ^0.8.4;\n\nimport \"../CrossChainEnabled.sol\";\nimport \"../../security/ReentrancyGuard.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../vendor/polygon/IFxMessageProcessor.sol\";\n\naddress constant DEFAULT_SENDER = 0x000000000000000000000000000000000000dEaD;\n\n/**\n * @dev https://polygon.technology/[Polygon] specialization or the\n * {CrossChainEnabled} abstraction the child side (polygon/mumbai).\n *\n * This version should only be deployed on child chain to process cross-chain\n * messages originating from the parent chain.\n *\n * The fxChild contract is provided and maintained by the polygon team. You can\n * find the address of this contract polygon and mumbai in\n * https://docs.polygon.technology/docs/develop/l1-l2-communication/fx-portal/#contract-addresses[Polygon's Fx-Portal documentation].\n *\n * _Available since v4.6._\n */\nabstract contract CrossChainEnabledPolygonChild is IFxMessageProcessor, CrossChainEnabled, ReentrancyGuard {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable _fxChild;\n    address private _sender = DEFAULT_SENDER;\n\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor(address fxChild) {\n        _fxChild = fxChild;\n    }\n\n    /**\n     * @dev see {CrossChainEnabled-_isCrossChain}\n     */\n    function _isCrossChain() internal view virtual override returns (bool) {\n        return msg.sender == _fxChild;\n    }\n\n    /**\n     * @dev see {CrossChainEnabled-_crossChainSender}\n     */\n    function _crossChainSender() internal view virtual override onlyCrossChain returns (address) {\n        return _sender;\n    }\n\n    /**\n     * @dev External entry point to receive and relay messages originating\n     * from the fxChild.\n     *\n     * Non-reentrancy is crucial to avoid a cross-chain call being able\n     * to impersonate anyone by just looping through this with user-defined\n     * arguments.\n     *\n     * Note: if _fxChild calls any other function that does a delegate-call,\n     * then security could be compromised.\n     */\n    function processMessageFromRoot(\n        uint256, /* stateId */\n        address rootMessageSender,\n        bytes calldata data\n    ) external override nonReentrant {\n        if (!_isCrossChain()) revert NotCrossChainCall();\n\n        _sender = rootMessageSender;\n        Address.functionDelegateCall(address(this), data, \"cross-chain execution failed\");\n        _sender = DEFAULT_SENDER;\n    }\n}\n",
  "sourcePath": "C:\\Users\\paete\\CapstonPro\\truffle\\contracts\\crosschain\\polygon\\CrossChainEnabledPolygonChild.sol",
  "ast": {
    "absolutePath": "project:/contracts/crosschain/polygon/CrossChainEnabledPolygonChild.sol",
    "exportedSymbols": {
      "Address": [
        20372
      ],
      "CrossChainEnabled": [
        2024
      ],
      "CrossChainEnabledPolygonChild": [
        2531
      ],
      "DEFAULT_SENDER": [
        2441
      ],
      "IFxMessageProcessor": [
        29207
      ],
      "InvalidCrossChainSender": [
        2338
      ],
      "NotCrossChainCall": [
        2332
      ],
      "ReentrancyGuard": [
        11066
      ]
    },
    "id": 2532,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2434,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "136:23:171"
      },
      {
        "absolutePath": "project:/contracts/crosschain/CrossChainEnabled.sol",
        "file": "../CrossChainEnabled.sol",
        "id": 2435,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2532,
        "sourceUnit": 2025,
        "src": "161:34:171",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/security/ReentrancyGuard.sol",
        "file": "../../security/ReentrancyGuard.sol",
        "id": 2436,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2532,
        "sourceUnit": 11067,
        "src": "196:44:171",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/utils/Address.sol",
        "file": "../../utils/Address.sol",
        "id": 2437,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2532,
        "sourceUnit": 20373,
        "src": "241:33:171",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/vendor/polygon/IFxMessageProcessor.sol",
        "file": "../../vendor/polygon/IFxMessageProcessor.sol",
        "id": 2438,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2532,
        "sourceUnit": 29208,
        "src": "275:54:171",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "constant": true,
        "id": 2441,
        "mutability": "constant",
        "name": "DEFAULT_SENDER",
        "nameLocation": "348:14:171",
        "nodeType": "VariableDeclaration",
        "scope": 2532,
        "src": "331:76:171",
        "stateVariable": false,
        "storageLocation": "default",
        "typeDescriptions": {
          "typeIdentifier": "t_address",
          "typeString": "address"
        },
        "typeName": {
          "id": 2439,
          "name": "address",
          "nodeType": "ElementaryTypeName",
          "src": "331:7:171",
          "stateMutability": "nonpayable",
          "typeDescriptions": {
            "typeIdentifier": "t_address",
            "typeString": "address"
          }
        },
        "value": {
          "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303064456144",
          "id": 2440,
          "isConstant": false,
          "isLValue": false,
          "isPure": true,
          "kind": "number",
          "lValueRequested": false,
          "nodeType": "Literal",
          "src": "365:42:171",
          "typeDescriptions": {
            "typeIdentifier": "t_address",
            "typeString": "address"
          },
          "value": "0x000000000000000000000000000000000000dEaD"
        },
        "visibility": "internal"
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 2443,
              "name": "IFxMessageProcessor",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29207,
              "src": "1038:19:171"
            },
            "id": 2444,
            "nodeType": "InheritanceSpecifier",
            "src": "1038:19:171"
          },
          {
            "baseName": {
              "id": 2445,
              "name": "CrossChainEnabled",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2024,
              "src": "1059:17:171"
            },
            "id": 2446,
            "nodeType": "InheritanceSpecifier",
            "src": "1059:17:171"
          },
          {
            "baseName": {
              "id": 2447,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11066,
              "src": "1078:15:171"
            },
            "id": 2448,
            "nodeType": "InheritanceSpecifier",
            "src": "1078:15:171"
          }
        ],
        "canonicalName": "CrossChainEnabledPolygonChild",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2442,
          "nodeType": "StructuredDocumentation",
          "src": "410:576:171",
          "text": " @dev https://polygon.technology/[Polygon] specialization or the\n {CrossChainEnabled} abstraction the child side (polygon/mumbai).\n This version should only be deployed on child chain to process cross-chain\n messages originating from the parent chain.\n The fxChild contract is provided and maintained by the polygon team. You can\n find the address of this contract polygon and mumbai in\n https://docs.polygon.technology/docs/develop/l1-l2-communication/fx-portal/#contract-addresses[Polygon's Fx-Portal documentation].\n _Available since v4.6._"
        },
        "fullyImplemented": true,
        "id": 2531,
        "linearizedBaseContracts": [
          2531,
          11066,
          2024,
          29207
        ],
        "name": "CrossChainEnabledPolygonChild",
        "nameLocation": "1005:29:171",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 2449,
              "nodeType": "StructuredDocumentation",
              "src": "1100:61:171",
              "text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable"
            },
            "id": 2451,
            "mutability": "immutable",
            "name": "_fxChild",
            "nameLocation": "1192:8:171",
            "nodeType": "VariableDeclaration",
            "scope": 2531,
            "src": "1166:34:171",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2450,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1166:7:171",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2454,
            "mutability": "mutable",
            "name": "_sender",
            "nameLocation": "1222:7:171",
            "nodeType": "VariableDeclaration",
            "scope": 2531,
            "src": "1206:40:171",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2452,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1206:7:171",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "id": 2453,
              "name": "DEFAULT_SENDER",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2441,
              "src": "1232:14:171",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2464,
              "nodeType": "Block",
              "src": "1335:35:171",
              "statements": [
                {
                  "expression": {
                    "id": 2462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2460,
                      "name": "_fxChild",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2451,
                      "src": "1345:8:171",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2461,
                      "name": "fxChild",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2457,
                      "src": "1356:7:171",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1345:18:171",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2463,
                  "nodeType": "ExpressionStatement",
                  "src": "1345:18:171"
                }
              ]
            },
            "documentation": {
              "id": 2455,
              "nodeType": "StructuredDocumentation",
              "src": "1253:48:171",
              "text": "@custom:oz-upgrades-unsafe-allow constructor"
            },
            "id": 2465,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2458,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2457,
                  "mutability": "mutable",
                  "name": "fxChild",
                  "nameLocation": "1326:7:171",
                  "nodeType": "VariableDeclaration",
                  "scope": 2465,
                  "src": "1318:15:171",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2456,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1318:7:171",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1317:17:171"
            },
            "returnParameters": {
              "id": 2459,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1335:0:171"
            },
            "scope": 2531,
            "src": "1306:64:171",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              2017
            ],
            "body": {
              "id": 2477,
              "nodeType": "Block",
              "src": "1513:46:171",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 2472,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1530:3:171",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2473,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1530:10:171",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 2474,
                      "name": "_fxChild",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2451,
                      "src": "1544:8:171",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1530:22:171",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2471,
                  "id": 2476,
                  "nodeType": "Return",
                  "src": "1523:29:171"
                }
              ]
            },
            "documentation": {
              "id": 2466,
              "nodeType": "StructuredDocumentation",
              "src": "1376:61:171",
              "text": " @dev see {CrossChainEnabled-_isCrossChain}"
            },
            "id": 2478,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isCrossChain",
            "nameLocation": "1451:13:171",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2468,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1489:8:171"
            },
            "parameters": {
              "id": 2467,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1464:2:171"
            },
            "returnParameters": {
              "id": 2471,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2470,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2478,
                  "src": "1507:4:171",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2469,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1507:4:171",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1506:6:171"
            },
            "scope": 2531,
            "src": "1442:117:171",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              2023
            ],
            "body": {
              "id": 2489,
              "nodeType": "Block",
              "src": "1728:31:171",
              "statements": [
                {
                  "expression": {
                    "id": 2487,
                    "name": "_sender",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2454,
                    "src": "1745:7:171",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2486,
                  "id": 2488,
                  "nodeType": "Return",
                  "src": "1738:14:171"
                }
              ]
            },
            "documentation": {
              "id": 2479,
              "nodeType": "StructuredDocumentation",
              "src": "1565:65:171",
              "text": " @dev see {CrossChainEnabled-_crossChainSender}"
            },
            "id": 2490,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2483,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2482,
                  "name": "onlyCrossChain",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1990,
                  "src": "1695:14:171"
                },
                "nodeType": "ModifierInvocation",
                "src": "1695:14:171"
              }
            ],
            "name": "_crossChainSender",
            "nameLocation": "1644:17:171",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2481,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1686:8:171"
            },
            "parameters": {
              "id": 2480,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1661:2:171"
            },
            "returnParameters": {
              "id": 2486,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2485,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2490,
                  "src": "1719:7:171",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2484,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1719:7:171",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1718:9:171"
            },
            "scope": 2531,
            "src": "1635:124:171",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              29206
            ],
            "body": {
              "id": 2529,
              "nodeType": "Block",
              "src": "2345:228:171",
              "statements": [
                {
                  "condition": {
                    "id": 2505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2359:16:171",
                    "subExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2503,
                        "name": "_isCrossChain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          2478
                        ],
                        "referencedDeclaration": 2478,
                        "src": "2360:13:171",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                          "typeString": "function () view returns (bool)"
                        }
                      },
                      "id": 2504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2360:15:171",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2509,
                  "nodeType": "IfStatement",
                  "src": "2355:48:171",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2506,
                        "name": "NotCrossChainCall",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2332,
                        "src": "2384:17:171",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 2507,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2384:19:171",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2508,
                    "nodeType": "RevertStatement",
                    "src": "2377:26:171"
                  }
                },
                {
                  "expression": {
                    "id": 2512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2510,
                      "name": "_sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2454,
                      "src": "2414:7:171",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2511,
                      "name": "rootMessageSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2495,
                      "src": "2424:17:171",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2414:27:171",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2513,
                  "nodeType": "ExpressionStatement",
                  "src": "2414:27:171"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2519,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2488:4:171",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CrossChainEnabledPolygonChild_$2531",
                              "typeString": "contract CrossChainEnabledPolygonChild"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CrossChainEnabledPolygonChild_$2531",
                              "typeString": "contract CrossChainEnabledPolygonChild"
                            }
                          ],
                          "id": 2518,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2480:7:171",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2517,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2480:7:171",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2480:13:171",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2521,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2497,
                        "src": "2495:4:171",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "hexValue": "63726f73732d636861696e20657865637574696f6e206661696c6564",
                        "id": 2522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2501:30:171",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a949afe3bafe819a3e8c4fec74116865cc8be9002fbe6b9f0b3377efea55df6a",
                          "typeString": "literal_string \"cross-chain execution failed\""
                        },
                        "value": "cross-chain execution failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a949afe3bafe819a3e8c4fec74116865cc8be9002fbe6b9f0b3377efea55df6a",
                          "typeString": "literal_string \"cross-chain execution failed\""
                        }
                      ],
                      "expression": {
                        "id": 2514,
                        "name": "Address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20372,
                        "src": "2451:7:171",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Address_$20372_$",
                          "typeString": "type(library Address)"
                        }
                      },
                      "id": 2516,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "functionDelegateCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20340,
                      "src": "2451:28:171",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
                      }
                    },
                    "id": 2523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2451:81:171",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 2524,
                  "nodeType": "ExpressionStatement",
                  "src": "2451:81:171"
                },
                {
                  "expression": {
                    "id": 2527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2525,
                      "name": "_sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2454,
                      "src": "2542:7:171",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2526,
                      "name": "DEFAULT_SENDER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2441,
                      "src": "2552:14:171",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2542:24:171",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2528,
                  "nodeType": "ExpressionStatement",
                  "src": "2542:24:171"
                }
              ]
            },
            "documentation": {
              "id": 2491,
              "nodeType": "StructuredDocumentation",
              "src": "1765:411:171",
              "text": " @dev External entry point to receive and relay messages originating\n from the fxChild.\n Non-reentrancy is crucial to avoid a cross-chain call being able\n to impersonate anyone by just looping through this with user-defined\n arguments.\n Note: if _fxChild calls any other function that does a delegate-call,\n then security could be compromised."
            },
            "functionSelector": "9a7c4b71",
            "id": 2530,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2501,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2500,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11065,
                  "src": "2332:12:171"
                },
                "nodeType": "ModifierInvocation",
                "src": "2332:12:171"
              }
            ],
            "name": "processMessageFromRoot",
            "nameLocation": "2190:22:171",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2499,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2323:8:171"
            },
            "parameters": {
              "id": 2498,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2493,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2530,
                  "src": "2222:7:171",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2492,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2222:7:171",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2495,
                  "mutability": "mutable",
                  "name": "rootMessageSender",
                  "nameLocation": "2261:17:171",
                  "nodeType": "VariableDeclaration",
                  "scope": 2530,
                  "src": "2253:25:171",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2494,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2253:7:171",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2497,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "2303:4:171",
                  "nodeType": "VariableDeclaration",
                  "scope": 2530,
                  "src": "2288:19:171",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2496,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2288:5:171",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2212:101:171"
            },
            "returnParameters": {
              "id": 2502,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2345:0:171"
            },
            "scope": 2531,
            "src": "2181:392:171",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2532,
        "src": "987:1588:171",
        "usedErrors": [
          2332
        ]
      }
    ],
    "src": "136:2440:171"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.14+commit.80d49f37.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-05-03T08:44:13.052Z",
  "devdoc": {
    "details": "https://polygon.technology/[Polygon] specialization or the {CrossChainEnabled} abstraction the child side (polygon/mumbai). This version should only be deployed on child chain to process cross-chain messages originating from the parent chain. The fxChild contract is provided and maintained by the polygon team. You can find the address of this contract polygon and mumbai in https://docs.polygon.technology/docs/develop/l1-l2-communication/fx-portal/#contract-addresses[Polygon's Fx-Portal documentation]. _Available since v4.6._",
    "kind": "dev",
    "methods": {
      "constructor": {
        "custom:oz-upgrades-unsafe-allow": "constructor"
      },
      "processMessageFromRoot(uint256,address,bytes)": {
        "details": "External entry point to receive and relay messages originating from the fxChild. Non-reentrancy is crucial to avoid a cross-chain call being able to impersonate anyone by just looping through this with user-defined arguments. Note: if _fxChild calls any other function that does a delegate-call, then security could be compromised."
      }
    },
    "stateVariables": {
      "_fxChild": {
        "custom:oz-upgrades-unsafe-allow": "state-variable-immutable"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}