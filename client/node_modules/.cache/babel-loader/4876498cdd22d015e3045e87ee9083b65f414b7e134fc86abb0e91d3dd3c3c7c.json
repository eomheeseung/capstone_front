{"ast":null,"code":"\"use strict\";\n\n// Copyright (c) 2018-2022 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\nvar _classCallCheck = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Session = void 0;\nvar rxjs_1 = require(\"rxjs\");\nvar operators_1 = require(\"rxjs/operators\");\nvar sha_js_1 = require(\"sha.js\");\nvar util_1 = require(\"../util\");\nvar STORAGE_KEY_SESSION_ID = \"session:id\";\nvar STORAGE_KEY_SESSION_SECRET = \"session:secret\";\nvar STORAGE_KEY_SESSION_LINKED = \"session:linked\";\nvar Session = /*#__PURE__*/function () {\n  function Session(storage, id, secret, linked) {\n    _classCallCheck(this, Session);\n    this._storage = storage;\n    this._id = id || (0, util_1.randomBytesHex)(16);\n    this._secret = secret || (0, util_1.randomBytesHex)(32);\n    this._key = new sha_js_1.sha256().update(\"\".concat(this._id, \", \").concat(this._secret, \" WalletLink\")) // ensure old sessions stay connected\n    .digest(\"hex\");\n    this._linked = !!linked;\n  }\n  _createClass(Session, [{\n    key: \"id\",\n    get: function get() {\n      return this._id;\n    }\n  }, {\n    key: \"secret\",\n    get: function get() {\n      return this._secret;\n    }\n  }, {\n    key: \"key\",\n    get: function get() {\n      return this._key;\n    }\n  }, {\n    key: \"linked\",\n    get: function get() {\n      return this._linked;\n    },\n    set: function set(val) {\n      this._linked = val;\n      this.persistLinked();\n    }\n  }, {\n    key: \"save\",\n    value: function save() {\n      this._storage.setItem(STORAGE_KEY_SESSION_ID, this._id);\n      this._storage.setItem(STORAGE_KEY_SESSION_SECRET, this._secret);\n      this.persistLinked();\n      return this;\n    }\n  }, {\n    key: \"persistLinked\",\n    value: function persistLinked() {\n      this._storage.setItem(STORAGE_KEY_SESSION_LINKED, this._linked ? \"1\" : \"0\");\n    }\n  }], [{\n    key: \"load\",\n    value: function load(storage) {\n      var id = storage.getItem(STORAGE_KEY_SESSION_ID);\n      var linked = storage.getItem(STORAGE_KEY_SESSION_LINKED);\n      var secret = storage.getItem(STORAGE_KEY_SESSION_SECRET);\n      if (id && secret) {\n        return new Session(storage, id, secret, linked === \"1\");\n      }\n      return null;\n    }\n  }, {\n    key: \"persistedSessionIdChange$\",\n    get: function get() {\n      return (0, rxjs_1.fromEvent)(window, \"storage\").pipe((0, operators_1.filter)(function (evt) {\n        return evt.key === STORAGE_KEY_SESSION_ID;\n      }), (0, operators_1.map)(function (evt) {\n        return {\n          oldValue: evt.oldValue || null,\n          newValue: evt.newValue || null\n        };\n      }));\n    }\n    /**\n     * Takes in a session ID and returns the sha256 hash of it.\n     * @param sessionId session ID\n     */\n  }, {\n    key: \"hash\",\n    value: function hash(sessionId) {\n      return new sha_js_1.sha256().update(sessionId).digest(\"hex\");\n    }\n  }]);\n  return Session;\n}();\nexports.Session = Session;","map":{"version":3,"names":["Object","defineProperty","exports","value","Session","rxjs_1","require","operators_1","sha_js_1","util_1","STORAGE_KEY_SESSION_ID","STORAGE_KEY_SESSION_SECRET","STORAGE_KEY_SESSION_LINKED","storage","id","secret","linked","_storage","_id","randomBytesHex","_secret","_key","sha256","update","digest","_linked","val","persistLinked","setItem","getItem","fromEvent","window","pipe","filter","evt","key","map","oldValue","newValue","sessionId"],"sources":["C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@coinbase/wallet-sdk/dist/relay/Session.js"],"sourcesContent":["\"use strict\";\n// Copyright (c) 2018-2022 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Session = void 0;\nconst rxjs_1 = require(\"rxjs\");\nconst operators_1 = require(\"rxjs/operators\");\nconst sha_js_1 = require(\"sha.js\");\nconst util_1 = require(\"../util\");\nconst STORAGE_KEY_SESSION_ID = \"session:id\";\nconst STORAGE_KEY_SESSION_SECRET = \"session:secret\";\nconst STORAGE_KEY_SESSION_LINKED = \"session:linked\";\nclass Session {\n    constructor(storage, id, secret, linked) {\n        this._storage = storage;\n        this._id = id || (0, util_1.randomBytesHex)(16);\n        this._secret = secret || (0, util_1.randomBytesHex)(32);\n        this._key = new sha_js_1.sha256()\n            .update(`${this._id}, ${this._secret} WalletLink`) // ensure old sessions stay connected\n            .digest(\"hex\");\n        this._linked = !!linked;\n    }\n    static load(storage) {\n        const id = storage.getItem(STORAGE_KEY_SESSION_ID);\n        const linked = storage.getItem(STORAGE_KEY_SESSION_LINKED);\n        const secret = storage.getItem(STORAGE_KEY_SESSION_SECRET);\n        if (id && secret) {\n            return new Session(storage, id, secret, linked === \"1\");\n        }\n        return null;\n    }\n    static get persistedSessionIdChange$() {\n        return (0, rxjs_1.fromEvent)(window, \"storage\").pipe((0, operators_1.filter)(evt => evt.key === STORAGE_KEY_SESSION_ID), (0, operators_1.map)(evt => ({\n            oldValue: evt.oldValue || null,\n            newValue: evt.newValue || null,\n        })));\n    }\n    /**\n     * Takes in a session ID and returns the sha256 hash of it.\n     * @param sessionId session ID\n     */\n    static hash(sessionId) {\n        return new sha_js_1.sha256().update(sessionId).digest(\"hex\");\n    }\n    get id() {\n        return this._id;\n    }\n    get secret() {\n        return this._secret;\n    }\n    get key() {\n        return this._key;\n    }\n    get linked() {\n        return this._linked;\n    }\n    set linked(val) {\n        this._linked = val;\n        this.persistLinked();\n    }\n    save() {\n        this._storage.setItem(STORAGE_KEY_SESSION_ID, this._id);\n        this._storage.setItem(STORAGE_KEY_SESSION_SECRET, this._secret);\n        this.persistLinked();\n        return this;\n    }\n    persistLinked() {\n        this._storage.setItem(STORAGE_KEY_SESSION_LINKED, this._linked ? \"1\" : \"0\");\n    }\n}\nexports.Session = Session;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}