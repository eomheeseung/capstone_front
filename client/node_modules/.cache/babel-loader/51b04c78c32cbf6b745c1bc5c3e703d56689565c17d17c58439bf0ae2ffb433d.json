{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _objectSpread = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _awaitAsyncGenerator = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/awaitAsyncGenerator.js\").default;\nvar _wrapAsyncGenerator = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/wrapAsyncGenerator.js\").default;\nvar _asyncIterator = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/asyncIterator.js\").default;\nvar _require = require('multiaddr'),\n  Multiaddr = _require.Multiaddr;\nvar toCamel = require('../lib/object-to-camel');\nvar configure = require('../lib/configure');\nvar toUrlSearchParams = require('../lib/to-url-search-params');\nvar multipartRequest = require('../lib/multipart-request');\nvar abortSignal = require('../lib/abort-signal');\nvar _require2 = require('native-abort-controller'),\n  AbortController = _require2.AbortController;\nvar _require3 = require('uint8arrays/to-string'),\n  uint8ArrayToString = _require3.toString;\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dht').API<HTTPClientExtraOptions>} DHTAPI\n */\n\nmodule.exports = configure(function (api) {\n  /**\n   * @type {DHTAPI[\"put\"]}\n   */\n  function put(_x, _x2) {\n    return _put.apply(this, arguments);\n  }\n  function _put() {\n    _put = _wrapAsyncGenerator(function (key, value) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var controller, signal, res, _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, message;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              // allow aborting requests on body errors\n              controller = new AbortController();\n              signal = abortSignal(controller.signal, options.signal);\n              _context.t0 = _awaitAsyncGenerator;\n              _context.t1 = api;\n              _context.t2 = _objectSpread;\n              _context.t3 = {\n                signal: signal,\n                searchParams: toUrlSearchParams(_objectSpread({\n                  arg: uint8ArrayToString(key)\n                }, options))\n              };\n              _context.next = 8;\n              return _awaitAsyncGenerator(multipartRequest(value, controller, options.headers));\n            case 8:\n              _context.t4 = _context.sent;\n              _context.t5 = (0, _context.t2)(_context.t3, _context.t4);\n              _context.t6 = _context.t1.post.call(_context.t1, 'dht/put', _context.t5);\n              _context.next = 13;\n              return (0, _context.t0)(_context.t6);\n            case 13:\n              res = _context.sent;\n              _iteratorAbruptCompletion = false;\n              _didIteratorError = false;\n              _context.prev = 16;\n              _iterator = _asyncIterator(res.ndjson());\n            case 18:\n              _context.next = 20;\n              return _awaitAsyncGenerator(_iterator.next());\n            case 20:\n              if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n                _context.next = 29;\n                break;\n              }\n              message = _step.value;\n              message = toCamel(message);\n              if (message.responses) {\n                message.responses = message.responses.map(function ( /** @type {{ ID: string, Addrs: string[] }} */_ref) {\n                  var ID = _ref.ID,\n                    Addrs = _ref.Addrs;\n                  return {\n                    id: ID,\n                    addrs: (Addrs || []).map(function (a) {\n                      return new Multiaddr(a);\n                    })\n                  };\n                });\n              }\n              _context.next = 26;\n              return message;\n            case 26:\n              _iteratorAbruptCompletion = false;\n              _context.next = 18;\n              break;\n            case 29:\n              _context.next = 35;\n              break;\n            case 31:\n              _context.prev = 31;\n              _context.t7 = _context[\"catch\"](16);\n              _didIteratorError = true;\n              _iteratorError = _context.t7;\n            case 35:\n              _context.prev = 35;\n              _context.prev = 36;\n              if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                _context.next = 40;\n                break;\n              }\n              _context.next = 40;\n              return _awaitAsyncGenerator(_iterator.return());\n            case 40:\n              _context.prev = 40;\n              if (!_didIteratorError) {\n                _context.next = 43;\n                break;\n              }\n              throw _iteratorError;\n            case 43:\n              return _context.finish(40);\n            case 44:\n              return _context.finish(35);\n            case 45:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[16, 31, 35, 45], [36,, 40, 44]]);\n      })();\n    });\n    return _put.apply(this, arguments);\n  }\n  return put;\n});","map":{"version":3,"names":["require","Multiaddr","toCamel","configure","toUrlSearchParams","multipartRequest","abortSignal","AbortController","uint8ArrayToString","toString","module","exports","api","put","key","value","options","controller","signal","searchParams","arg","headers","post","res","ndjson","message","responses","map","ID","Addrs","id","addrs","a"],"sources":["C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/ipfs-http-client/src/dht/put.js"],"sourcesContent":["'use strict'\n\nconst { Multiaddr } = require('multiaddr')\nconst toCamel = require('../lib/object-to-camel')\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\nconst multipartRequest = require('../lib/multipart-request')\nconst abortSignal = require('../lib/abort-signal')\nconst { AbortController } = require('native-abort-controller')\nconst { toString: uint8ArrayToString } = require('uint8arrays/to-string')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dht').API<HTTPClientExtraOptions>} DHTAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {DHTAPI[\"put\"]}\n   */\n  async function * put (key, value, options = {}) {\n    // allow aborting requests on body errors\n    const controller = new AbortController()\n    const signal = abortSignal(controller.signal, options.signal)\n\n    const res = await api.post('dht/put', {\n      signal,\n      searchParams: toUrlSearchParams({\n        arg: uint8ArrayToString(key),\n        ...options\n      }),\n      ...(\n        await multipartRequest(value, controller, options.headers)\n      )\n    })\n\n    for await (let message of res.ndjson()) {\n      message = toCamel(message)\n      if (message.responses) {\n        message.responses = message.responses.map((/** @type {{ ID: string, Addrs: string[] }} */ { ID, Addrs }) => ({\n          id: ID,\n          addrs: (Addrs || []).map(a => new Multiaddr(a))\n        }))\n      }\n      yield message\n    }\n  }\n\n  return put\n})\n"],"mappings":"AAAA,YAAY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEZ,eAAsBA,OAAO,CAAC,WAAW,CAAC;EAAlCC,SAAS,YAATA,SAAS;AACjB,IAAMC,OAAO,GAAGF,OAAO,CAAC,wBAAwB,CAAC;AACjD,IAAMG,SAAS,GAAGH,OAAO,CAAC,kBAAkB,CAAC;AAC7C,IAAMI,iBAAiB,GAAGJ,OAAO,CAAC,6BAA6B,CAAC;AAChE,IAAMK,gBAAgB,GAAGL,OAAO,CAAC,0BAA0B,CAAC;AAC5D,IAAMM,WAAW,GAAGN,OAAO,CAAC,qBAAqB,CAAC;AAClD,gBAA4BA,OAAO,CAAC,yBAAyB,CAAC;EAAtDO,eAAe,aAAfA,eAAe;AACvB,gBAAyCP,OAAO,CAAC,uBAAuB,CAAC;EAAvDQ,kBAAkB,aAA5BC,QAAQ;;AAEhB;AACA;AACA;AACA;;AAEAC,MAAM,CAACC,OAAO,GAAGR,SAAS,CAAC,UAAAS,GAAG,EAAI;EAChC;AACF;AACA;EAFE,SAGiBC,GAAG;IAAA;EAAA;EAAA;IAAA,2BAApB,UAAsBC,GAAG,EAAEC,KAAK;MAAA,IAAEC,OAAO,uEAAG,CAAC,CAAC;MAAA;QAAA;QAAA;UAAA;YAAA;cAC5C;cACMC,UAAU,GAAG,IAAIV,eAAe,EAAE;cAClCW,MAAM,GAAGZ,WAAW,CAACW,UAAU,CAACC,MAAM,EAAEF,OAAO,CAACE,MAAM,CAAC;cAAA;cAAA,cAE3CN,GAAG;cAAA;cAAA;gBACnBM,MAAM,EAANA,MAAM;gBACNC,YAAY,EAAEf,iBAAiB;kBAC7BgB,GAAG,EAAEZ,kBAAkB,CAACM,GAAG;gBAAC,GACzBE,OAAO;cACV;cAAA;cAAA,4BAEMX,gBAAgB,CAACU,KAAK,EAAEE,UAAU,EAAED,OAAO,CAACK,OAAO,CAAC;YAAA;cAAA;cAAA;cAAA,0BAPxCC,IAAI,mBAAC,SAAS;cAAA;cAAA;YAAA;cAA9BC,GAAG;cAAA;cAAA;cAAA;cAAA,2BAWiBA,GAAG,CAACC,MAAM,EAAE;YAAA;cAAA;cAAA;YAAA;cAAA;gBAAA;gBAAA;cAAA;cAAvBC,OAAO;cACpBA,OAAO,GAAGvB,OAAO,CAACuB,OAAO,CAAC;cAC1B,IAAIA,OAAO,CAACC,SAAS,EAAE;gBACrBD,OAAO,CAACC,SAAS,GAAGD,OAAO,CAACC,SAAS,CAACC,GAAG,CAAC,WAAC;kBAAA,IAAiDC,EAAE,QAAFA,EAAE;oBAAEC,KAAK,QAALA,KAAK;kBAAA,OAAQ;oBAC3GC,EAAE,EAAEF,EAAE;oBACNG,KAAK,EAAE,CAACF,KAAK,IAAI,EAAE,EAAEF,GAAG,CAAC,UAAAK,CAAC;sBAAA,OAAI,IAAI/B,SAAS,CAAC+B,CAAC,CAAC;oBAAA;kBAChD,CAAC;gBAAA,CAAC,CAAC;cACL;cAAC;cACD,OAAMP,OAAO;YAAA;cAAA;cAAA;cAAA;YAAA;cAAA;cAAA;YAAA;cAAA;cAAA;cAAA;cAAA;YAAA;cAAA;cAAA;cAAA;gBAAA;gBAAA;cAAA;cAAA;cAAA;YAAA;cAAA;cAAA;gBAAA;gBAAA;cAAA;cAAA;YAAA;cAAA;YAAA;cAAA;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAEhB;IAAA;EAAA;EAED,OAAOZ,GAAG;AACZ,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}