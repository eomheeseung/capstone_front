{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\paete\\\\Prototype\\\\nftmusicProtoCopy\\\\client\\\\src\\\\contexts\\\\EthContext\\\\EthProvider.jsx\",\n  _s = $RefreshSig$();\nimport React, { useReducer, useCallback, useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\nimport EthContext from \"./EthContext\";\nimport { reducer, actions, initialState } from \"./state\";\nimport WalletConnectProvdier from \"@walletconnect/web3-provider\";\nimport { infuraProvider } from 'wagmi/providers/infura';\nimport { Web3Button } from \"@web3modal/react\";\nimport { EthereumClient, modalConnectors, walletConnectProvider } from \"@web3modal/ethereum\";\nimport { Web3Modal } from \"@web3modal/react\";\nimport { configureChains, createClient, WagmiConfig } from \"wagmi\";\nimport { arbitrum, mainnet, polygon } from \"wagmi/chains\";\nimport { Core } from \"@walletconnect/core\";\nimport { Web3Wallet } from \"@walletconnect/web3wallet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar newjson = [];\nvar imgjson = [];\nlet provider;\nexport function EthProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [proset, setProvider] = useState(false);\n  const chains = [arbitrum, mainnet, polygon];\n\n  //Wagmi client\n  // const { provider } = configureChains(chains,[infuraProvider({ apiKey:'ff2d998f9cdf4be29197ce3ffb727d89' })], [\n  //   walletConnectProvider({ projectId: \"251542da3c8552393e55d6d3b636127e\" }),\n  // ]);\n  // const wagmiClient = createClient({\n  //   autoConnect: true,\n  //   connectors: modalConnectors({\n  //     projectId: \"251542da3c8552393e55d6d3b636127e\",\n  //     version: \"1\", // or \"2\"\n  //     appName: \"web3Modal\",\n  //     chains,\n  //   }),\n  //   provider,\n  // });\n\n  // Web3Modal Ethereum Client\n  // const ethereumClient = new EthereumClient(wagmiClient, chains);\n\n  const provider = new WalletConnectProvdier({\n    rpc: {\n      5: 'https://goerli.infura.io/v3/ff2d998f9cdf4be29197ce3ffb727d89'\n    },\n    infuraId: \"ff2d998f9cdf4be29197ce3ffb727d89\",\n    qrcodeModalOptions: {\n      desktopLinks: ['ledger', 'tokenary', 'wallet', 'wallet 3', 'secuX', 'ambire', 'wallet3', 'apolloX', 'zerion', 'sequence', 'punkWallet', 'kryptoGO', 'nft', 'riceWallet', 'vision', 'keyring'],\n      mobileLinks: [\"rainbow\", \"metamask\", \"argent\", \"trust\", \"imtoken\", \"pillar\"]\n    }\n  });\n  const init = useCallback(async artifact => {\n    if (artifact) {\n      // const web3 = new Web3(Web3.givenProvider || \"ws://127.0.0.1:7545\");\n\n      // await provider.disconnect();            \n      // await provider.enable();\n      const core = new Core({\n        projectId: process.env.PROJECT_ID\n      });\n      const web3wallet = await Web3Wallet.init({\n        core,\n        // <- pass the shared `core` instance\n        metadata: {\n          name: \"Demo app\",\n          description: \"Demo Client as Wallet/Peer\",\n          icons: []\n        }\n      });\n      web3wallet.on(\"session_proposal\", async proposal => {\n        const session = await web3wallet.approveSession({\n          id: proposal.id,\n          namespaces\n        });\n      });\n      await web3wallet.core.pairing.pair({\n        uri\n      });\n      const web3 = new Web3(provider);\n\n      // const web3 = new Web3(Web3.givenProvider || \"ws://goerli.infura.io/v3/ff2d998f9cdf4be29197ce3ffb727d89\");\n      const accounts = await web3.eth.getAccounts();\n      const networkID = await web3.eth.net.getId();\n      const {\n        abi\n      } = artifact;\n      let address, contract;\n      try {\n        address = artifact.networks[networkID].address;\n        contract = new web3.eth.Contract(abi, address);\n      } catch (err) {\n        console.error(err);\n        console.log(\"에러위치\");\n      }\n      dispatch({\n        type: actions.init,\n        data: {\n          artifact,\n          web3,\n          accounts,\n          networkID,\n          contract,\n          newjson,\n          provider\n        }\n      });\n    }\n  }, []);\n  useEffect(() => {\n    const tryInit = async () => {\n      try {\n        const artifact = require(\"../../contracts/ArtGrowNFT.json\");\n        init(artifact);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    tryInit();\n  }, [init]);\n  useEffect(() => {\n    const events = [\"chainChanged\", \"accountsChanged\"];\n    const handleChange = () => {\n      init(state.artifact);\n    };\n    events.forEach(e => window.ethereum.on(e, handleChange));\n    return () => {\n      events.forEach(e => window.ethereum.removeListener(e, handleChange));\n    };\n  }, [init, state.artifact]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EthContext.Provider, {\n      value: {\n        state,\n        dispatch\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 6\n  }, this);\n}\n_s(EthProvider, \"zAynNKLG8PA4TBxKYif2YtVwKQ0=\");\n_c = EthProvider;\nexport default EthProvider;\nvar _c;\n$RefreshReg$(_c, \"EthProvider\");","map":{"version":3,"names":["React","useReducer","useCallback","useEffect","useState","Web3","EthContext","reducer","actions","initialState","WalletConnectProvdier","infuraProvider","Web3Button","EthereumClient","modalConnectors","walletConnectProvider","Web3Modal","configureChains","createClient","WagmiConfig","arbitrum","mainnet","polygon","Core","Web3Wallet","newjson","imgjson","provider","EthProvider","children","state","dispatch","proset","setProvider","chains","rpc","infuraId","qrcodeModalOptions","desktopLinks","mobileLinks","init","artifact","core","projectId","process","env","PROJECT_ID","web3wallet","metadata","name","description","icons","on","proposal","session","approveSession","id","namespaces","pairing","pair","uri","web3","accounts","eth","getAccounts","networkID","net","getId","abi","address","contract","networks","Contract","err","console","error","log","type","data","tryInit","require","events","handleChange","forEach","e","window","ethereum","removeListener"],"sources":["C:/Users/paete/Prototype/nftmusicProtoCopy/client/src/contexts/EthContext/EthProvider.jsx"],"sourcesContent":["import React, { useReducer, useCallback, useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\nimport EthContext from \"./EthContext\";\nimport { reducer, actions, initialState } from \"./state\";\nimport WalletConnectProvdier from \"@walletconnect/web3-provider\";\nimport { infuraProvider } from 'wagmi/providers/infura'\nimport { Web3Button } from \"@web3modal/react\";\n\nimport {\n  EthereumClient,\n  modalConnectors,\n  walletConnectProvider,\n} from \"@web3modal/ethereum\";\n\nimport { Web3Modal } from \"@web3modal/react\";\n\nimport { configureChains, createClient, WagmiConfig } from \"wagmi\";\n\nimport { arbitrum, mainnet, polygon } from \"wagmi/chains\";\nimport { Core } from \"@walletconnect/core\";\n\nimport { Web3Wallet } from \"@walletconnect/web3wallet\";\nvar newjson=[]\nvar imgjson=[];\nlet provider;\n\nexport  function EthProvider({ children }) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [proset,setProvider]=useState(false);\n  const chains = [arbitrum, mainnet, polygon];\n\n//Wagmi client\n// const { provider } = configureChains(chains,[infuraProvider({ apiKey:'ff2d998f9cdf4be29197ce3ffb727d89' })], [\n//   walletConnectProvider({ projectId: \"251542da3c8552393e55d6d3b636127e\" }),\n// ]);\n// const wagmiClient = createClient({\n//   autoConnect: true,\n//   connectors: modalConnectors({\n//     projectId: \"251542da3c8552393e55d6d3b636127e\",\n//     version: \"1\", // or \"2\"\n//     appName: \"web3Modal\",\n//     chains,\n//   }),\n//   provider,\n// });\n\n// Web3Modal Ethereum Client\n// const ethereumClient = new EthereumClient(wagmiClient, chains);\n\n const provider = new WalletConnectProvdier({\n  \n  rpc: {\n    5:'https://goerli.infura.io/v3/ff2d998f9cdf4be29197ce3ffb727d89'\n    \n  },\n  infuraId: \"ff2d998f9cdf4be29197ce3ffb727d89\",\n  \n \n qrcodeModalOptions: {\n   desktopLinks: [\n     'ledger',\n     'tokenary',\n     'wallet',\n     'wallet 3',\n     'secuX',\n     'ambire',\n     'wallet3',\n     'apolloX',\n     'zerion',\n     'sequence',\n     'punkWallet',\n     'kryptoGO',\n     'nft',\n     'riceWallet',\n     'vision',\n     'keyring'\n   ],\n   mobileLinks: [\n     \"rainbow\",\n     \"metamask\",\n     \"argent\",\n     \"trust\",\n     \"imtoken\",\n     \"pillar\",\n     \n   ],}});\n\n\n  const init = useCallback(\n    async artifact => {\n      \n      if (artifact) {   \n        // const web3 = new Web3(Web3.givenProvider || \"ws://127.0.0.1:7545\");\n            \n  // await provider.disconnect();            \n  // await provider.enable();\n  const core = new Core({\n    projectId: process.env.PROJECT_ID,\n  });\n  \n  const web3wallet = await Web3Wallet.init({\n    core, // <- pass the shared `core` instance\n    metadata: {\n      name: \"Demo app\",\n      description: \"Demo Client as Wallet/Peer\",\n      icons: [],\n    },\n  });\n  web3wallet.on(\"session_proposal\", async (proposal) => {\n    const session = await web3wallet.approveSession({\n      id: proposal.id,\n      namespaces,\n    });\n  });\n  await web3wallet.core.pairing.pair({ uri });\n  const web3 = new Web3(provider);\n\n \n        \n        // const web3 = new Web3(Web3.givenProvider || \"ws://goerli.infura.io/v3/ff2d998f9cdf4be29197ce3ffb727d89\");\n        const accounts = await web3.eth.getAccounts();\n        const networkID = await web3.eth.net.getId();\n       \n        const { abi } = artifact;\n        let address, contract;\n        try {\n          address = artifact.networks[networkID].address;\n          contract = new web3.eth.Contract(abi, address);   \n          \n        } catch (err) {\n          console.error(err);\n          console.log(\"에러위치\");\n        }\n        dispatch({\n          type: actions.init,\n          data: { artifact, web3, accounts, networkID, contract,newjson,provider}\n        });\n      }\n    }, []);\n\n  \n \n    \n   \n  useEffect(() => {\n    const tryInit = async () => {\n      try {\n        const artifact = require(\"../../contracts/ArtGrowNFT.json\");\n        init(artifact);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    tryInit();\n  }, [init]);\n\n  \n\n  useEffect(() => {\n    const events = [\"chainChanged\", \"accountsChanged\"];\n    const handleChange = () => {\n      init(state.artifact);\n\n    };\n    events.forEach(e => window.ethereum.on(e, handleChange));\n    return () => {\n      events.forEach(e => window.ethereum.removeListener(e, handleChange));\n    };\n  }, [init,state.artifact]);\n\n  \n \n  \n\n  return (\n    \n     <React.Fragment>\n       <EthContext.Provider value={{\n      state,\n      dispatch\n    }}>\n      \n      {children}\n  \n    </EthContext.Provider>\n   \n     </React.Fragment>\n\n\n  );\n}\n\n\nexport default EthProvider;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}