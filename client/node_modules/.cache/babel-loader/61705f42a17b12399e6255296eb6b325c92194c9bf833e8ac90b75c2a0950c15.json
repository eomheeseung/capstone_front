{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport { allocUnsafe } from './alloc.js';\nexport function concat(arrays, length) {\n  if (!length) {\n    length = arrays.reduce(function (acc, curr) {\n      return acc + curr.length;\n    }, 0);\n  }\n  var output = allocUnsafe(length);\n  var offset = 0;\n  var _iterator = _createForOfIteratorHelper(arrays),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var arr = _step.value;\n      output.set(arr, offset);\n      offset += arr.length;\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return output;\n}","map":{"version":3,"names":["allocUnsafe","concat","arrays","length","reduce","acc","curr","output","offset","arr","set"],"sources":["C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@walletconnect/universal-provider/node_modules/uint8arrays/esm/src/concat.js"],"sourcesContent":["import { allocUnsafe } from './alloc.js';\nexport function concat(arrays, length) {\n  if (!length) {\n    length = arrays.reduce((acc, curr) => acc + curr.length, 0);\n  }\n  const output = allocUnsafe(length);\n  let offset = 0;\n  for (const arr of arrays) {\n    output.set(arr, offset);\n    offset += arr.length;\n  }\n  return output;\n}"],"mappings":";AAAA,SAASA,WAAW,QAAQ,YAAY;AACxC,OAAO,SAASC,MAAM,CAACC,MAAM,EAAEC,MAAM,EAAE;EACrC,IAAI,CAACA,MAAM,EAAE;IACXA,MAAM,GAAGD,MAAM,CAACE,MAAM,CAAC,UAACC,GAAG,EAAEC,IAAI;MAAA,OAAKD,GAAG,GAAGC,IAAI,CAACH,MAAM;IAAA,GAAE,CAAC,CAAC;EAC7D;EACA,IAAMI,MAAM,GAAGP,WAAW,CAACG,MAAM,CAAC;EAClC,IAAIK,MAAM,GAAG,CAAC;EAAC,2CACGN,MAAM;IAAA;EAAA;IAAxB,oDAA0B;MAAA,IAAfO,GAAG;MACZF,MAAM,CAACG,GAAG,CAACD,GAAG,EAAED,MAAM,CAAC;MACvBA,MAAM,IAAIC,GAAG,CAACN,MAAM;IACtB;EAAC;IAAA;EAAA;IAAA;EAAA;EACD,OAAOI,MAAM;AACf"},"metadata":{},"sourceType":"module","externalDependencies":[]}