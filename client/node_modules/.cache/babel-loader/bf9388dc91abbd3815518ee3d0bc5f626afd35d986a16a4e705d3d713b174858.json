{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar configure = require('./lib/configure');\nvar toUrlSearchParams = require('./lib/to-url-search-params');\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nmodule.exports = configure(function (api) {\n  /**\n   * @type {RootAPI[\"stop\"]}\n   */\n  function stop() {\n    return _stop.apply(this, arguments);\n  }\n  function _stop() {\n    _stop = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var options,\n        res,\n        _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n            _context.next = 3;\n            return api.post('shutdown', {\n              signal: options.signal,\n              searchParams: toUrlSearchParams(options),\n              headers: options.headers\n            });\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.text();\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return _stop.apply(this, arguments);\n  }\n  return stop;\n});","map":{"version":3,"names":["configure","require","toUrlSearchParams","module","exports","api","stop","options","post","signal","searchParams","headers","res","text"],"sources":["C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/ipfs-http-client/src/stop.js"],"sourcesContent":["'use strict'\n\nconst configure = require('./lib/configure')\nconst toUrlSearchParams = require('./lib/to-url-search-params')\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {RootAPI[\"stop\"]}\n   */\n  async function stop (options = {}) {\n    const res = await api.post('shutdown', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    await res.text()\n  }\n  return stop\n})\n"],"mappings":"AAAA,YAAY;;AAAA;AAAA;AAEZ,IAAMA,SAAS,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AAC5C,IAAMC,iBAAiB,GAAGD,OAAO,CAAC,4BAA4B,CAAC;;AAE/D;AACA;AACA;AACA;;AAEAE,MAAM,CAACC,OAAO,GAAGJ,SAAS,CAAC,UAAAK,GAAG,EAAI;EAChC;AACF;AACA;EAFE,SAGeC,IAAI;IAAA;EAAA;EAAA;IAAA,mEAAnB;MAAA;QAAA;QAAA;MAAA;QAAA;UAAA;YAAqBC,OAAO,2DAAG,CAAC,CAAC;YAAA;YAAA,OACbF,GAAG,CAACG,IAAI,CAAC,UAAU,EAAE;cACrCC,MAAM,EAAEF,OAAO,CAACE,MAAM;cACtBC,YAAY,EAAER,iBAAiB,CAACK,OAAO,CAAC;cACxCI,OAAO,EAAEJ,OAAO,CAACI;YACnB,CAAC,CAAC;UAAA;YAJIC,GAAG;YAAA;YAAA,OAMHA,GAAG,CAACC,IAAI,EAAE;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA,CACjB;IAAA;EAAA;EACD,OAAOP,IAAI;AACb,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}