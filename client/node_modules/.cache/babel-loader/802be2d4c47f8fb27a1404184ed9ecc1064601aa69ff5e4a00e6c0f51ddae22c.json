{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _objectSpread = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _asyncToGenerator = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _require = require('multiformats/cid'),\n  CID = _require.CID;\nvar configure = require('../lib/configure');\nvar toUrlSearchParams = require('../lib/to-url-search-params');\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nmodule.exports = configure(function (api) {\n  /**\n   * @type {FilesAPI[\"flush\"]}\n   */\n  function flush(_x) {\n    return _flush.apply(this, arguments);\n  }\n  function _flush() {\n    _flush = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(path) {\n      var options,\n        res,\n        data,\n        _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n            if (!(!path || typeof path !== 'string')) {\n              _context.next = 3;\n              break;\n            }\n            throw new Error('ipfs.files.flush requires a path');\n          case 3:\n            _context.next = 5;\n            return api.post('files/flush', {\n              signal: options.signal,\n              searchParams: toUrlSearchParams(_objectSpread({\n                arg: path\n              }, options)),\n              headers: options.headers\n            });\n          case 5:\n            res = _context.sent;\n            _context.next = 8;\n            return res.json();\n          case 8:\n            data = _context.sent;\n            return _context.abrupt(\"return\", CID.parse(data.Cid));\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return _flush.apply(this, arguments);\n  }\n  return flush;\n});","map":{"version":3,"names":["require","CID","configure","toUrlSearchParams","module","exports","api","flush","path","options","Error","post","signal","searchParams","arg","headers","res","json","data","parse","Cid"],"sources":["C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/ipfs-http-client/src/files/flush.js"],"sourcesContent":["'use strict'\n\nconst { CID } = require('multiformats/cid')\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {FilesAPI[\"flush\"]}\n   */\n  async function flush (path, options = {}) {\n    if (!path || typeof path !== 'string') {\n      throw new Error('ipfs.files.flush requires a path')\n    }\n\n    const res = await api.post('files/flush', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return CID.parse(data.Cid)\n  }\n  return flush\n})\n"],"mappings":"AAAA,YAAY;;AAAA;AAAA;AAAA;AAEZ,eAAgBA,OAAO,CAAC,kBAAkB,CAAC;EAAnCC,GAAG,YAAHA,GAAG;AACX,IAAMC,SAAS,GAAGF,OAAO,CAAC,kBAAkB,CAAC;AAC7C,IAAMG,iBAAiB,GAAGH,OAAO,CAAC,6BAA6B,CAAC;;AAEhE;AACA;AACA;AACA;;AAEAI,MAAM,CAACC,OAAO,GAAGH,SAAS,CAAC,UAAAI,GAAG,EAAI;EAChC;AACF;AACA;EAFE,SAGeC,KAAK;IAAA;EAAA;EAAA;IAAA,oEAApB,iBAAsBC,IAAI;MAAA;QAAA;QAAA;QAAA;MAAA;QAAA;UAAA;YAAEC,OAAO,2DAAG,CAAC,CAAC;YAAA,MAClC,CAACD,IAAI,IAAI,OAAOA,IAAI,KAAK,QAAQ;cAAA;cAAA;YAAA;YAAA,MAC7B,IAAIE,KAAK,CAAC,kCAAkC,CAAC;UAAA;YAAA;YAAA,OAGnCJ,GAAG,CAACK,IAAI,CAAC,aAAa,EAAE;cACxCC,MAAM,EAAEH,OAAO,CAACG,MAAM;cACtBC,YAAY,EAAEV,iBAAiB;gBAC7BW,GAAG,EAAEN;cAAI,GACNC,OAAO,EACV;cACFM,OAAO,EAAEN,OAAO,CAACM;YACnB,CAAC,CAAC;UAAA;YAPIC,GAAG;YAAA;YAAA,OAQUA,GAAG,CAACC,IAAI,EAAE;UAAA;YAAvBC,IAAI;YAAA,iCAEHjB,GAAG,CAACkB,KAAK,CAACD,IAAI,CAACE,GAAG,CAAC;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA,CAC3B;IAAA;EAAA;EACD,OAAOb,KAAK;AACd,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}