{"ast":null,"code":"import \"../chunk-MQXBDTVK.js\";\n\n// src/providers/infura.ts\nimport { providers } from \"ethers\";\nfunction infuraProvider(_ref) {\n  let {\n    apiKey,\n    priority,\n    stallTimeout,\n    weight\n  } = _ref;\n  return function (chain) {\n    if (!chain.rpcUrls.infura?.http[0]) return null;\n    return {\n      chain: {\n        ...chain,\n        rpcUrls: {\n          ...chain.rpcUrls,\n          default: {\n            http: [`${chain.rpcUrls.infura?.http[0]}/${apiKey}`]\n          }\n        }\n      },\n      provider: () => {\n        const provider = new providers.InfuraProvider({\n          chainId: chain.id,\n          name: chain.network,\n          ensAddress: chain.contracts?.ensRegistry?.address\n        }, apiKey);\n        return Object.assign(provider, {\n          priority,\n          stallTimeout,\n          weight\n        });\n      },\n      webSocketProvider: () => new providers.InfuraWebSocketProvider({\n        chainId: chain.id,\n        name: chain.network,\n        ensAddress: chain.contracts?.ensRegistry?.address\n      }, apiKey)\n    };\n  };\n}\nexport { infuraProvider };","map":{"version":3,"names":["providers","infuraProvider","apiKey","priority","stallTimeout","weight","chain","rpcUrls","infura","http","default","provider","InfuraProvider","chainId","id","name","network","ensAddress","contracts","ensRegistry","address","Object","assign","webSocketProvider","InfuraWebSocketProvider"],"sources":["C:/Users/paete/Prototype/nftmusicprotocopy/client/node_modules/@wagmi/core/dist/providers/infura.js"],"sourcesContent":["import \"../chunk-MQXBDTVK.js\";\n\n// src/providers/infura.ts\nimport { providers } from \"ethers\";\nfunction infuraProvider({\n  apiKey,\n  priority,\n  stallTimeout,\n  weight\n}) {\n  return function(chain) {\n    if (!chain.rpcUrls.infura?.http[0])\n      return null;\n    return {\n      chain: {\n        ...chain,\n        rpcUrls: {\n          ...chain.rpcUrls,\n          default: { http: [`${chain.rpcUrls.infura?.http[0]}/${apiKey}`] }\n        }\n      },\n      provider: () => {\n        const provider = new providers.InfuraProvider(\n          {\n            chainId: chain.id,\n            name: chain.network,\n            ensAddress: chain.contracts?.ensRegistry?.address\n          },\n          apiKey\n        );\n        return Object.assign(provider, { priority, stallTimeout, weight });\n      },\n      webSocketProvider: () => new providers.InfuraWebSocketProvider(\n        {\n          chainId: chain.id,\n          name: chain.network,\n          ensAddress: chain.contracts?.ensRegistry?.address\n        },\n        apiKey\n      )\n    };\n  };\n}\nexport {\n  infuraProvider\n};\n"],"mappings":"AAAA,OAAO,sBAAsB;;AAE7B;AACA,SAASA,SAAS,QAAQ,QAAQ;AAClC,SAASC,cAAc,OAKpB;EAAA,IALqB;IACtBC,MAAM;IACNC,QAAQ;IACRC,YAAY;IACZC;EACF,CAAC;EACC,OAAO,UAASC,KAAK,EAAE;IACrB,IAAI,CAACA,KAAK,CAACC,OAAO,CAACC,MAAM,EAAEC,IAAI,CAAC,CAAC,CAAC,EAChC,OAAO,IAAI;IACb,OAAO;MACLH,KAAK,EAAE;QACL,GAAGA,KAAK;QACRC,OAAO,EAAE;UACP,GAAGD,KAAK,CAACC,OAAO;UAChBG,OAAO,EAAE;YAAED,IAAI,EAAE,CAAE,GAAEH,KAAK,CAACC,OAAO,CAACC,MAAM,EAAEC,IAAI,CAAC,CAAC,CAAE,IAAGP,MAAO,EAAC;UAAE;QAClE;MACF,CAAC;MACDS,QAAQ,EAAE,MAAM;QACd,MAAMA,QAAQ,GAAG,IAAIX,SAAS,CAACY,cAAc,CAC3C;UACEC,OAAO,EAAEP,KAAK,CAACQ,EAAE;UACjBC,IAAI,EAAET,KAAK,CAACU,OAAO;UACnBC,UAAU,EAAEX,KAAK,CAACY,SAAS,EAAEC,WAAW,EAAEC;QAC5C,CAAC,EACDlB,MAAM,CACP;QACD,OAAOmB,MAAM,CAACC,MAAM,CAACX,QAAQ,EAAE;UAAER,QAAQ;UAAEC,YAAY;UAAEC;QAAO,CAAC,CAAC;MACpE,CAAC;MACDkB,iBAAiB,EAAE,MAAM,IAAIvB,SAAS,CAACwB,uBAAuB,CAC5D;QACEX,OAAO,EAAEP,KAAK,CAACQ,EAAE;QACjBC,IAAI,EAAET,KAAK,CAACU,OAAO;QACnBC,UAAU,EAAEX,KAAK,CAACY,SAAS,EAAEC,WAAW,EAAEC;MAC5C,CAAC,EACDlB,MAAM;IAEV,CAAC;EACH,CAAC;AACH;AACA,SACED,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}