{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _objectSpread = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _asyncToGenerator = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _require = require('multiformats/cid'),\n  CID = _require.CID;\nvar configure = require('../lib/configure');\nvar toUrlSearchParams = require('../lib/to-url-search-params');\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dag').API<HTTPClientExtraOptions>} DAGAPI\n */\n\nmodule.exports = configure(function (api) {\n  /**\n   * @type {DAGAPI[\"resolve\"]}\n   */\n  var resolve = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(ipfsPath) {\n      var options,\n        res,\n        data,\n        _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n            _context.next = 3;\n            return api.post('dag/resolve', {\n              signal: options.signal,\n              searchParams: toUrlSearchParams(_objectSpread({\n                arg: \"\".concat(ipfsPath).concat(options.path ? \"/\".concat(options.path).replace(/\\/[/]+/g, '/') : '')\n              }, options)),\n              headers: options.headers\n            });\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.json();\n          case 6:\n            data = _context.sent;\n            return _context.abrupt(\"return\", {\n              cid: CID.parse(data.Cid['/']),\n              remainderPath: data.RemPath\n            });\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return function resolve(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return resolve;\n});","map":{"version":3,"names":["require","CID","configure","toUrlSearchParams","module","exports","api","resolve","ipfsPath","options","post","signal","searchParams","arg","path","replace","headers","res","json","data","cid","parse","Cid","remainderPath","RemPath"],"sources":["C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/ipfs-http-client/src/dag/resolve.js"],"sourcesContent":["'use strict'\n\nconst { CID } = require('multiformats/cid')\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dag').API<HTTPClientExtraOptions>} DAGAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {DAGAPI[\"resolve\"]}\n   */\n  const resolve = async (ipfsPath, options = {}) => {\n    const res = await api.post('dag/resolve', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${ipfsPath}${options.path ? `/${options.path}`.replace(/\\/[/]+/g, '/') : ''}`,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    const data = await res.json()\n\n    return { cid: CID.parse(data.Cid['/']), remainderPath: data.RemPath }\n  }\n\n  return resolve\n})\n"],"mappings":"AAAA,YAAY;;AAAA;AAAA;AAAA;AAEZ,eAAgBA,OAAO,CAAC,kBAAkB,CAAC;EAAnCC,GAAG,YAAHA,GAAG;AACX,IAAMC,SAAS,GAAGF,OAAO,CAAC,kBAAkB,CAAC;AAC7C,IAAMG,iBAAiB,GAAGH,OAAO,CAAC,6BAA6B,CAAC;;AAEhE;AACA;AACA;AACA;;AAEAI,MAAM,CAACC,OAAO,GAAGH,SAAS,CAAC,UAAAI,GAAG,EAAI;EAChC;AACF;AACA;EACE,IAAMC,OAAO;IAAA,sEAAG,iBAAOC,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA;QAAA;UAAA;YAAEC,OAAO,2DAAG,CAAC,CAAC;YAAA;YAAA,OACzBH,GAAG,CAACI,IAAI,CAAC,aAAa,EAAE;cACxCC,MAAM,EAAEF,OAAO,CAACE,MAAM;cACtBC,YAAY,EAAET,iBAAiB;gBAC7BU,GAAG,YAAKL,QAAQ,SAAGC,OAAO,CAACK,IAAI,GAAG,WAAIL,OAAO,CAACK,IAAI,EAAGC,OAAO,CAAC,SAAS,EAAE,GAAG,CAAC,GAAG,EAAE;cAAE,GAChFN,OAAO,EACV;cACFO,OAAO,EAAEP,OAAO,CAACO;YACnB,CAAC,CAAC;UAAA;YAPIC,GAAG;YAAA;YAAA,OASUA,GAAG,CAACC,IAAI,EAAE;UAAA;YAAvBC,IAAI;YAAA,iCAEH;cAAEC,GAAG,EAAEnB,GAAG,CAACoB,KAAK,CAACF,IAAI,CAACG,GAAG,CAAC,GAAG,CAAC,CAAC;cAAEC,aAAa,EAAEJ,IAAI,CAACK;YAAQ,CAAC;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA,CACtE;IAAA,gBAbKjB,OAAO;MAAA;IAAA;EAAA,GAaZ;EAED,OAAOA,OAAO;AAChB,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}