{"ast":null,"code":"'use strict';\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pubsub').API<HTTPClientExtraOptions>} PubsubAPI\n * @typedef {import('../types').Options} Options\n */\n\n/**\n * @param {Options} options\n * @param {import('./subscription-tracker')} subsTracker\n */\nvar _regeneratorRuntime = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nmodule.exports = function (options, subsTracker) {\n  /**\n   * @type {PubsubAPI[\"unsubscribe\"]}\n   */\n  function unsubscribe(_x, _x2) {\n    return _unsubscribe.apply(this, arguments);\n  }\n  function _unsubscribe() {\n    _unsubscribe = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(topic, handler) {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            subsTracker.unsubscribe(topic, handler);\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return _unsubscribe.apply(this, arguments);\n  }\n  return unsubscribe;\n};","map":{"version":3,"names":["module","exports","options","subsTracker","unsubscribe","topic","handler"],"sources":["C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/ipfs-http-client/src/pubsub/unsubscribe.js"],"sourcesContent":["'use strict'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pubsub').API<HTTPClientExtraOptions>} PubsubAPI\n * @typedef {import('../types').Options} Options\n */\n\n/**\n * @param {Options} options\n * @param {import('./subscription-tracker')} subsTracker\n */\nmodule.exports = (options, subsTracker) => {\n  /**\n   * @type {PubsubAPI[\"unsubscribe\"]}\n   */\n  async function unsubscribe (topic, handler) {\n    subsTracker.unsubscribe(topic, handler)\n  }\n  return unsubscribe\n}\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAHA;AAAA;AAIAA,MAAM,CAACC,OAAO,GAAG,UAACC,OAAO,EAAEC,WAAW,EAAK;EACzC;AACF;AACA;EAFE,SAGeC,WAAW;IAAA;EAAA;EAAA;IAAA,0EAA1B,iBAA4BC,KAAK,EAAEC,OAAO;MAAA;QAAA;UAAA;YACxCH,WAAW,CAACC,WAAW,CAACC,KAAK,EAAEC,OAAO,CAAC;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA,CACxC;IAAA;EAAA;EACD,OAAOF,WAAW;AACpB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}