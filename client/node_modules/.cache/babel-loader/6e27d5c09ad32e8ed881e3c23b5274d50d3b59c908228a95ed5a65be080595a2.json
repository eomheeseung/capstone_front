{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as env from \"@walletconnect/environment\";\nimport { ENCRYPT_OP, DECRYPT_OP, SIGN_OP, VERIFY_OP, AES_BROWSER_ALGO, AES_LENGTH, HMAC_BROWSER_ALGO, HMAC_BROWSER, HMAC_LENGTH, SHA256_BROWSER_ALGO, SHA512_BROWSER_ALGO, LENGTH_512 } from \"../constants\";\nexport function getAlgo(type) {\n  return type === AES_BROWSER_ALGO ? {\n    length: AES_LENGTH,\n    name: AES_BROWSER_ALGO\n  } : {\n    hash: {\n      name: HMAC_BROWSER_ALGO\n    },\n    name: HMAC_BROWSER\n  };\n}\nexport function getOps(type) {\n  return type === AES_BROWSER_ALGO ? [ENCRYPT_OP, DECRYPT_OP] : [SIGN_OP, VERIFY_OP];\n}\nexport function browserExportKey(_x) {\n  return _browserExportKey.apply(this, arguments);\n}\nfunction _browserExportKey() {\n  _browserExportKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(cryptoKey) {\n    var type,\n      subtle,\n      _args = arguments;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          type = _args.length > 1 && _args[1] !== undefined ? _args[1] : AES_BROWSER_ALGO;\n          subtle = env.getSubtleCrypto();\n          _context.t0 = Uint8Array;\n          _context.next = 5;\n          return subtle.exportKey(\"raw\", cryptoKey);\n        case 5:\n          _context.t1 = _context.sent;\n          return _context.abrupt(\"return\", new _context.t0(_context.t1));\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _browserExportKey.apply(this, arguments);\n}\nexport function browserImportKey(_x2) {\n  return _browserImportKey.apply(this, arguments);\n}\nfunction _browserImportKey() {\n  _browserImportKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(buffer) {\n    var type,\n      _args2 = arguments;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          type = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : AES_BROWSER_ALGO;\n          return _context2.abrupt(\"return\", env.getSubtleCrypto().importKey(\"raw\", buffer, getAlgo(type), true, getOps(type)));\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _browserImportKey.apply(this, arguments);\n}\nexport function browserAesEncrypt(_x3, _x4, _x5) {\n  return _browserAesEncrypt.apply(this, arguments);\n}\nfunction _browserAesEncrypt() {\n  _browserAesEncrypt = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(iv, key, data) {\n    var subtle, cryptoKey, result;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          subtle = env.getSubtleCrypto();\n          _context3.next = 3;\n          return browserImportKey(key, AES_BROWSER_ALGO);\n        case 3:\n          cryptoKey = _context3.sent;\n          _context3.next = 6;\n          return subtle.encrypt({\n            iv: iv,\n            name: AES_BROWSER_ALGO\n          }, cryptoKey, data);\n        case 6:\n          result = _context3.sent;\n          return _context3.abrupt(\"return\", new Uint8Array(result));\n        case 8:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n  return _browserAesEncrypt.apply(this, arguments);\n}\nexport function browserAesDecrypt(_x6, _x7, _x8) {\n  return _browserAesDecrypt.apply(this, arguments);\n}\nfunction _browserAesDecrypt() {\n  _browserAesDecrypt = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(iv, key, data) {\n    var subtle, cryptoKey, result;\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          subtle = env.getSubtleCrypto();\n          _context4.next = 3;\n          return browserImportKey(key, AES_BROWSER_ALGO);\n        case 3:\n          cryptoKey = _context4.sent;\n          _context4.next = 6;\n          return subtle.decrypt({\n            iv: iv,\n            name: AES_BROWSER_ALGO\n          }, cryptoKey, data);\n        case 6:\n          result = _context4.sent;\n          return _context4.abrupt(\"return\", new Uint8Array(result));\n        case 8:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4);\n  }));\n  return _browserAesDecrypt.apply(this, arguments);\n}\nexport function browserHmacSha256Sign(_x9, _x10) {\n  return _browserHmacSha256Sign.apply(this, arguments);\n}\nfunction _browserHmacSha256Sign() {\n  _browserHmacSha256Sign = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(key, data) {\n    var subtle, cryptoKey, signature;\n    return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n      while (1) switch (_context5.prev = _context5.next) {\n        case 0:\n          subtle = env.getSubtleCrypto();\n          _context5.next = 3;\n          return browserImportKey(key, HMAC_BROWSER);\n        case 3:\n          cryptoKey = _context5.sent;\n          _context5.next = 6;\n          return subtle.sign({\n            length: HMAC_LENGTH,\n            name: HMAC_BROWSER\n          }, cryptoKey, data);\n        case 6:\n          signature = _context5.sent;\n          return _context5.abrupt(\"return\", new Uint8Array(signature));\n        case 8:\n        case \"end\":\n          return _context5.stop();\n      }\n    }, _callee5);\n  }));\n  return _browserHmacSha256Sign.apply(this, arguments);\n}\nexport function browserHmacSha512Sign(_x11, _x12) {\n  return _browserHmacSha512Sign.apply(this, arguments);\n}\nfunction _browserHmacSha512Sign() {\n  _browserHmacSha512Sign = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(key, data) {\n    var subtle, cryptoKey, signature;\n    return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n      while (1) switch (_context6.prev = _context6.next) {\n        case 0:\n          subtle = env.getSubtleCrypto();\n          _context6.next = 3;\n          return browserImportKey(key, HMAC_BROWSER);\n        case 3:\n          cryptoKey = _context6.sent;\n          _context6.next = 6;\n          return subtle.sign({\n            length: LENGTH_512,\n            name: HMAC_BROWSER\n          }, cryptoKey, data);\n        case 6:\n          signature = _context6.sent;\n          return _context6.abrupt(\"return\", new Uint8Array(signature));\n        case 8:\n        case \"end\":\n          return _context6.stop();\n      }\n    }, _callee6);\n  }));\n  return _browserHmacSha512Sign.apply(this, arguments);\n}\nexport function browserSha256(_x13) {\n  return _browserSha.apply(this, arguments);\n}\nfunction _browserSha() {\n  _browserSha = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(data) {\n    var subtle, result;\n    return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n      while (1) switch (_context7.prev = _context7.next) {\n        case 0:\n          subtle = env.getSubtleCrypto();\n          _context7.next = 3;\n          return subtle.digest({\n            name: SHA256_BROWSER_ALGO\n          }, data);\n        case 3:\n          result = _context7.sent;\n          return _context7.abrupt(\"return\", new Uint8Array(result));\n        case 5:\n        case \"end\":\n          return _context7.stop();\n      }\n    }, _callee7);\n  }));\n  return _browserSha.apply(this, arguments);\n}\nexport function browserSha512(_x14) {\n  return _browserSha2.apply(this, arguments);\n}\nfunction _browserSha2() {\n  _browserSha2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(data) {\n    var subtle, result;\n    return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n      while (1) switch (_context8.prev = _context8.next) {\n        case 0:\n          subtle = env.getSubtleCrypto();\n          _context8.next = 3;\n          return subtle.digest({\n            name: SHA512_BROWSER_ALGO\n          }, data);\n        case 3:\n          result = _context8.sent;\n          return _context8.abrupt(\"return\", new Uint8Array(result));\n        case 5:\n        case \"end\":\n          return _context8.stop();\n      }\n    }, _callee8);\n  }));\n  return _browserSha2.apply(this, arguments);\n}","map":{"version":3,"mappings":"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","names":["env","ENCRYPT_OP","DECRYPT_OP","SIGN_OP","VERIFY_OP","AES_BROWSER_ALGO","AES_LENGTH","HMAC_BROWSER_ALGO","HMAC_BROWSER","HMAC_LENGTH","SHA256_BROWSER_ALGO","SHA512_BROWSER_ALGO","LENGTH_512","getAlgo","type","length","name","hash","getOps","browserExportKey","cryptoKey","subtle","getSubtleCrypto","Uint8Array","exportKey","browserImportKey","buffer","importKey","browserAesEncrypt","iv","key","data","encrypt","result","browserAesDecrypt","decrypt","browserHmacSha256Sign","sign","signature","browserHmacSha512Sign","browserSha256","digest","browserSha512"],"sources":["../../../src/lib/browser.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}