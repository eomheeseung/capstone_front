{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar configure = require('../lib/configure');\nvar resolve = require('../lib/resolve');\nvar first = require('it-first');\nvar last = require('it-last');\nvar errCode = require('err-code');\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dag').API<HTTPClientExtraOptions>} DAGAPI\n */\n\n/**\n * @param {import('ipfs-core-utils/src/multicodecs')} codecs\n * @param {import('../types').Options} options\n */\nmodule.exports = function (codecs, options) {\n  var fn = configure(function (api, opts) {\n    var getBlock = require('../block/get')(opts);\n\n    /**\n     * @type {DAGAPI[\"get\"]}\n     */\n    var get = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(cid) {\n        var options,\n          entry,\n          result,\n          codec,\n          block,\n          node,\n          _args = arguments;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              if (!options.path) {\n                _context.next = 16;\n                break;\n              }\n              if (!options.localResolve) {\n                _context.next = 8;\n                break;\n              }\n              _context.next = 5;\n              return first(resolve(cid, options.path, codecs, getBlock, options));\n            case 5:\n              _context.t0 = _context.sent;\n              _context.next = 11;\n              break;\n            case 8:\n              _context.next = 10;\n              return last(resolve(cid, options.path, codecs, getBlock, options));\n            case 10:\n              _context.t0 = _context.sent;\n            case 11:\n              entry = _context.t0;\n              /** @type {import('ipfs-core-types/src/dag').GetResult} - first and last will return undefined when empty */\n              result = entry;\n              if (result) {\n                _context.next = 15;\n                break;\n              }\n              throw errCode(new Error('Not found'), 'ERR_NOT_FOUND');\n            case 15:\n              return _context.abrupt(\"return\", result);\n            case 16:\n              _context.next = 18;\n              return codecs.getCodec(cid.code);\n            case 18:\n              codec = _context.sent;\n              _context.next = 21;\n              return getBlock(cid, options);\n            case 21:\n              block = _context.sent;\n              node = codec.decode(block);\n              return _context.abrupt(\"return\", {\n                value: node,\n                remainderPath: ''\n              });\n            case 24:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      return function get(_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    return get;\n  });\n  return fn(options);\n};","map":{"version":3,"names":["configure","require","resolve","first","last","errCode","module","exports","codecs","options","fn","api","opts","getBlock","get","cid","path","localResolve","entry","result","Error","getCodec","code","codec","block","node","decode","value","remainderPath"],"sources":["C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/ipfs-http-client/src/dag/get.js"],"sourcesContent":["'use strict'\n\nconst configure = require('../lib/configure')\nconst resolve = require('../lib/resolve')\nconst first = require('it-first')\nconst last = require('it-last')\nconst errCode = require('err-code')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dag').API<HTTPClientExtraOptions>} DAGAPI\n */\n\n/**\n * @param {import('ipfs-core-utils/src/multicodecs')} codecs\n * @param {import('../types').Options} options\n */\nmodule.exports = (codecs, options) => {\n  const fn = configure((api, opts) => {\n    const getBlock = require('../block/get')(opts)\n\n    /**\n     * @type {DAGAPI[\"get\"]}\n     */\n    const get = async (cid, options = {}) => {\n      if (options.path) {\n        const entry = options.localResolve\n          ? await first(resolve(cid, options.path, codecs, getBlock, options))\n          : await last(resolve(cid, options.path, codecs, getBlock, options))\n        /** @type {import('ipfs-core-types/src/dag').GetResult} - first and last will return undefined when empty */\n        const result = (entry)\n\n        if (!result) {\n          throw errCode(new Error('Not found'), 'ERR_NOT_FOUND')\n        }\n\n        return result\n      }\n\n      const codec = await codecs.getCodec(cid.code)\n      const block = await getBlock(cid, options)\n      const node = codec.decode(block)\n\n      return {\n        value: node,\n        remainderPath: ''\n      }\n    }\n\n    return get\n  })\n\n  return fn(options)\n}\n"],"mappings":"AAAA,YAAY;;AAAA;AAAA;AAEZ,IAAMA,SAAS,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAC7C,IAAMC,OAAO,GAAGD,OAAO,CAAC,gBAAgB,CAAC;AACzC,IAAME,KAAK,GAAGF,OAAO,CAAC,UAAU,CAAC;AACjC,IAAMG,IAAI,GAAGH,OAAO,CAAC,SAAS,CAAC;AAC/B,IAAMI,OAAO,GAAGJ,OAAO,CAAC,UAAU,CAAC;;AAEnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACAK,MAAM,CAACC,OAAO,GAAG,UAACC,MAAM,EAAEC,OAAO,EAAK;EACpC,IAAMC,EAAE,GAAGV,SAAS,CAAC,UAACW,GAAG,EAAEC,IAAI,EAAK;IAClC,IAAMC,QAAQ,GAAGZ,OAAO,CAAC,cAAc,CAAC,CAACW,IAAI,CAAC;;IAE9C;AACJ;AACA;IACI,IAAME,GAAG;MAAA,sEAAG,iBAAOC,GAAG;QAAA;UAAA;UAAA;UAAA;UAAA;UAAA;UAAA;QAAA;UAAA;YAAA;cAAEN,OAAO,2DAAG,CAAC,CAAC;cAAA,KAC9BA,OAAO,CAACO,IAAI;gBAAA;gBAAA;cAAA;cAAA,KACAP,OAAO,CAACQ,YAAY;gBAAA;gBAAA;cAAA;cAAA;cAAA,OACxBd,KAAK,CAACD,OAAO,CAACa,GAAG,EAAEN,OAAO,CAACO,IAAI,EAAER,MAAM,EAAEK,QAAQ,EAAEJ,OAAO,CAAC,CAAC;YAAA;cAAA;cAAA;cAAA;YAAA;cAAA;cAAA,OAC5DL,IAAI,CAACF,OAAO,CAACa,GAAG,EAAEN,OAAO,CAACO,IAAI,EAAER,MAAM,EAAEK,QAAQ,EAAEJ,OAAO,CAAC,CAAC;YAAA;cAAA;YAAA;cAF/DS,KAAK;cAGX;cACMC,MAAM,GAAID,KAAK;cAAA,IAEhBC,MAAM;gBAAA;gBAAA;cAAA;cAAA,MACHd,OAAO,CAAC,IAAIe,KAAK,CAAC,WAAW,CAAC,EAAE,eAAe,CAAC;YAAA;cAAA,iCAGjDD,MAAM;YAAA;cAAA;cAAA,OAGKX,MAAM,CAACa,QAAQ,CAACN,GAAG,CAACO,IAAI,CAAC;YAAA;cAAvCC,KAAK;cAAA;cAAA,OACSV,QAAQ,CAACE,GAAG,EAAEN,OAAO,CAAC;YAAA;cAApCe,KAAK;cACLC,IAAI,GAAGF,KAAK,CAACG,MAAM,CAACF,KAAK,CAAC;cAAA,iCAEzB;gBACLG,KAAK,EAAEF,IAAI;gBACXG,aAAa,EAAE;cACjB,CAAC;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA,CACF;MAAA,gBAvBKd,GAAG;QAAA;MAAA;IAAA,GAuBR;IAED,OAAOA,GAAG;EACZ,CAAC,CAAC;EAEF,OAAOJ,EAAE,CAACD,OAAO,CAAC;AACpB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}