{"ast":null,"code":"'use strict';\n\nconst configure = require('../lib/configure');\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/name').API<HTTPClientExtraOptions>} NameAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {NameAPI[\"resolve\"]}\n   */\n  function resolve(path) {\n    try {\n      let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return async function* () {\n        const res = await api.post('name/resolve', {\n          signal: options.signal,\n          searchParams: toUrlSearchParams({\n            arg: path,\n            stream: true,\n            ...options\n          }),\n          headers: options.headers\n        });\n        for await (const result of res.ndjson()) {\n          yield result.Path;\n        }\n      }();\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }\n  return resolve;\n});","map":{"version":3,"names":["configure","require","toUrlSearchParams","module","exports","api","resolve","path","options","res","post","signal","searchParams","arg","stream","headers","result","ndjson","Path"],"sources":["C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/ipfs-http-client/src/name/resolve.js"],"sourcesContent":["'use strict'\n\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/name').API<HTTPClientExtraOptions>} NameAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {NameAPI[\"resolve\"]}\n   */\n  async function * resolve (path, options = {}) {\n    const res = await api.post('name/resolve', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        stream: true,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    for await (const result of res.ndjson()) {\n      yield result.Path\n    }\n  }\n  return resolve\n})\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,SAAS,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAC7C,MAAMC,iBAAiB,GAAGD,OAAO,CAAC,6BAA6B,CAAC;;AAEhE;AACA;AACA;AACA;;AAEAE,MAAM,CAACC,OAAO,GAAGJ,SAAS,CAACK,GAAG,IAAI;EAChC;AACF;AACA;EACE,SAAiBC,OAAO,CAAEC,IAAI;IAAA;MAAA,IAAEC,OAAO,uEAAG,CAAC,CAAC;MAAA,0BAAE;QAC5C,MAAMC,GAAG,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,cAAc,EAAE;UACzCC,MAAM,EAAEH,OAAO,CAACG,MAAM;UACtBC,YAAY,EAAEV,iBAAiB,CAAC;YAC9BW,GAAG,EAAEN,IAAI;YACTO,MAAM,EAAE,IAAI;YACZ,GAAGN;UACL,CAAC,CAAC;UACFO,OAAO,EAAEP,OAAO,CAACO;QACnB,CAAC,CAAC;QAEF,WAAW,MAAMC,MAAM,IAAIP,GAAG,CAACQ,MAAM,EAAE,EAAE;UACvC,MAAMD,MAAM,CAACE,IAAI;QACnB;MACF,CAAC;IAAA;MAAA;IAAA;EAAA;EACD,OAAOZ,OAAO;AAChB,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}