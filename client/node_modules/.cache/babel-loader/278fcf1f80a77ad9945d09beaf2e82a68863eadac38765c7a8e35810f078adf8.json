{"ast":null,"code":"'use strict';\n\n/**\n * Returns the last item of an (async) iterable, unless empty, in which case\n * return `undefined`.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n */\nvar _regeneratorRuntime = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _asyncIterator = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/asyncIterator.js\").default;\nvar last = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(source) {\n    var res, _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, entry;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _iteratorAbruptCompletion = false;\n          _didIteratorError = false;\n          _context.prev = 2;\n          _iterator = _asyncIterator(source);\n        case 4:\n          _context.next = 6;\n          return _iterator.next();\n        case 6:\n          if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n            _context.next = 12;\n            break;\n          }\n          entry = _step.value;\n          res = entry;\n        case 9:\n          _iteratorAbruptCompletion = false;\n          _context.next = 4;\n          break;\n        case 12:\n          _context.next = 18;\n          break;\n        case 14:\n          _context.prev = 14;\n          _context.t0 = _context[\"catch\"](2);\n          _didIteratorError = true;\n          _iteratorError = _context.t0;\n        case 18:\n          _context.prev = 18;\n          _context.prev = 19;\n          if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n            _context.next = 23;\n            break;\n          }\n          _context.next = 23;\n          return _iterator.return();\n        case 23:\n          _context.prev = 23;\n          if (!_didIteratorError) {\n            _context.next = 26;\n            break;\n          }\n          throw _iteratorError;\n        case 26:\n          return _context.finish(23);\n        case 27:\n          return _context.finish(18);\n        case 28:\n          return _context.abrupt(\"return\", res);\n        case 29:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[2, 14, 18, 28], [19,, 23, 27]]);\n  }));\n  return function last(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nmodule.exports = last;","map":{"version":3,"names":["last","source","entry","res","module","exports"],"sources":["C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/it-last/index.js"],"sourcesContent":["'use strict'\n\n/**\n * Returns the last item of an (async) iterable, unless empty, in which case\n * return `undefined`.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n */\nconst last = async (source) => {\n  let res\n\n  for await (const entry of source) {\n    res = entry\n  }\n\n  return res\n}\n\nmodule.exports = last\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAOA,IAAMA,IAAI;EAAA,sEAAG,iBAAOC,MAAM;IAAA;IAAA;MAAA;QAAA;UAAA;UAAA;UAAA;UAAA,2BAGEA,MAAM;QAAA;UAAA;UAAA;QAAA;UAAA;YAAA;YAAA;UAAA;UAAfC,KAAK;UACpBC,GAAG,GAAGD,KAAK;QAAA;UAAA;UAAA;UAAA;QAAA;UAAA;UAAA;QAAA;UAAA;UAAA;UAAA;UAAA;QAAA;UAAA;UAAA;UAAA;YAAA;YAAA;UAAA;UAAA;UAAA;QAAA;UAAA;UAAA;YAAA;YAAA;UAAA;UAAA;QAAA;UAAA;QAAA;UAAA;QAAA;UAAA,iCAGNC,GAAG;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,CACX;EAAA,gBARKH,IAAI;IAAA;EAAA;AAAA,GAQT;AAEDI,MAAM,CAACC,OAAO,GAAGL,IAAI"},"metadata":{},"sourceType":"script","externalDependencies":[]}