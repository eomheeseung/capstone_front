{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _objectSpread = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _awaitAsyncGenerator = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/awaitAsyncGenerator.js\").default;\nvar _wrapAsyncGenerator = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/wrapAsyncGenerator.js\").default;\nvar _asyncIterator = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/asyncIterator.js\").default;\nvar _require = require('multiformats/cid'),\n  CID = _require.CID;\nvar configure = require('../lib/configure');\nvar toUrlSearchParams = require('../lib/to-url-search-params');\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/block').API<HTTPClientExtraOptions>} BlockAPI\n * @typedef {import('ipfs-core-types/src/block').RmResult} RmResult\n */\n\nmodule.exports = configure(function (api) {\n  /**\n   * @type {BlockAPI[\"rm\"]}\n   */\n  function rm(_x) {\n    return _rm.apply(this, arguments);\n  }\n  function _rm() {\n    _rm = _wrapAsyncGenerator(function (cid) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var res, _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, removed;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!Array.isArray(cid)) {\n                cid = [cid];\n              }\n              _context.next = 3;\n              return _awaitAsyncGenerator(api.post('block/rm', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams(_objectSpread({\n                  arg: cid.map(function (cid) {\n                    return cid.toString();\n                  }),\n                  'stream-channels': true\n                }, options)),\n                headers: options.headers\n              }));\n            case 3:\n              res = _context.sent;\n              _iteratorAbruptCompletion = false;\n              _didIteratorError = false;\n              _context.prev = 6;\n              _iterator = _asyncIterator(res.ndjson());\n            case 8:\n              _context.next = 10;\n              return _awaitAsyncGenerator(_iterator.next());\n            case 10:\n              if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n                _context.next = 17;\n                break;\n              }\n              removed = _step.value;\n              _context.next = 14;\n              return toCoreInterface(removed);\n            case 14:\n              _iteratorAbruptCompletion = false;\n              _context.next = 8;\n              break;\n            case 17:\n              _context.next = 23;\n              break;\n            case 19:\n              _context.prev = 19;\n              _context.t0 = _context[\"catch\"](6);\n              _didIteratorError = true;\n              _iteratorError = _context.t0;\n            case 23:\n              _context.prev = 23;\n              _context.prev = 24;\n              if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                _context.next = 28;\n                break;\n              }\n              _context.next = 28;\n              return _awaitAsyncGenerator(_iterator.return());\n            case 28:\n              _context.prev = 28;\n              if (!_didIteratorError) {\n                _context.next = 31;\n                break;\n              }\n              throw _iteratorError;\n            case 31:\n              return _context.finish(28);\n            case 32:\n              return _context.finish(23);\n            case 33:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[6, 19, 23, 33], [24,, 28, 32]]);\n      })();\n    });\n    return _rm.apply(this, arguments);\n  }\n  return rm;\n});\n\n/**\n * @param {*} removed\n */\nfunction toCoreInterface(removed) {\n  /** @type {RmResult} */\n  var out = {\n    cid: CID.parse(removed.Hash)\n  };\n  if (removed.Error) {\n    out.error = new Error(removed.Error);\n  }\n  return out;\n}","map":{"version":3,"names":["require","CID","configure","toUrlSearchParams","module","exports","api","rm","cid","options","Array","isArray","post","signal","searchParams","arg","map","toString","headers","res","ndjson","removed","toCoreInterface","out","parse","Hash","Error","error"],"sources":["C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/ipfs-http-client/src/block/rm.js"],"sourcesContent":["'use strict'\n\nconst { CID } = require('multiformats/cid')\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/block').API<HTTPClientExtraOptions>} BlockAPI\n * @typedef {import('ipfs-core-types/src/block').RmResult} RmResult\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {BlockAPI[\"rm\"]}\n   */\n  async function * rm (cid, options = {}) {\n    if (!Array.isArray(cid)) {\n      cid = [cid]\n    }\n\n    const res = await api.post('block/rm', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cid.map(cid => cid.toString()),\n        'stream-channels': true,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    for await (const removed of res.ndjson()) {\n      yield toCoreInterface(removed)\n    }\n  }\n\n  return rm\n})\n\n/**\n * @param {*} removed\n */\nfunction toCoreInterface (removed) {\n  /** @type {RmResult} */\n  const out = {\n    cid: CID.parse(removed.Hash)\n  }\n\n  if (removed.Error) {\n    out.error = new Error(removed.Error)\n  }\n\n  return out\n}\n"],"mappings":"AAAA,YAAY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEZ,eAAgBA,OAAO,CAAC,kBAAkB,CAAC;EAAnCC,GAAG,YAAHA,GAAG;AACX,IAAMC,SAAS,GAAGF,OAAO,CAAC,kBAAkB,CAAC;AAC7C,IAAMG,iBAAiB,GAAGH,OAAO,CAAC,6BAA6B,CAAC;;AAEhE;AACA;AACA;AACA;AACA;;AAEAI,MAAM,CAACC,OAAO,GAAGH,SAAS,CAAC,UAAAI,GAAG,EAAI;EAChC;AACF;AACA;EAFE,SAGiBC,EAAE;IAAA;EAAA;EAAA;IAAA,0BAAnB,UAAqBC,GAAG;MAAA,IAAEC,OAAO,uEAAG,CAAC,CAAC;MAAA;QAAA;QAAA;UAAA;YAAA;cACpC,IAAI,CAACC,KAAK,CAACC,OAAO,CAACH,GAAG,CAAC,EAAE;gBACvBA,GAAG,GAAG,CAACA,GAAG,CAAC;cACb;cAAC;cAAA,4BAEiBF,GAAG,CAACM,IAAI,CAAC,UAAU,EAAE;gBACrCC,MAAM,EAAEJ,OAAO,CAACI,MAAM;gBACtBC,YAAY,EAAEX,iBAAiB;kBAC7BY,GAAG,EAAEP,GAAG,CAACQ,GAAG,CAAC,UAAAR,GAAG;oBAAA,OAAIA,GAAG,CAACS,QAAQ,EAAE;kBAAA,EAAC;kBACnC,iBAAiB,EAAE;gBAAI,GACpBR,OAAO,EACV;gBACFS,OAAO,EAAET,OAAO,CAACS;cACnB,CAAC,CAAC;YAAA;cARIC,GAAG;cAAA;cAAA;cAAA;cAAA,2BAUmBA,GAAG,CAACC,MAAM,EAAE;YAAA;cAAA;cAAA;YAAA;cAAA;gBAAA;gBAAA;cAAA;cAAvBC,OAAO;cAAA;cACtB,OAAMC,eAAe,CAACD,OAAO,CAAC;YAAA;cAAA;cAAA;cAAA;YAAA;cAAA;cAAA;YAAA;cAAA;cAAA;cAAA;cAAA;YAAA;cAAA;cAAA;cAAA;gBAAA;gBAAA;cAAA;cAAA;cAAA;YAAA;cAAA;cAAA;gBAAA;gBAAA;cAAA;cAAA;YAAA;cAAA;YAAA;cAAA;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAEjC;IAAA;EAAA;EAED,OAAOd,EAAE;AACX,CAAC,CAAC;;AAEF;AACA;AACA;AACA,SAASe,eAAe,CAAED,OAAO,EAAE;EACjC;EACA,IAAME,GAAG,GAAG;IACVf,GAAG,EAAEP,GAAG,CAACuB,KAAK,CAACH,OAAO,CAACI,IAAI;EAC7B,CAAC;EAED,IAAIJ,OAAO,CAACK,KAAK,EAAE;IACjBH,GAAG,CAACI,KAAK,GAAG,IAAID,KAAK,CAACL,OAAO,CAACK,KAAK,CAAC;EACtC;EAEA,OAAOH,GAAG;AACZ"},"metadata":{},"sourceType":"script","externalDependencies":[]}