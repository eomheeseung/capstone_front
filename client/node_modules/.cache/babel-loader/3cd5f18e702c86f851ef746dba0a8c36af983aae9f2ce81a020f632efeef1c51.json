{"ast":null,"code":"'use strict';\n\nvar _require = require('multiaddr'),\n  Multiaddr = _require.Multiaddr;\n// @ts-ignore no types\nvar multiAddrToUri = require('multiaddr-to-uri');\n\n/**\n * @param {string|Multiaddr|URL} url - A string, multiaddr or URL to convert to a url string\n * @returns {string}\n */\nmodule.exports = function (url) {\n  try {\n    // @ts-expect-error\n    url = multiAddrToUri(new Multiaddr(url));\n  } catch (err) {}\n  url = url.toString();\n  return url;\n};","map":{"version":3,"names":["require","Multiaddr","multiAddrToUri","module","exports","url","err","toString"],"sources":["C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/ipfs-core-utils/src/to-url-string.js"],"sourcesContent":["'use strict'\n\nconst { Multiaddr } = require('multiaddr')\n// @ts-ignore no types\nconst multiAddrToUri = require('multiaddr-to-uri')\n\n/**\n * @param {string|Multiaddr|URL} url - A string, multiaddr or URL to convert to a url string\n * @returns {string}\n */\nmodule.exports = (url) => {\n  try {\n    // @ts-expect-error\n    url = multiAddrToUri(new Multiaddr(url))\n  } catch (err) { }\n\n  url = url.toString()\n\n  return url\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,eAAsBA,OAAO,CAAC,WAAW,CAAC;EAAlCC,SAAS,YAATA,SAAS;AACjB;AACA,IAAMC,cAAc,GAAGF,OAAO,CAAC,kBAAkB,CAAC;;AAElD;AACA;AACA;AACA;AACAG,MAAM,CAACC,OAAO,GAAG,UAACC,GAAG,EAAK;EACxB,IAAI;IACF;IACAA,GAAG,GAAGH,cAAc,CAAC,IAAID,SAAS,CAACI,GAAG,CAAC,CAAC;EAC1C,CAAC,CAAC,OAAOC,GAAG,EAAE,CAAE;EAEhBD,GAAG,GAAGA,GAAG,CAACE,QAAQ,EAAE;EAEpB,OAAOF,GAAG;AACZ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}