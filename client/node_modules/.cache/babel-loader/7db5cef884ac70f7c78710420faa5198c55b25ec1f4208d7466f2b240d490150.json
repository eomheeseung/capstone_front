{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _objectSpread = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _asyncToGenerator = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar modeToString = require('../lib/mode-to-string');\nvar parseMtime = require('../lib/parse-mtime');\nvar configure = require('../lib/configure');\nvar multipartRequest = require('../lib/multipart-request');\nvar toUrlSearchParams = require('../lib/to-url-search-params');\nvar abortSignal = require('../lib/abort-signal');\nvar _require = require('native-abort-controller'),\n  AbortController = _require.AbortController;\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nmodule.exports = configure(function (api) {\n  /**\n   * @type {FilesAPI[\"write\"]}\n   */\n  function write(_x, _x2) {\n    return _write.apply(this, arguments);\n  }\n  function _write() {\n    _write = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(path, input) {\n      var options,\n        controller,\n        signal,\n        res,\n        _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};\n            // allow aborting requests on body errors\n            controller = new AbortController();\n            signal = abortSignal(controller.signal, options.signal);\n            _context.t0 = api;\n            _context.t1 = _objectSpread;\n            _context.t2 = {\n              signal: signal,\n              searchParams: toUrlSearchParams(_objectSpread({\n                arg: path,\n                streamChannels: true,\n                count: options.length\n              }, options))\n            };\n            _context.next = 8;\n            return multipartRequest({\n              content: input,\n              path: 'arg',\n              mode: modeToString(options.mode),\n              mtime: parseMtime(options.mtime)\n            }, controller, options.headers);\n          case 8:\n            _context.t3 = _context.sent;\n            _context.t4 = (0, _context.t1)(_context.t2, _context.t3);\n            _context.next = 12;\n            return _context.t0.post.call(_context.t0, 'files/write', _context.t4);\n          case 12:\n            res = _context.sent;\n            _context.next = 15;\n            return res.text();\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return _write.apply(this, arguments);\n  }\n  return write;\n});","map":{"version":3,"names":["modeToString","require","parseMtime","configure","multipartRequest","toUrlSearchParams","abortSignal","AbortController","module","exports","api","write","path","input","options","controller","signal","searchParams","arg","streamChannels","count","length","content","mode","mtime","headers","post","res","text"],"sources":["C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/ipfs-http-client/src/files/write.js"],"sourcesContent":["'use strict'\n\nconst modeToString = require('../lib/mode-to-string')\nconst parseMtime = require('../lib/parse-mtime')\nconst configure = require('../lib/configure')\nconst multipartRequest = require('../lib/multipart-request')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\nconst abortSignal = require('../lib/abort-signal')\nconst { AbortController } = require('native-abort-controller')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {FilesAPI[\"write\"]}\n   */\n  async function write (path, input, options = {}) {\n    // allow aborting requests on body errors\n    const controller = new AbortController()\n    const signal = abortSignal(controller.signal, options.signal)\n\n    const res = await api.post('files/write', {\n      signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        streamChannels: true,\n        count: options.length,\n        ...options\n      }),\n      ...(\n        await multipartRequest({\n          content: input,\n          path: 'arg',\n          mode: modeToString(options.mode),\n          mtime: parseMtime(options.mtime)\n        }, controller, options.headers)\n      )\n    })\n\n    await res.text()\n  }\n  return write\n})\n"],"mappings":"AAAA,YAAY;;AAAA;AAAA;AAAA;AAEZ,IAAMA,YAAY,GAAGC,OAAO,CAAC,uBAAuB,CAAC;AACrD,IAAMC,UAAU,GAAGD,OAAO,CAAC,oBAAoB,CAAC;AAChD,IAAME,SAAS,GAAGF,OAAO,CAAC,kBAAkB,CAAC;AAC7C,IAAMG,gBAAgB,GAAGH,OAAO,CAAC,0BAA0B,CAAC;AAC5D,IAAMI,iBAAiB,GAAGJ,OAAO,CAAC,6BAA6B,CAAC;AAChE,IAAMK,WAAW,GAAGL,OAAO,CAAC,qBAAqB,CAAC;AAClD,eAA4BA,OAAO,CAAC,yBAAyB,CAAC;EAAtDM,eAAe,YAAfA,eAAe;;AAEvB;AACA;AACA;AACA;;AAEAC,MAAM,CAACC,OAAO,GAAGN,SAAS,CAAC,UAAAO,GAAG,EAAI;EAChC;AACF;AACA;EAFE,SAGeC,KAAK;IAAA;EAAA;EAAA;IAAA,oEAApB,iBAAsBC,IAAI,EAAEC,KAAK;MAAA;QAAA;QAAA;QAAA;QAAA;MAAA;QAAA;UAAA;YAAEC,OAAO,2DAAG,CAAC,CAAC;YAC7C;YACMC,UAAU,GAAG,IAAIR,eAAe,EAAE;YAClCS,MAAM,GAAGV,WAAW,CAACS,UAAU,CAACC,MAAM,EAAEF,OAAO,CAACE,MAAM,CAAC;YAAA,cAE3CN,GAAG;YAAA;YAAA;cACnBM,MAAM,EAANA,MAAM;cACNC,YAAY,EAAEZ,iBAAiB;gBAC7Ba,GAAG,EAAEN,IAAI;gBACTO,cAAc,EAAE,IAAI;gBACpBC,KAAK,EAAEN,OAAO,CAACO;cAAM,GAClBP,OAAO;YACV;YAAA;YAAA,OAEMV,gBAAgB,CAAC;cACrBkB,OAAO,EAAET,KAAK;cACdD,IAAI,EAAE,KAAK;cACXW,IAAI,EAAEvB,YAAY,CAACc,OAAO,CAACS,IAAI,CAAC;cAChCC,KAAK,EAAEtB,UAAU,CAACY,OAAO,CAACU,KAAK;YACjC,CAAC,EAAET,UAAU,EAAED,OAAO,CAACW,OAAO,CAAC;UAAA;YAAA;YAAA;YAAA;YAAA,mBAdbC,IAAI,mBAAC,aAAa;UAAA;YAAlCC,GAAG;YAAA;YAAA,OAkBHA,GAAG,CAACC,IAAI,EAAE;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA,CACjB;IAAA;EAAA;EACD,OAAOjB,KAAK;AACd,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}