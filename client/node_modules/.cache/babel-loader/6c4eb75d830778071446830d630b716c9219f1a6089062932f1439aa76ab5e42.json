{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _wrapAsyncGenerator = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/wrapAsyncGenerator.js\").default;\nvar _awaitAsyncGenerator = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/awaitAsyncGenerator.js\").default;\nvar _asyncGeneratorDelegate = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/asyncGeneratorDelegate.js\").default;\nvar _asyncIterator = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/asyncIterator.js\").default;\nvar toCamel = require('../lib/object-to-camel');\nvar configure = require('../lib/configure');\nvar toUrlSearchParams = require('../lib/to-url-search-params');\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/refs').API<HTTPClientExtraOptions>} RefsAPI\n */\n\nmodule.exports = configure(function (api) {\n  /**\n   * @type {RefsAPI[\"local\"]}\n   */\n  function refsLocal() {\n    return _refsLocal.apply(this, arguments);\n  }\n  function _refsLocal() {\n    _refsLocal = _wrapAsyncGenerator(function () {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var res;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _awaitAsyncGenerator(api.post('refs/local', {\n                signal: options.signal,\n                transform: toCamel,\n                searchParams: toUrlSearchParams(options),\n                headers: options.headers\n              }));\n            case 2:\n              res = _context.sent;\n              return _context.delegateYield(_asyncGeneratorDelegate(_asyncIterator(res.ndjson()), _awaitAsyncGenerator), \"t0\", 4);\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      })();\n    });\n    return _refsLocal.apply(this, arguments);\n  }\n  return refsLocal;\n});","map":{"version":3,"names":["toCamel","require","configure","toUrlSearchParams","module","exports","api","refsLocal","options","post","signal","transform","searchParams","headers","res","ndjson"],"sources":["C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/ipfs-http-client/src/refs/local.js"],"sourcesContent":["'use strict'\n\nconst toCamel = require('../lib/object-to-camel')\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/refs').API<HTTPClientExtraOptions>} RefsAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {RefsAPI[\"local\"]}\n   */\n  async function * refsLocal (options = {}) {\n    const res = await api.post('refs/local', {\n      signal: options.signal,\n      transform: toCamel,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    yield * res.ndjson()\n  }\n  return refsLocal\n})\n"],"mappings":"AAAA,YAAY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEZ,IAAMA,OAAO,GAAGC,OAAO,CAAC,wBAAwB,CAAC;AACjD,IAAMC,SAAS,GAAGD,OAAO,CAAC,kBAAkB,CAAC;AAC7C,IAAME,iBAAiB,GAAGF,OAAO,CAAC,6BAA6B,CAAC;;AAEhE;AACA;AACA;AACA;;AAEAG,MAAM,CAACC,OAAO,GAAGH,SAAS,CAAC,UAAAI,GAAG,EAAI;EAChC;AACF;AACA;EAFE,SAGiBC,SAAS;IAAA;EAAA;EAAA;IAAA,iCAA1B;MAAA,IAA4BC,OAAO,uEAAG,CAAC,CAAC;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;cAAA,4BACpBF,GAAG,CAACG,IAAI,CAAC,YAAY,EAAE;gBACvCC,MAAM,EAAEF,OAAO,CAACE,MAAM;gBACtBC,SAAS,EAAEX,OAAO;gBAClBY,YAAY,EAAET,iBAAiB,CAACK,OAAO,CAAC;gBACxCK,OAAO,EAAEL,OAAO,CAACK;cACnB,CAAC,CAAC;YAAA;cALIC,GAAG;cAOT,qEAAQA,GAAG,CAACC,MAAM,EAAE;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CACrB;IAAA;EAAA;EACD,OAAOR,SAAS;AAClB,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}