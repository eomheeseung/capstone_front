{"ast":null,"code":"import{combineReducers}from\"redux\";// const songsReducer =() =>{\n//     //여기서 json song파일을 import하는게 아닌 \n//     //블록에서 json파일 가져와서 가공해야할거같은데..\n//     //js파일로 블록 리스트 데이터 전부 반환해서 여기로 던지면 json으로 던질수잇을까? 이걸 지금 해보자\n//     return songs;\n// };\nvar selectedSongIdReducer=function selectedSongIdReducer(){var selectedSongId=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;var action=arguments.length>1?arguments[1]:undefined;if(action.type===\"SONG_SELECTED\"){return action.payload.id;}if(action.type===\"SONG_SELECTED_BY_ID\"){return action.payload;}return selectedSongId;};var playerStateReducer=function playerStateReducer(){var playerState=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;var action=arguments.length>1?arguments[1]:undefined;if(action.type===\"PLAYER_STATE_SELECTED\"&&!action.payload){return(playerState+1)%2;}else if(action.type===\"PLAYER_STATE_SELECTED\"&&action.payload){return action.payload;}return playerState;};var volumeReducer=function volumeReducer(){var volume=arguments.length>0&&arguments[0]!==undefined?arguments[0]:100;var action=arguments.length>1?arguments[1]:undefined;if(action.type===\"SET_VOLUME\"){return action.payload;}return volume;};var durationReducer=function durationReducer(){var duration=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;var action=arguments.length>1?arguments[1]:undefined;if(action.type===\"SET_DURATION\"){return action.payload;}return duration;};var currentLocationReducer=function currentLocationReducer(){var loc=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;var action=arguments.length>1?arguments[1]:undefined;if(action.type===\"SET_CURRENT_LOCATION\"){return action.payload;}return loc;};export default combineReducers({// songs: songsReducer,\nselectedSongId:selectedSongIdReducer,playerState:playerStateReducer,volume:volumeReducer,duration:durationReducer,currentLocation:currentLocationReducer});","map":{"version":3,"names":["combineReducers","selectedSongIdReducer","selectedSongId","action","type","payload","id","playerStateReducer","playerState","volumeReducer","volume","durationReducer","duration","currentLocationReducer","loc","currentLocation"],"sources":["C:/Users/paete/Prototype/nftmusicProtoCopy/client/src/reducers/index.js"],"sourcesContent":["import { combineReducers } from \"redux\";\n\n\n\n\n  \n\n// const songsReducer =() =>{\n    \n//     //여기서 json song파일을 import하는게 아닌 \n//     //블록에서 json파일 가져와서 가공해야할거같은데..\n//     //js파일로 블록 리스트 데이터 전부 반환해서 여기로 던지면 json으로 던질수잇을까? 이걸 지금 해보자\n   \n//     return songs;\n// };\n\n\n\nconst selectedSongIdReducer = (selectedSongId = 0, action) => {\n    if (action.type === \"SONG_SELECTED\") {\n        return action.payload.id;\n    }\n    if (action.type === \"SONG_SELECTED_BY_ID\") {\n        return action.payload;\n    }\n    return selectedSongId;\n};\n\nconst playerStateReducer = (playerState = 0, action) => {\n    if (action.type === \"PLAYER_STATE_SELECTED\" && !action.payload) {\n        return (playerState + 1) % 2;\n    } else if (action.type === \"PLAYER_STATE_SELECTED\" && action.payload) {\n        return action.payload;\n    }\n    return playerState;\n};\n\nconst volumeReducer = (volume = 100, action) => {\n    if (action.type === \"SET_VOLUME\") {\n        return action.payload;\n    }\n    return volume;\n};\n\nconst durationReducer = (duration = 0, action) => {\n    if (action.type === \"SET_DURATION\") {\n        return action.payload;\n    }\n    return duration;\n};\n\nconst currentLocationReducer = (loc = 0, action) => {\n    if (action.type === \"SET_CURRENT_LOCATION\") {\n        return action.payload;\n    }\n    return loc;\n};\n\n\n\nexport default combineReducers({\n    // songs: songsReducer,\n    selectedSongId: selectedSongIdReducer,\n    playerState: playerStateReducer,\n    volume: volumeReducer,\n    duration: durationReducer,\n    currentLocation: currentLocationReducer,\n    \n});\n\n  "],"mappings":"AAAA,OAASA,eAAe,KAAQ,OAAO,CAOvC;AAEA;AACA;AACA;AAEA;AACA;AAIA,GAAMC,sBAAqB,CAAG,QAAxBA,sBAAqB,EAAmC,IAA/BC,eAAc,2DAAG,CAAC,IAAEC,OAAM,2CACrD,GAAIA,MAAM,CAACC,IAAI,GAAK,eAAe,CAAE,CACjC,MAAOD,OAAM,CAACE,OAAO,CAACC,EAAE,CAC5B,CACA,GAAIH,MAAM,CAACC,IAAI,GAAK,qBAAqB,CAAE,CACvC,MAAOD,OAAM,CAACE,OAAO,CACzB,CACA,MAAOH,eAAc,CACzB,CAAC,CAED,GAAMK,mBAAkB,CAAG,QAArBA,mBAAkB,EAAgC,IAA5BC,YAAW,2DAAG,CAAC,IAAEL,OAAM,2CAC/C,GAAIA,MAAM,CAACC,IAAI,GAAK,uBAAuB,EAAI,CAACD,MAAM,CAACE,OAAO,CAAE,CAC5D,MAAO,CAACG,WAAW,CAAG,CAAC,EAAI,CAAC,CAChC,CAAC,IAAM,IAAIL,MAAM,CAACC,IAAI,GAAK,uBAAuB,EAAID,MAAM,CAACE,OAAO,CAAE,CAClE,MAAOF,OAAM,CAACE,OAAO,CACzB,CACA,MAAOG,YAAW,CACtB,CAAC,CAED,GAAMC,cAAa,CAAG,QAAhBA,cAAa,EAA6B,IAAzBC,OAAM,2DAAG,GAAG,IAAEP,OAAM,2CACvC,GAAIA,MAAM,CAACC,IAAI,GAAK,YAAY,CAAE,CAC9B,MAAOD,OAAM,CAACE,OAAO,CACzB,CACA,MAAOK,OAAM,CACjB,CAAC,CAED,GAAMC,gBAAe,CAAG,QAAlBA,gBAAe,EAA6B,IAAzBC,SAAQ,2DAAG,CAAC,IAAET,OAAM,2CACzC,GAAIA,MAAM,CAACC,IAAI,GAAK,cAAc,CAAE,CAChC,MAAOD,OAAM,CAACE,OAAO,CACzB,CACA,MAAOO,SAAQ,CACnB,CAAC,CAED,GAAMC,uBAAsB,CAAG,QAAzBA,uBAAsB,EAAwB,IAApBC,IAAG,2DAAG,CAAC,IAAEX,OAAM,2CAC3C,GAAIA,MAAM,CAACC,IAAI,GAAK,sBAAsB,CAAE,CACxC,MAAOD,OAAM,CAACE,OAAO,CACzB,CACA,MAAOS,IAAG,CACd,CAAC,CAID,cAAed,gBAAe,CAAC,CAC3B;AACAE,cAAc,CAAED,qBAAqB,CACrCO,WAAW,CAAED,kBAAkB,CAC/BG,MAAM,CAAED,aAAa,CACrBG,QAAQ,CAAED,eAAe,CACzBI,eAAe,CAAEF,sBAErB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}