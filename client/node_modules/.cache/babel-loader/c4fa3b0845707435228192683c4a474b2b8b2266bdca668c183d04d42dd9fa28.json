{"ast":null,"code":"import _slicedToArray from \"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _regeneratorRuntime from \"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Connector, __privateAdd, __privateGet, __privateMethod, __privateSet, __publicField } from \"./chunk-5NCTPR6C.js\";\n\n// src/coinbaseWallet.ts\nimport { AddChainError, ChainNotConfiguredError, SwitchChainError, UserRejectedRequestError, normalizeChainId } from \"@wagmi/core\";\nimport { providers } from \"ethers\";\nimport { getAddress, hexValue } from \"ethers/lib/utils.js\";\nvar _client, _provider, _isUserRejectedRequestError, isUserRejectedRequestError_fn;\nvar CoinbaseWalletConnector = /*#__PURE__*/function (_Connector) {\n  _inherits(CoinbaseWalletConnector, _Connector);\n  var _super = _createSuper(CoinbaseWalletConnector);\n  function CoinbaseWalletConnector(_ref) {\n    var _this;\n    var chains = _ref.chains,\n      options = _ref.options;\n    _classCallCheck(this, CoinbaseWalletConnector);\n    _this = _super.call(this, {\n      chains: chains,\n      options: _objectSpread({\n        reloadOnDisconnect: false\n      }, options)\n    });\n    __privateAdd(_assertThisInitialized(_this), _isUserRejectedRequestError);\n    __publicField(_assertThisInitialized(_this), \"id\", \"coinbaseWallet\");\n    __publicField(_assertThisInitialized(_this), \"name\", \"Coinbase Wallet\");\n    __publicField(_assertThisInitialized(_this), \"ready\", true);\n    __privateAdd(_assertThisInitialized(_this), _client, void 0);\n    __privateAdd(_assertThisInitialized(_this), _provider, void 0);\n    __publicField(_assertThisInitialized(_this), \"onAccountsChanged\", function (accounts) {\n      if (accounts.length === 0) _this.emit(\"disconnect\");else _this.emit(\"change\", {\n        account: getAddress(accounts[0])\n      });\n    });\n    __publicField(_assertThisInitialized(_this), \"onChainChanged\", function (chainId) {\n      var id = normalizeChainId(chainId);\n      var unsupported = _this.isChainUnsupported(id);\n      _this.emit(\"change\", {\n        chain: {\n          id: id,\n          unsupported: unsupported\n        }\n      });\n    });\n    __publicField(_assertThisInitialized(_this), \"onDisconnect\", function () {\n      _this.emit(\"disconnect\");\n    });\n    return _this;\n  }\n  _createClass(CoinbaseWalletConnector, [{\n    key: \"connect\",\n    value: function () {\n      var _connect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _ref2,\n          chainId,\n          provider,\n          accounts,\n          account,\n          id,\n          unsupported,\n          chain,\n          _args = arguments;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _ref2 = _args.length > 0 && _args[0] !== undefined ? _args[0] : {}, chainId = _ref2.chainId;\n              _context.prev = 1;\n              _context.next = 4;\n              return this.getProvider();\n            case 4:\n              provider = _context.sent;\n              provider.on(\"accountsChanged\", this.onAccountsChanged);\n              provider.on(\"chainChanged\", this.onChainChanged);\n              provider.on(\"disconnect\", this.onDisconnect);\n              this.emit(\"message\", {\n                type: \"connecting\"\n              });\n              _context.next = 11;\n              return provider.enable();\n            case 11:\n              accounts = _context.sent;\n              account = getAddress(accounts[0]);\n              _context.next = 15;\n              return this.getChainId();\n            case 15:\n              id = _context.sent;\n              unsupported = this.isChainUnsupported(id);\n              if (!(chainId && id !== chainId)) {\n                _context.next = 23;\n                break;\n              }\n              _context.next = 20;\n              return this.switchChain(chainId);\n            case 20:\n              chain = _context.sent;\n              id = chain.id;\n              unsupported = this.isChainUnsupported(id);\n            case 23:\n              return _context.abrupt(\"return\", {\n                account: account,\n                chain: {\n                  id: id,\n                  unsupported: unsupported\n                },\n                provider: new providers.Web3Provider(provider)\n              });\n            case 26:\n              _context.prev = 26;\n              _context.t0 = _context[\"catch\"](1);\n              if (!/(user closed modal|accounts received is empty)/i.test(_context.t0.message)) {\n                _context.next = 30;\n                break;\n              }\n              throw new UserRejectedRequestError(_context.t0);\n            case 30:\n              throw _context.t0;\n            case 31:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[1, 26]]);\n      }));\n      function connect() {\n        return _connect.apply(this, arguments);\n      }\n      return connect;\n    }()\n  }, {\n    key: \"disconnect\",\n    value: function () {\n      var _disconnect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var provider;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (__privateGet(this, _provider)) {\n                _context2.next = 2;\n                break;\n              }\n              return _context2.abrupt(\"return\");\n            case 2:\n              _context2.next = 4;\n              return this.getProvider();\n            case 4:\n              provider = _context2.sent;\n              provider.removeListener(\"accountsChanged\", this.onAccountsChanged);\n              provider.removeListener(\"chainChanged\", this.onChainChanged);\n              provider.removeListener(\"disconnect\", this.onDisconnect);\n              provider.disconnect();\n              provider.close();\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function disconnect() {\n        return _disconnect.apply(this, arguments);\n      }\n      return disconnect;\n    }()\n  }, {\n    key: \"getAccount\",\n    value: function () {\n      var _getAccount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var provider, accounts;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return this.getProvider();\n            case 2:\n              provider = _context3.sent;\n              _context3.next = 5;\n              return provider.request({\n                method: \"eth_accounts\"\n              });\n            case 5:\n              accounts = _context3.sent;\n              return _context3.abrupt(\"return\", getAddress(accounts[0]));\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function getAccount() {\n        return _getAccount.apply(this, arguments);\n      }\n      return getAccount;\n    }()\n  }, {\n    key: \"getChainId\",\n    value: function () {\n      var _getChainId = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var provider, chainId;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return this.getProvider();\n            case 2:\n              provider = _context4.sent;\n              chainId = normalizeChainId(provider.chainId);\n              return _context4.abrupt(\"return\", chainId);\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function getChainId() {\n        return _getChainId.apply(this, arguments);\n      }\n      return getChainId;\n    }()\n  }, {\n    key: \"getProvider\",\n    value: function () {\n      var _getProvider = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var _this2 = this;\n        var _privateGet$walletEx, CoinbaseWalletSDK, WalletProvider, Client, walletExtensionChainId, chain, chainId, jsonRpcUrl;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              if (__privateGet(this, _provider)) {\n                _context5.next = 13;\n                break;\n              }\n              _context5.next = 3;\n              return import(\"@coinbase/wallet-sdk\");\n            case 3:\n              CoinbaseWalletSDK = _context5.sent.default;\n              if (typeof CoinbaseWalletSDK !== \"function\" && typeof CoinbaseWalletSDK.default === \"function\") CoinbaseWalletSDK = CoinbaseWalletSDK.default;\n              __privateSet(this, _client, new CoinbaseWalletSDK(this.options));\n              WalletProvider = /*#__PURE__*/_createClass(function WalletProvider() {\n                _classCallCheck(this, WalletProvider);\n              });\n              Client = /*#__PURE__*/_createClass(function Client() {\n                _classCallCheck(this, Client);\n              });\n              walletExtensionChainId = (_privateGet$walletEx = __privateGet(this, _client).walletExtension) === null || _privateGet$walletEx === void 0 ? void 0 : _privateGet$walletEx.getChainId();\n              chain = this.chains.find(function (chain2) {\n                return _this2.options.chainId ? chain2.id === _this2.options.chainId : chain2.id === walletExtensionChainId;\n              }) || this.chains[0];\n              chainId = this.options.chainId || (chain === null || chain === void 0 ? void 0 : chain.id);\n              jsonRpcUrl = this.options.jsonRpcUrl || (chain === null || chain === void 0 ? void 0 : chain.rpcUrls.default.http[0]);\n              __privateSet(this, _provider, __privateGet(this, _client).makeWeb3Provider(jsonRpcUrl, chainId));\n            case 13:\n              return _context5.abrupt(\"return\", __privateGet(this, _provider));\n            case 14:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this);\n      }));\n      function getProvider() {\n        return _getProvider.apply(this, arguments);\n      }\n      return getProvider;\n    }()\n  }, {\n    key: \"getSigner\",\n    value: function () {\n      var _getSigner = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var _ref3,\n          chainId,\n          _yield$Promise$all,\n          _yield$Promise$all2,\n          provider,\n          account,\n          _args6 = arguments;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _ref3 = _args6.length > 0 && _args6[0] !== undefined ? _args6[0] : {}, chainId = _ref3.chainId;\n              _context6.next = 3;\n              return Promise.all([this.getProvider(), this.getAccount()]);\n            case 3:\n              _yield$Promise$all = _context6.sent;\n              _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2);\n              provider = _yield$Promise$all2[0];\n              account = _yield$Promise$all2[1];\n              return _context6.abrupt(\"return\", new providers.Web3Provider(provider, chainId).getSigner(account));\n            case 8:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this);\n      }));\n      function getSigner() {\n        return _getSigner.apply(this, arguments);\n      }\n      return getSigner;\n    }()\n  }, {\n    key: \"isAuthorized\",\n    value: function () {\n      var _isAuthorized = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        var account;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              _context7.next = 3;\n              return this.getAccount();\n            case 3:\n              account = _context7.sent;\n              return _context7.abrupt(\"return\", !!account);\n            case 7:\n              _context7.prev = 7;\n              _context7.t0 = _context7[\"catch\"](0);\n              return _context7.abrupt(\"return\", false);\n            case 10:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, this, [[0, 7]]);\n      }));\n      function isAuthorized() {\n        return _isAuthorized.apply(this, arguments);\n      }\n      return isAuthorized;\n    }()\n  }, {\n    key: \"switchChain\",\n    value: function () {\n      var _switchChain = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(chainId) {\n        var provider, id, _this$chains$find, chain, _chain$rpcUrls$public, _chain$rpcUrls$public2;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.next = 2;\n              return this.getProvider();\n            case 2:\n              provider = _context8.sent;\n              id = hexValue(chainId);\n              _context8.prev = 4;\n              _context8.next = 7;\n              return provider.request({\n                method: \"wallet_switchEthereumChain\",\n                params: [{\n                  chainId: id\n                }]\n              });\n            case 7:\n              return _context8.abrupt(\"return\", (_this$chains$find = this.chains.find(function (x) {\n                return x.id === chainId;\n              })) !== null && _this$chains$find !== void 0 ? _this$chains$find : {\n                id: chainId,\n                name: \"Chain \".concat(id),\n                network: \"\".concat(id),\n                nativeCurrency: {\n                  name: \"Ether\",\n                  decimals: 18,\n                  symbol: \"ETH\"\n                },\n                rpcUrls: {\n                  default: {\n                    http: [\"\"]\n                  },\n                  public: {\n                    http: [\"\"]\n                  }\n                }\n              });\n            case 10:\n              _context8.prev = 10;\n              _context8.t0 = _context8[\"catch\"](4);\n              chain = this.chains.find(function (x) {\n                return x.id === chainId;\n              });\n              if (chain) {\n                _context8.next = 15;\n                break;\n              }\n              throw new ChainNotConfiguredError({\n                chainId: chainId,\n                connectorId: this.id\n              });\n            case 15:\n              if (!(_context8.t0.code === 4902)) {\n                _context8.next = 27;\n                break;\n              }\n              _context8.prev = 16;\n              _context8.next = 19;\n              return provider.request({\n                method: \"wallet_addEthereumChain\",\n                params: [{\n                  chainId: id,\n                  chainName: chain.name,\n                  nativeCurrency: chain.nativeCurrency,\n                  rpcUrls: [(_chain$rpcUrls$public = (_chain$rpcUrls$public2 = chain.rpcUrls.public) === null || _chain$rpcUrls$public2 === void 0 ? void 0 : _chain$rpcUrls$public2.http[0]) !== null && _chain$rpcUrls$public !== void 0 ? _chain$rpcUrls$public : \"\"],\n                  blockExplorerUrls: this.getBlockExplorerUrls(chain)\n                }]\n              });\n            case 19:\n              return _context8.abrupt(\"return\", chain);\n            case 22:\n              _context8.prev = 22;\n              _context8.t1 = _context8[\"catch\"](16);\n              if (!__privateMethod(this, _isUserRejectedRequestError, isUserRejectedRequestError_fn).call(this, _context8.t1)) {\n                _context8.next = 26;\n                break;\n              }\n              throw new UserRejectedRequestError(_context8.t1);\n            case 26:\n              throw new AddChainError();\n            case 27:\n              if (!__privateMethod(this, _isUserRejectedRequestError, isUserRejectedRequestError_fn).call(this, _context8.t0)) {\n                _context8.next = 29;\n                break;\n              }\n              throw new UserRejectedRequestError(_context8.t0);\n            case 29:\n              throw new SwitchChainError(_context8.t0);\n            case 30:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8, this, [[4, 10], [16, 22]]);\n      }));\n      function switchChain(_x) {\n        return _switchChain.apply(this, arguments);\n      }\n      return switchChain;\n    }()\n  }, {\n    key: \"watchAsset\",\n    value: function () {\n      var _watchAsset = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(_ref4) {\n        var address, _ref4$decimals, decimals, image, symbol, provider;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              address = _ref4.address, _ref4$decimals = _ref4.decimals, decimals = _ref4$decimals === void 0 ? 18 : _ref4$decimals, image = _ref4.image, symbol = _ref4.symbol;\n              _context9.next = 3;\n              return this.getProvider();\n            case 3:\n              provider = _context9.sent;\n              return _context9.abrupt(\"return\", provider.request({\n                method: \"wallet_watchAsset\",\n                params: {\n                  type: \"ERC20\",\n                  options: {\n                    address: address,\n                    decimals: decimals,\n                    image: image,\n                    symbol: symbol\n                  }\n                }\n              }));\n            case 5:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9, this);\n      }));\n      function watchAsset(_x2) {\n        return _watchAsset.apply(this, arguments);\n      }\n      return watchAsset;\n    }()\n  }]);\n  return CoinbaseWalletConnector;\n}(Connector);\n_client = new WeakMap();\n_provider = new WeakMap();\n_isUserRejectedRequestError = new WeakSet();\nisUserRejectedRequestError_fn = function isUserRejectedRequestError_fn(error) {\n  return /(user rejected)/i.test(error.message);\n};\nexport { CoinbaseWalletConnector };","map":{"version":3,"names":["Connector","__privateAdd","__privateGet","__privateMethod","__privateSet","__publicField","AddChainError","ChainNotConfiguredError","SwitchChainError","UserRejectedRequestError","normalizeChainId","providers","getAddress","hexValue","_client","_provider","_isUserRejectedRequestError","isUserRejectedRequestError_fn","CoinbaseWalletConnector","chains","options","reloadOnDisconnect","accounts","length","emit","account","chainId","id","unsupported","isChainUnsupported","chain","getProvider","provider","on","onAccountsChanged","onChainChanged","onDisconnect","type","enable","getChainId","switchChain","Web3Provider","test","message","removeListener","disconnect","close","request","method","CoinbaseWalletSDK","default","WalletProvider","Client","walletExtensionChainId","walletExtension","find","chain2","jsonRpcUrl","rpcUrls","http","makeWeb3Provider","Promise","all","getAccount","getSigner","params","x","name","network","nativeCurrency","decimals","symbol","public","connectorId","code","chainName","blockExplorerUrls","getBlockExplorerUrls","call","address","image","WeakMap","WeakSet","error"],"sources":["C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@wagmi/connectors/dist/coinbaseWallet.js"],"sourcesContent":["import {\n  Connector,\n  __privateAdd,\n  __privateGet,\n  __privateMethod,\n  __privateSet,\n  __publicField\n} from \"./chunk-5NCTPR6C.js\";\n\n// src/coinbaseWallet.ts\nimport {\n  AddChainError,\n  ChainNotConfiguredError,\n  SwitchChainError,\n  UserRejectedRequestError,\n  normalizeChainId\n} from \"@wagmi/core\";\nimport { providers } from \"ethers\";\nimport { getAddress, hexValue } from \"ethers/lib/utils.js\";\nvar _client, _provider, _isUserRejectedRequestError, isUserRejectedRequestError_fn;\nvar CoinbaseWalletConnector = class extends Connector {\n  constructor({ chains, options }) {\n    super({\n      chains,\n      options: {\n        reloadOnDisconnect: false,\n        ...options\n      }\n    });\n    __privateAdd(this, _isUserRejectedRequestError);\n    __publicField(this, \"id\", \"coinbaseWallet\");\n    __publicField(this, \"name\", \"Coinbase Wallet\");\n    __publicField(this, \"ready\", true);\n    __privateAdd(this, _client, void 0);\n    __privateAdd(this, _provider, void 0);\n    __publicField(this, \"onAccountsChanged\", (accounts) => {\n      if (accounts.length === 0)\n        this.emit(\"disconnect\");\n      else\n        this.emit(\"change\", { account: getAddress(accounts[0]) });\n    });\n    __publicField(this, \"onChainChanged\", (chainId) => {\n      const id = normalizeChainId(chainId);\n      const unsupported = this.isChainUnsupported(id);\n      this.emit(\"change\", { chain: { id, unsupported } });\n    });\n    __publicField(this, \"onDisconnect\", () => {\n      this.emit(\"disconnect\");\n    });\n  }\n  async connect({ chainId } = {}) {\n    try {\n      const provider = await this.getProvider();\n      provider.on(\"accountsChanged\", this.onAccountsChanged);\n      provider.on(\"chainChanged\", this.onChainChanged);\n      provider.on(\"disconnect\", this.onDisconnect);\n      this.emit(\"message\", { type: \"connecting\" });\n      const accounts = await provider.enable();\n      const account = getAddress(accounts[0]);\n      let id = await this.getChainId();\n      let unsupported = this.isChainUnsupported(id);\n      if (chainId && id !== chainId) {\n        const chain = await this.switchChain(chainId);\n        id = chain.id;\n        unsupported = this.isChainUnsupported(id);\n      }\n      return {\n        account,\n        chain: { id, unsupported },\n        provider: new providers.Web3Provider(\n          provider\n        )\n      };\n    } catch (error) {\n      if (/(user closed modal|accounts received is empty)/i.test(\n        error.message\n      ))\n        throw new UserRejectedRequestError(error);\n      throw error;\n    }\n  }\n  async disconnect() {\n    if (!__privateGet(this, _provider))\n      return;\n    const provider = await this.getProvider();\n    provider.removeListener(\"accountsChanged\", this.onAccountsChanged);\n    provider.removeListener(\"chainChanged\", this.onChainChanged);\n    provider.removeListener(\"disconnect\", this.onDisconnect);\n    provider.disconnect();\n    provider.close();\n  }\n  async getAccount() {\n    const provider = await this.getProvider();\n    const accounts = await provider.request({\n      method: \"eth_accounts\"\n    });\n    return getAddress(accounts[0]);\n  }\n  async getChainId() {\n    const provider = await this.getProvider();\n    const chainId = normalizeChainId(provider.chainId);\n    return chainId;\n  }\n  async getProvider() {\n    if (!__privateGet(this, _provider)) {\n      let CoinbaseWalletSDK = (await import(\"@coinbase/wallet-sdk\")).default;\n      if (typeof CoinbaseWalletSDK !== \"function\" && typeof CoinbaseWalletSDK.default === \"function\")\n        CoinbaseWalletSDK = CoinbaseWalletSDK.default;\n      __privateSet(this, _client, new CoinbaseWalletSDK(this.options));\n      class WalletProvider {\n      }\n      class Client {\n      }\n      const walletExtensionChainId = __privateGet(this, _client).walletExtension?.getChainId();\n      const chain = this.chains.find(\n        (chain2) => this.options.chainId ? chain2.id === this.options.chainId : chain2.id === walletExtensionChainId\n      ) || this.chains[0];\n      const chainId = this.options.chainId || chain?.id;\n      const jsonRpcUrl = this.options.jsonRpcUrl || chain?.rpcUrls.default.http[0];\n      __privateSet(this, _provider, __privateGet(this, _client).makeWeb3Provider(jsonRpcUrl, chainId));\n    }\n    return __privateGet(this, _provider);\n  }\n  async getSigner({ chainId } = {}) {\n    const [provider, account] = await Promise.all([\n      this.getProvider(),\n      this.getAccount()\n    ]);\n    return new providers.Web3Provider(\n      provider,\n      chainId\n    ).getSigner(account);\n  }\n  async isAuthorized() {\n    try {\n      const account = await this.getAccount();\n      return !!account;\n    } catch {\n      return false;\n    }\n  }\n  async switchChain(chainId) {\n    const provider = await this.getProvider();\n    const id = hexValue(chainId);\n    try {\n      await provider.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{ chainId: id }]\n      });\n      return this.chains.find((x) => x.id === chainId) ?? {\n        id: chainId,\n        name: `Chain ${id}`,\n        network: `${id}`,\n        nativeCurrency: { name: \"Ether\", decimals: 18, symbol: \"ETH\" },\n        rpcUrls: { default: { http: [\"\"] }, public: { http: [\"\"] } }\n      };\n    } catch (error) {\n      const chain = this.chains.find((x) => x.id === chainId);\n      if (!chain)\n        throw new ChainNotConfiguredError({ chainId, connectorId: this.id });\n      if (error.code === 4902) {\n        try {\n          await provider.request({\n            method: \"wallet_addEthereumChain\",\n            params: [\n              {\n                chainId: id,\n                chainName: chain.name,\n                nativeCurrency: chain.nativeCurrency,\n                rpcUrls: [chain.rpcUrls.public?.http[0] ?? \"\"],\n                blockExplorerUrls: this.getBlockExplorerUrls(chain)\n              }\n            ]\n          });\n          return chain;\n        } catch (addError) {\n          if (__privateMethod(this, _isUserRejectedRequestError, isUserRejectedRequestError_fn).call(this, addError))\n            throw new UserRejectedRequestError(addError);\n          throw new AddChainError();\n        }\n      }\n      if (__privateMethod(this, _isUserRejectedRequestError, isUserRejectedRequestError_fn).call(this, error))\n        throw new UserRejectedRequestError(error);\n      throw new SwitchChainError(error);\n    }\n  }\n  async watchAsset({\n    address,\n    decimals = 18,\n    image,\n    symbol\n  }) {\n    const provider = await this.getProvider();\n    return provider.request({\n      method: \"wallet_watchAsset\",\n      params: {\n        type: \"ERC20\",\n        options: {\n          address,\n          decimals,\n          image,\n          symbol\n        }\n      }\n    });\n  }\n};\n_client = new WeakMap();\n_provider = new WeakMap();\n_isUserRejectedRequestError = new WeakSet();\nisUserRejectedRequestError_fn = function(error) {\n  return /(user rejected)/i.test(error.message);\n};\nexport {\n  CoinbaseWalletConnector\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}