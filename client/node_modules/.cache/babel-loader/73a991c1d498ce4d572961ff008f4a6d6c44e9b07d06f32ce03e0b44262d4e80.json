{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _classCallCheck = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WalletSDKRelayAbstract = exports.APP_VERSION_KEY = exports.LOCAL_STORAGE_ADDRESSES_KEY = exports.WALLET_USER_NAME_KEY = void 0;\nvar eth_rpc_errors_1 = require(\"eth-rpc-errors\");\nexports.WALLET_USER_NAME_KEY = \"walletUsername\";\nexports.LOCAL_STORAGE_ADDRESSES_KEY = \"Addresses\";\nexports.APP_VERSION_KEY = \"AppVersion\";\nvar WalletSDKRelayAbstract = /*#__PURE__*/function () {\n  function WalletSDKRelayAbstract() {\n    _classCallCheck(this, WalletSDKRelayAbstract);\n  }\n  _createClass(WalletSDKRelayAbstract, [{\n    key: \"makeEthereumJSONRPCRequest\",\n    value: function () {\n      var _makeEthereumJSONRPCRequest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(request, jsonRpcUrl) {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (jsonRpcUrl) {\n                _context.next = 2;\n                break;\n              }\n              throw new Error(\"Error: No jsonRpcUrl provided\");\n            case 2:\n              return _context.abrupt(\"return\", window.fetch(jsonRpcUrl, {\n                method: \"POST\",\n                body: JSON.stringify(request),\n                mode: \"cors\",\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                }\n              }).then(function (res) {\n                return res.json();\n              }).then(function (json) {\n                if (!json) {\n                  throw eth_rpc_errors_1.ethErrors.rpc.parse({});\n                }\n                var response = json;\n                var error = response.error;\n                if (error) {\n                  throw (0, eth_rpc_errors_1.serializeError)(error);\n                }\n                return response;\n              }));\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      function makeEthereumJSONRPCRequest(_x, _x2) {\n        return _makeEthereumJSONRPCRequest.apply(this, arguments);\n      }\n      return makeEthereumJSONRPCRequest;\n    }()\n  }]);\n  return WalletSDKRelayAbstract;\n}();\nexports.WalletSDKRelayAbstract = WalletSDKRelayAbstract;","map":{"version":3,"names":["Object","defineProperty","exports","value","WalletSDKRelayAbstract","APP_VERSION_KEY","LOCAL_STORAGE_ADDRESSES_KEY","WALLET_USER_NAME_KEY","eth_rpc_errors_1","require","request","jsonRpcUrl","Error","window","fetch","method","body","JSON","stringify","mode","headers","then","res","json","ethErrors","rpc","parse","response","error","serializeError"],"sources":["C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@coinbase/wallet-sdk/dist/relay/WalletSDKRelayAbstract.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletSDKRelayAbstract = exports.APP_VERSION_KEY = exports.LOCAL_STORAGE_ADDRESSES_KEY = exports.WALLET_USER_NAME_KEY = void 0;\nconst eth_rpc_errors_1 = require(\"eth-rpc-errors\");\nexports.WALLET_USER_NAME_KEY = \"walletUsername\";\nexports.LOCAL_STORAGE_ADDRESSES_KEY = \"Addresses\";\nexports.APP_VERSION_KEY = \"AppVersion\";\nclass WalletSDKRelayAbstract {\n    async makeEthereumJSONRPCRequest(request, jsonRpcUrl) {\n        if (!jsonRpcUrl)\n            throw new Error(\"Error: No jsonRpcUrl provided\");\n        return window\n            .fetch(jsonRpcUrl, {\n            method: \"POST\",\n            body: JSON.stringify(request),\n            mode: \"cors\",\n            headers: { \"Content-Type\": \"application/json\" },\n        })\n            .then(res => res.json())\n            .then(json => {\n            if (!json) {\n                throw eth_rpc_errors_1.ethErrors.rpc.parse({});\n            }\n            const response = json;\n            const { error } = response;\n            if (error) {\n                throw (0, eth_rpc_errors_1.serializeError)(error);\n            }\n            return response;\n        });\n    }\n}\nexports.WalletSDKRelayAbstract = WalletSDKRelayAbstract;\n"],"mappings":"AAAA,YAAY;;AAAC;AAAA;AAAA;AAAA;AACbA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,sBAAsB,GAAGF,OAAO,CAACG,eAAe,GAAGH,OAAO,CAACI,2BAA2B,GAAGJ,OAAO,CAACK,oBAAoB,GAAG,KAAK,CAAC;AACtI,IAAMC,gBAAgB,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAClDP,OAAO,CAACK,oBAAoB,GAAG,gBAAgB;AAC/CL,OAAO,CAACI,2BAA2B,GAAG,WAAW;AACjDJ,OAAO,CAACG,eAAe,GAAG,YAAY;AAAC,IACjCD,sBAAsB;EAAA;IAAA;EAAA;EAAA;IAAA;IAAA;MAAA,6FACxB,iBAAiCM,OAAO,EAAEC,UAAU;QAAA;UAAA;YAAA;cAAA,IAC3CA,UAAU;gBAAA;gBAAA;cAAA;cAAA,MACL,IAAIC,KAAK,CAAC,+BAA+B,CAAC;YAAA;cAAA,iCAC7CC,MAAM,CACRC,KAAK,CAACH,UAAU,EAAE;gBACnBI,MAAM,EAAE,MAAM;gBACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,OAAO,CAAC;gBAC7BS,IAAI,EAAE,MAAM;gBACZC,OAAO,EAAE;kBAAE,cAAc,EAAE;gBAAmB;cAClD,CAAC,CAAC,CACGC,IAAI,CAAC,UAAAC,GAAG;gBAAA,OAAIA,GAAG,CAACC,IAAI,EAAE;cAAA,EAAC,CACvBF,IAAI,CAAC,UAAAE,IAAI,EAAI;gBACd,IAAI,CAACA,IAAI,EAAE;kBACP,MAAMf,gBAAgB,CAACgB,SAAS,CAACC,GAAG,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAClD;gBACA,IAAMC,QAAQ,GAAGJ,IAAI;gBACrB,IAAQK,KAAK,GAAKD,QAAQ,CAAlBC,KAAK;gBACb,IAAIA,KAAK,EAAE;kBACP,MAAM,CAAC,CAAC,EAAEpB,gBAAgB,CAACqB,cAAc,EAAED,KAAK,CAAC;gBACrD;gBACA,OAAOD,QAAQ;cACnB,CAAC,CAAC;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA,CACL;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;EAAA;AAAA;AAELzB,OAAO,CAACE,sBAAsB,GAAGA,sBAAsB"},"metadata":{},"sourceType":"script","externalDependencies":[]}