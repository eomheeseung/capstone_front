{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as ed25519 from \"@stablelib/ed25519\";\nimport { randomBytes } from \"@stablelib/random\";\nimport { fromMiliseconds } from \"@walletconnect/time\";\nimport { JWT_IRIDIUM_ALG, JWT_IRIDIUM_TYP, KEY_PAIR_SEED_LENGTH } from \"./constants\";\nimport { decodeIss, decodeJWT, encodeData, encodeIss, encodeJWT } from \"./utils\";\nexport function generateKeyPair() {\n  var seed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : randomBytes(KEY_PAIR_SEED_LENGTH);\n  return ed25519.generateKeyPairFromSeed(seed);\n}\nexport function signJWT(_x, _x2, _x3, _x4) {\n  return _signJWT.apply(this, arguments);\n}\nfunction _signJWT() {\n  _signJWT = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(sub, aud, ttl, keyPair) {\n    var iat,\n      header,\n      iss,\n      exp,\n      payload,\n      data,\n      signature,\n      _args = arguments;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          iat = _args.length > 4 && _args[4] !== undefined ? _args[4] : fromMiliseconds(Date.now());\n          header = {\n            alg: JWT_IRIDIUM_ALG,\n            typ: JWT_IRIDIUM_TYP\n          };\n          iss = encodeIss(keyPair.publicKey);\n          exp = iat + ttl;\n          payload = {\n            iss: iss,\n            sub: sub,\n            aud: aud,\n            iat: iat,\n            exp: exp\n          };\n          data = encodeData({\n            header: header,\n            payload: payload\n          });\n          signature = ed25519.sign(keyPair.secretKey, data);\n          return _context.abrupt(\"return\", encodeJWT({\n            header: header,\n            payload: payload,\n            signature: signature\n          }));\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _signJWT.apply(this, arguments);\n}\nexport function verifyJWT(_x5) {\n  return _verifyJWT.apply(this, arguments);\n}\nfunction _verifyJWT() {\n  _verifyJWT = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(jwt) {\n    var _decodeJWT, header, payload, data, signature, publicKey;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _decodeJWT = decodeJWT(jwt), header = _decodeJWT.header, payload = _decodeJWT.payload, data = _decodeJWT.data, signature = _decodeJWT.signature;\n          if (!(header.alg !== JWT_IRIDIUM_ALG || header.typ !== JWT_IRIDIUM_TYP)) {\n            _context2.next = 3;\n            break;\n          }\n          throw new Error(\"JWT must use EdDSA algorithm\");\n        case 3:\n          publicKey = decodeIss(payload.iss);\n          return _context2.abrupt(\"return\", ed25519.verify(publicKey, data, signature));\n        case 5:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _verifyJWT.apply(this, arguments);\n}","map":{"version":3,"mappings":";;AAAA,OAAO,KAAKA,OAAO,MAAM,oBAAoB;AAC7C,SAASC,WAAW,QAAQ,mBAAmB;AAC/C,SAASC,eAAe,QAAQ,qBAAqB;AACrD,SACEC,eAAe,EACfC,eAAe,EACfC,oBAAoB,QACf,aAAa;AAEpB,SACEC,SAAS,EACTC,SAAS,EACTC,UAAU,EACVC,SAAS,EACTC,SAAS,QACJ,SAAS;AAEhB,OAAM,SAAUC,eAAe,GACuB;EAAA,IAApDC,2EAAmBX,WAAW,CAACI,oBAAoB,CAAC;EAEpD,OAAOL,OAAO,CAACa,uBAAuB,CAACD,IAAI,CAAC;AAC9C;AAEA,gBAAsBE,OAAO;EAAA;AAAA;AAc5B;EAAA,sEAdM,iBACLC,GAAW,EACXC,GAAW,EACXC,GAAW,EACXC,OAAwB;IAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;IAAA;MAAA;QAAA;UACxBC,8DAAcjB,eAAe,CAACkB,IAAI,CAACC,GAAG,EAAE,CAAC;UAEnCC,MAAM,GAAG;YAAEC,GAAG,EAAEpB,eAAe;YAAEqB,GAAG,EAAEpB;UAAe,CAAE;UACvDqB,GAAG,GAAGhB,SAAS,CAACS,OAAO,CAACQ,SAAS,CAAC;UAClCC,GAAG,GAAGR,GAAG,GAAGF,GAAG;UACfW,OAAO,GAAG;YAAEH,GAAG,EAAHA,GAAG;YAAEV,GAAG,EAAHA,GAAG;YAAEC,GAAG,EAAHA,GAAG;YAAEG,GAAG,EAAHA,GAAG;YAAEQ,GAAG,EAAHA;UAAG,CAAE;UACrCE,IAAI,GAAGrB,UAAU,CAAC;YAAEc,MAAM,EAANA,MAAM;YAAEM,OAAO,EAAPA;UAAO,CAAE,CAAC;UACtCE,SAAS,GAAG9B,OAAO,CAAC+B,IAAI,CAACb,OAAO,CAACc,SAAS,EAAEH,IAAI,CAAC;UAAA,iCAChDnB,SAAS,CAAC;YAAEY,MAAM,EAANA,MAAM;YAAEM,OAAO,EAAPA,OAAO;YAAEE,SAAS,EAATA;UAAS,CAAE,CAAC;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,CACjD;EAAA;AAAA;AAED,gBAAsBG,SAAS;EAAA;AAAA;AAO9B;EAAA,wEAPM,kBAAyBC,GAAW;IAAA;IAAA;MAAA;QAAA;UAAA,aACI3B,SAAS,CAAC2B,GAAG,CAAC,EAAnDZ,MAAM,cAANA,MAAM,EAAEM,OAAO,cAAPA,OAAO,EAAEC,IAAI,cAAJA,IAAI,EAAEC,SAAS,cAATA,SAAS;UAAA,MACpCR,MAAM,CAACC,GAAG,KAAKpB,eAAe,IAAImB,MAAM,CAACE,GAAG,KAAKpB,eAAe;YAAA;YAAA;UAAA;UAAA,MAC5D,IAAI+B,KAAK,CAAC,8BAA8B,CAAC;QAAA;UAE3CT,SAAS,GAAGpB,SAAS,CAACsB,OAAO,CAACH,GAAG,CAAC;UAAA,kCACjCzB,OAAO,CAACoC,MAAM,CAACV,SAAS,EAAEG,IAAI,EAAEC,SAAS,CAAC;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,CAClD;EAAA;AAAA","names":["ed25519","randomBytes","fromMiliseconds","JWT_IRIDIUM_ALG","JWT_IRIDIUM_TYP","KEY_PAIR_SEED_LENGTH","decodeIss","decodeJWT","encodeData","encodeIss","encodeJWT","generateKeyPair","seed","generateKeyPairFromSeed","signJWT","sub","aud","ttl","keyPair","iat","Date","now","header","alg","typ","iss","publicKey","exp","payload","data","signature","sign","secretKey","verifyJWT","jwt","Error","verify"],"sources":["../../src/api.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}