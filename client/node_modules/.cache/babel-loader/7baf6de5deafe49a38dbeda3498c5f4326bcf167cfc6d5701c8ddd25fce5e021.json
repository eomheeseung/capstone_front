{"ast":null,"code":"'use strict';\n\n/**\n * @param {import('../types').Options} config\n */\nmodule.exports = function (config) {\n  return {\n    get: require('./get')(config),\n    put: require('./put')(config),\n    findProvs: require('./find-provs')(config),\n    findPeer: require('./find-peer')(config),\n    provide: require('./provide')(config),\n    // find closest peerId to given peerId\n    query: require('./query')(config)\n  };\n};","map":{"version":3,"names":["module","exports","config","get","require","put","findProvs","findPeer","provide","query"],"sources":["C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/ipfs-http-client/src/dht/index.js"],"sourcesContent":["'use strict'\n\n/**\n * @param {import('../types').Options} config\n */\nmodule.exports = config => ({\n  get: require('./get')(config),\n  put: require('./put')(config),\n  findProvs: require('./find-provs')(config),\n  findPeer: require('./find-peer')(config),\n  provide: require('./provide')(config),\n  // find closest peerId to given peerId\n  query: require('./query')(config)\n})\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA;AACA;AACAA,MAAM,CAACC,OAAO,GAAG,UAAAC,MAAM;EAAA,OAAK;IAC1BC,GAAG,EAAEC,OAAO,CAAC,OAAO,CAAC,CAACF,MAAM,CAAC;IAC7BG,GAAG,EAAED,OAAO,CAAC,OAAO,CAAC,CAACF,MAAM,CAAC;IAC7BI,SAAS,EAAEF,OAAO,CAAC,cAAc,CAAC,CAACF,MAAM,CAAC;IAC1CK,QAAQ,EAAEH,OAAO,CAAC,aAAa,CAAC,CAACF,MAAM,CAAC;IACxCM,OAAO,EAAEJ,OAAO,CAAC,WAAW,CAAC,CAACF,MAAM,CAAC;IACrC;IACAO,KAAK,EAAEL,OAAO,CAAC,SAAS,CAAC,CAACF,MAAM;EAClC,CAAC;AAAA,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}