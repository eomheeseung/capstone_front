{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _createForOfIteratorHelper = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _objectSpread = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _awaitAsyncGenerator = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/awaitAsyncGenerator.js\").default;\nvar _wrapAsyncGenerator = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/wrapAsyncGenerator.js\").default;\nvar _asyncIterator = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/asyncIterator.js\").default;\nvar _require = require('multiaddr'),\n  Multiaddr = _require.Multiaddr;\nvar configure = require('../lib/configure');\nvar toUrlSearchParams = require('../lib/to-url-search-params');\nvar _require2 = require('./response-types'),\n  Provider = _require2.Provider;\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dht').API<HTTPClientExtraOptions>} DHTAPI\n */\n\nmodule.exports = configure(function (api) {\n  /**\n   * @type {DHTAPI[\"findProvs\"]}\n   */\n  function findProvs(_x) {\n    return _findProvs.apply(this, arguments);\n  }\n  function _findProvs() {\n    _findProvs = _wrapAsyncGenerator(function (cid) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var res, _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, message, _iterator2, _step2, _step2$value, ID, Addrs;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _awaitAsyncGenerator(api.post('dht/findprovs', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams(_objectSpread({\n                  arg: cid.toString()\n                }, options)),\n                headers: options.headers\n              }));\n            case 2:\n              res = _context.sent;\n              _iteratorAbruptCompletion = false;\n              _didIteratorError = false;\n              _context.prev = 5;\n              _iterator = _asyncIterator(res.ndjson());\n            case 7:\n              _context.next = 9;\n              return _awaitAsyncGenerator(_iterator.next());\n            case 9:\n              if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n                _context.next = 32;\n                break;\n              }\n              message = _step.value;\n              if (!(message.Type === Provider && message.Responses)) {\n                _context.next = 29;\n                break;\n              }\n              _iterator2 = _createForOfIteratorHelper(message.Responses);\n              _context.prev = 13;\n              _iterator2.s();\n            case 15:\n              if ((_step2 = _iterator2.n()).done) {\n                _context.next = 21;\n                break;\n              }\n              _step2$value = _step2.value, ID = _step2$value.ID, Addrs = _step2$value.Addrs;\n              _context.next = 19;\n              return {\n                id: ID,\n                addrs: (Addrs || []).map(function ( /** @type {string} **/a) {\n                  return new Multiaddr(a);\n                })\n              };\n            case 19:\n              _context.next = 15;\n              break;\n            case 21:\n              _context.next = 26;\n              break;\n            case 23:\n              _context.prev = 23;\n              _context.t0 = _context[\"catch\"](13);\n              _iterator2.e(_context.t0);\n            case 26:\n              _context.prev = 26;\n              _iterator2.f();\n              return _context.finish(26);\n            case 29:\n              _iteratorAbruptCompletion = false;\n              _context.next = 7;\n              break;\n            case 32:\n              _context.next = 38;\n              break;\n            case 34:\n              _context.prev = 34;\n              _context.t1 = _context[\"catch\"](5);\n              _didIteratorError = true;\n              _iteratorError = _context.t1;\n            case 38:\n              _context.prev = 38;\n              _context.prev = 39;\n              if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                _context.next = 43;\n                break;\n              }\n              _context.next = 43;\n              return _awaitAsyncGenerator(_iterator.return());\n            case 43:\n              _context.prev = 43;\n              if (!_didIteratorError) {\n                _context.next = 46;\n                break;\n              }\n              throw _iteratorError;\n            case 46:\n              return _context.finish(43);\n            case 47:\n              return _context.finish(38);\n            case 48:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[5, 34, 38, 48], [13, 23, 26, 29], [39,, 43, 47]]);\n      })();\n    });\n    return _findProvs.apply(this, arguments);\n  }\n  return findProvs;\n});","map":{"version":3,"names":["require","Multiaddr","configure","toUrlSearchParams","Provider","module","exports","api","findProvs","cid","options","post","signal","searchParams","arg","toString","headers","res","ndjson","message","Type","Responses","ID","Addrs","id","addrs","map","a"],"sources":["C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/ipfs-http-client/src/dht/find-provs.js"],"sourcesContent":["'use strict'\n\nconst { Multiaddr } = require('multiaddr')\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\nconst { Provider } = require('./response-types')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dht').API<HTTPClientExtraOptions>} DHTAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {DHTAPI[\"findProvs\"]}\n   */\n  async function * findProvs (cid, options = {}) {\n    const res = await api.post('dht/findprovs', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cid.toString(),\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    for await (const message of res.ndjson()) {\n      if (message.Type === Provider && message.Responses) {\n        for (const { ID, Addrs } of message.Responses) {\n          yield {\n            id: ID,\n            addrs: (Addrs || []).map((/** @type {string} **/ a) => new Multiaddr(a))\n          }\n        }\n      }\n    }\n  }\n\n  return findProvs\n})\n"],"mappings":"AAAA,YAAY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEZ,eAAsBA,OAAO,CAAC,WAAW,CAAC;EAAlCC,SAAS,YAATA,SAAS;AACjB,IAAMC,SAAS,GAAGF,OAAO,CAAC,kBAAkB,CAAC;AAC7C,IAAMG,iBAAiB,GAAGH,OAAO,CAAC,6BAA6B,CAAC;AAChE,gBAAqBA,OAAO,CAAC,kBAAkB,CAAC;EAAxCI,QAAQ,aAARA,QAAQ;;AAEhB;AACA;AACA;AACA;;AAEAC,MAAM,CAACC,OAAO,GAAGJ,SAAS,CAAC,UAAAK,GAAG,EAAI;EAChC;AACF;AACA;EAFE,SAGiBC,SAAS;IAAA;EAAA;EAAA;IAAA,iCAA1B,UAA4BC,GAAG;MAAA,IAAEC,OAAO,uEAAG,CAAC,CAAC;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;cAAA,4BACzBH,GAAG,CAACI,IAAI,CAAC,eAAe,EAAE;gBAC1CC,MAAM,EAAEF,OAAO,CAACE,MAAM;gBACtBC,YAAY,EAAEV,iBAAiB;kBAC7BW,GAAG,EAAEL,GAAG,CAACM,QAAQ;gBAAE,GAChBL,OAAO,EACV;gBACFM,OAAO,EAAEN,OAAO,CAACM;cACnB,CAAC,CAAC;YAAA;cAPIC,GAAG;cAAA;cAAA;cAAA;cAAA,2BASmBA,GAAG,CAACC,MAAM,EAAE;YAAA;cAAA;cAAA;YAAA;cAAA;gBAAA;gBAAA;cAAA;cAAvBC,OAAO;cAAA,MAClBA,OAAO,CAACC,IAAI,KAAKhB,QAAQ,IAAIe,OAAO,CAACE,SAAS;gBAAA;gBAAA;cAAA;cAAA,wCACpBF,OAAO,CAACE,SAAS;cAAA;cAAA;YAAA;cAAA;gBAAA;gBAAA;cAAA;cAAA,6BAAhCC,EAAE,gBAAFA,EAAE,EAAEC,KAAK,gBAALA,KAAK;cAAA;cACpB,OAAM;gBACJC,EAAE,EAAEF,EAAE;gBACNG,KAAK,EAAE,CAACF,KAAK,IAAI,EAAE,EAAEG,GAAG,CAAC,WAAC,sBAAuBC,CAAC;kBAAA,OAAK,IAAI1B,SAAS,CAAC0B,CAAC,CAAC;gBAAA;cACzE,CAAC;YAAA;cAAA;cAAA;YAAA;cAAA;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA;cAAA;cAAA;YAAA;cAAA;cAAA;cAAA;cAAA;YAAA;cAAA;cAAA;cAAA;gBAAA;gBAAA;cAAA;cAAA;cAAA;YAAA;cAAA;cAAA;gBAAA;gBAAA;cAAA;cAAA;YAAA;cAAA;YAAA;cAAA;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAIR;IAAA;EAAA;EAED,OAAOnB,SAAS;AAClB,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}