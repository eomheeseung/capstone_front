{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _objectSpread = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _wrapAsyncGenerator = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/wrapAsyncGenerator.js\").default;\nvar _awaitAsyncGenerator = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/awaitAsyncGenerator.js\").default;\nvar _asyncGeneratorDelegate = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/asyncGeneratorDelegate.js\").default;\nvar _asyncIterator = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/asyncIterator.js\").default;\nvar _require = require('multiformats/cid'),\n  CID = _require.CID;\nvar configure = require('./lib/configure');\nvar toUrlSearchParams = require('./lib/to-url-search-params');\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nmodule.exports = configure(function (api) {\n  /**\n   * @type {RootAPI[\"get\"]}\n   */\n  function get(_x) {\n    return _get.apply(this, arguments);\n  }\n  function _get() {\n    _get = _wrapAsyncGenerator(function (path) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var opts, res;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              /** @type {Record<string, any>} */\n              opts = _objectSpread({\n                arg: \"\".concat(path instanceof Uint8Array ? CID.decode(path) : path)\n              }, options);\n              if (opts.compressionLevel) {\n                opts['compression-level'] = opts.compressionLevel;\n                delete opts.compressionLevel;\n              }\n              _context.next = 4;\n              return _awaitAsyncGenerator(api.post('get', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams(opts),\n                headers: options.headers\n              }));\n            case 4:\n              res = _context.sent;\n              return _context.delegateYield(_asyncGeneratorDelegate(_asyncIterator(res.iterator()), _awaitAsyncGenerator), \"t0\", 6);\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      })();\n    });\n    return _get.apply(this, arguments);\n  }\n  return get;\n});","map":{"version":3,"names":["require","CID","configure","toUrlSearchParams","module","exports","api","get","path","options","opts","arg","Uint8Array","decode","compressionLevel","post","signal","searchParams","headers","res","iterator"],"sources":["C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/ipfs-http-client/src/get.js"],"sourcesContent":["'use strict'\n\nconst { CID } = require('multiformats/cid')\nconst configure = require('./lib/configure')\nconst toUrlSearchParams = require('./lib/to-url-search-params')\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {RootAPI[\"get\"]}\n   */\n  async function * get (path, options = {}) {\n    /** @type {Record<string, any>} */\n    const opts = {\n      arg: `${path instanceof Uint8Array ? CID.decode(path) : path}`,\n      ...options\n    }\n\n    if (opts.compressionLevel) {\n      opts['compression-level'] = opts.compressionLevel\n      delete opts.compressionLevel\n    }\n\n    const res = await api.post('get', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(opts),\n      headers: options.headers\n    })\n\n    yield * res.iterator()\n  }\n\n  return get\n})\n"],"mappings":"AAAA,YAAY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEZ,eAAgBA,OAAO,CAAC,kBAAkB,CAAC;EAAnCC,GAAG,YAAHA,GAAG;AACX,IAAMC,SAAS,GAAGF,OAAO,CAAC,iBAAiB,CAAC;AAC5C,IAAMG,iBAAiB,GAAGH,OAAO,CAAC,4BAA4B,CAAC;;AAE/D;AACA;AACA;AACA;;AAEAI,MAAM,CAACC,OAAO,GAAGH,SAAS,CAAC,UAAAI,GAAG,EAAI;EAChC;AACF;AACA;EAFE,SAGiBC,GAAG;IAAA;EAAA;EAAA;IAAA,2BAApB,UAAsBC,IAAI;MAAA,IAAEC,OAAO,uEAAG,CAAC,CAAC;MAAA;QAAA;QAAA;UAAA;YAAA;cACtC;cACMC,IAAI;gBACRC,GAAG,YAAKH,IAAI,YAAYI,UAAU,GAAGX,GAAG,CAACY,MAAM,CAACL,IAAI,CAAC,GAAGA,IAAI;cAAE,GAC3DC,OAAO;cAGZ,IAAIC,IAAI,CAACI,gBAAgB,EAAE;gBACzBJ,IAAI,CAAC,mBAAmB,CAAC,GAAGA,IAAI,CAACI,gBAAgB;gBACjD,OAAOJ,IAAI,CAACI,gBAAgB;cAC9B;cAAC;cAAA,4BAEiBR,GAAG,CAACS,IAAI,CAAC,KAAK,EAAE;gBAChCC,MAAM,EAAEP,OAAO,CAACO,MAAM;gBACtBC,YAAY,EAAEd,iBAAiB,CAACO,IAAI,CAAC;gBACrCQ,OAAO,EAAET,OAAO,CAACS;cACnB,CAAC,CAAC;YAAA;cAJIC,GAAG;cAMT,qEAAQA,GAAG,CAACC,QAAQ,EAAE;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CACvB;IAAA;EAAA;EAED,OAAOb,GAAG;AACZ,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}