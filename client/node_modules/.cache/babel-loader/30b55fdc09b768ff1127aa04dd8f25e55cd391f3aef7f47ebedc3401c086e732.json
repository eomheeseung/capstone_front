{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _objectSpread = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _asyncToGenerator = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar configure = require('../lib/configure');\nvar toUrlSearchParams = require('../lib/to-url-search-params');\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/config').API<HTTPClientExtraOptions>} ConfigAPI\n */\n\nmodule.exports = configure(function (api) {\n  /**\n   * @type {ConfigAPI[\"get\"]}\n   */\n  var get = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(key) {\n      var options,\n        res,\n        data,\n        _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n            if (key) {\n              _context.next = 3;\n              break;\n            }\n            throw new Error('key argument is required');\n          case 3:\n            _context.next = 5;\n            return api.post('config', {\n              signal: options.signal,\n              searchParams: toUrlSearchParams(_objectSpread({\n                arg: key\n              }, options)),\n              headers: options.headers\n            });\n          case 5:\n            res = _context.sent;\n            _context.next = 8;\n            return res.json();\n          case 8:\n            data = _context.sent;\n            return _context.abrupt(\"return\", data.Value);\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return function get(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return get;\n});","map":{"version":3,"names":["configure","require","toUrlSearchParams","module","exports","api","get","key","options","Error","post","signal","searchParams","arg","headers","res","json","data","Value"],"sources":["C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/ipfs-http-client/src/config/get.js"],"sourcesContent":["'use strict'\n\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/config').API<HTTPClientExtraOptions>} ConfigAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {ConfigAPI[\"get\"]}\n   */\n  const get = async (key, options = {}) => {\n    if (!key) {\n      throw new Error('key argument is required')\n    }\n\n    const res = await api.post('config', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: key,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return data.Value\n  }\n\n  return get\n})\n"],"mappings":"AAAA,YAAY;;AAAA;AAAA;AAAA;AAEZ,IAAMA,SAAS,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAC7C,IAAMC,iBAAiB,GAAGD,OAAO,CAAC,6BAA6B,CAAC;;AAEhE;AACA;AACA;AACA;;AAEAE,MAAM,CAACC,OAAO,GAAGJ,SAAS,CAAC,UAAAK,GAAG,EAAI;EAChC;AACF;AACA;EACE,IAAMC,GAAG;IAAA,sEAAG,iBAAOC,GAAG;MAAA;QAAA;QAAA;QAAA;MAAA;QAAA;UAAA;YAAEC,OAAO,2DAAG,CAAC,CAAC;YAAA,IAC7BD,GAAG;cAAA;cAAA;YAAA;YAAA,MACA,IAAIE,KAAK,CAAC,0BAA0B,CAAC;UAAA;YAAA;YAAA,OAG3BJ,GAAG,CAACK,IAAI,CAAC,QAAQ,EAAE;cACnCC,MAAM,EAAEH,OAAO,CAACG,MAAM;cACtBC,YAAY,EAAEV,iBAAiB;gBAC7BW,GAAG,EAAEN;cAAG,GACLC,OAAO,EACV;cACFM,OAAO,EAAEN,OAAO,CAACM;YACnB,CAAC,CAAC;UAAA;YAPIC,GAAG;YAAA;YAAA,OAQUA,GAAG,CAACC,IAAI,EAAE;UAAA;YAAvBC,IAAI;YAAA,iCAEHA,IAAI,CAACC,KAAK;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA,CAClB;IAAA,gBAhBKZ,GAAG;MAAA;IAAA;EAAA,GAgBR;EAED,OAAOA,GAAG;AACZ,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}