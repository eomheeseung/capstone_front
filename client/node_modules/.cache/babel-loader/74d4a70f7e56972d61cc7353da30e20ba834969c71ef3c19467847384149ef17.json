{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _objectSpread = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _asyncToGenerator = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar toCamel = require('./lib/object-to-camel');\nvar _require = require('multiaddr'),\n  Multiaddr = _require.Multiaddr;\nvar configure = require('./lib/configure');\nvar toUrlSearchParams = require('./lib/to-url-search-params');\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nmodule.exports = configure(function (api) {\n  /**\n   * @type {RootAPI[\"id\"]}\n   */\n  function id() {\n    return _id.apply(this, arguments);\n  }\n  function _id() {\n    _id = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var options,\n        res,\n        data,\n        output,\n        _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n            _context.next = 3;\n            return api.post('id', {\n              signal: options.signal,\n              searchParams: toUrlSearchParams(_objectSpread({\n                arg: options.peerId ? options.peerId.toString() : undefined\n              }, options)),\n              headers: options.headers\n            });\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.json();\n          case 6:\n            data = _context.sent;\n            output = _objectSpread({}, toCamel(data));\n            if (output.addresses) {\n              output.addresses = output.addresses.map(function ( /** @type {string} */ma) {\n                return new Multiaddr(ma);\n              });\n            }\n\n            // @ts-ignore server output is not typed\n            return _context.abrupt(\"return\", output);\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return _id.apply(this, arguments);\n  }\n  return id;\n});","map":{"version":3,"names":["toCamel","require","Multiaddr","configure","toUrlSearchParams","module","exports","api","id","options","post","signal","searchParams","arg","peerId","toString","undefined","headers","res","json","data","output","addresses","map","ma"],"sources":["C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/ipfs-http-client/src/id.js"],"sourcesContent":["'use strict'\n\nconst toCamel = require('./lib/object-to-camel')\nconst { Multiaddr } = require('multiaddr')\nconst configure = require('./lib/configure')\nconst toUrlSearchParams = require('./lib/to-url-search-params')\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {RootAPI[\"id\"]}\n   */\n  async function id (options = {}) {\n    const res = await api.post('id', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: options.peerId ? options.peerId.toString() : undefined,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    const output = {\n      ...toCamel(data)\n    }\n\n    if (output.addresses) {\n      output.addresses = output.addresses.map((/** @type {string} */ ma) => new Multiaddr(ma))\n    }\n\n    // @ts-ignore server output is not typed\n    return output\n  }\n  return id\n})\n"],"mappings":"AAAA,YAAY;;AAAA;AAAA;AAAA;AAEZ,IAAMA,OAAO,GAAGC,OAAO,CAAC,uBAAuB,CAAC;AAChD,eAAsBA,OAAO,CAAC,WAAW,CAAC;EAAlCC,SAAS,YAATA,SAAS;AACjB,IAAMC,SAAS,GAAGF,OAAO,CAAC,iBAAiB,CAAC;AAC5C,IAAMG,iBAAiB,GAAGH,OAAO,CAAC,4BAA4B,CAAC;;AAE/D;AACA;AACA;AACA;;AAEAI,MAAM,CAACC,OAAO,GAAGH,SAAS,CAAC,UAAAI,GAAG,EAAI;EAChC;AACF;AACA;EAFE,SAGeC,EAAE;IAAA;EAAA;EAAA;IAAA,iEAAjB;MAAA;QAAA;QAAA;QAAA;QAAA;MAAA;QAAA;UAAA;YAAmBC,OAAO,2DAAG,CAAC,CAAC;YAAA;YAAA,OACXF,GAAG,CAACG,IAAI,CAAC,IAAI,EAAE;cAC/BC,MAAM,EAAEF,OAAO,CAACE,MAAM;cACtBC,YAAY,EAAER,iBAAiB;gBAC7BS,GAAG,EAAEJ,OAAO,CAACK,MAAM,GAAGL,OAAO,CAACK,MAAM,CAACC,QAAQ,EAAE,GAAGC;cAAS,GACxDP,OAAO,EACV;cACFQ,OAAO,EAAER,OAAO,CAACQ;YACnB,CAAC,CAAC;UAAA;YAPIC,GAAG;YAAA;YAAA,OAQUA,GAAG,CAACC,IAAI,EAAE;UAAA;YAAvBC,IAAI;YAEJC,MAAM,qBACPrB,OAAO,CAACoB,IAAI,CAAC;YAGlB,IAAIC,MAAM,CAACC,SAAS,EAAE;cACpBD,MAAM,CAACC,SAAS,GAAGD,MAAM,CAACC,SAAS,CAACC,GAAG,CAAC,WAAC,qBAAsBC,EAAE;gBAAA,OAAK,IAAItB,SAAS,CAACsB,EAAE,CAAC;cAAA,EAAC;YAC1F;;YAEA;YAAA,iCACOH,MAAM;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA,CACd;IAAA;EAAA;EACD,OAAOb,EAAE;AACX,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}