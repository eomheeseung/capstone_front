{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _require = require('multiaddr'),\n  Multiaddr = _require.Multiaddr;\nvar configure = require('../lib/configure');\nvar toUrlSearchParams = require('../lib/to-url-search-params');\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/swarm').API<HTTPClientExtraOptions>} SwarmAPI\n */\n\nmodule.exports = configure(function (api) {\n  /**\n   * @type {SwarmAPI[\"peers\"]}\n   */\n  function peers() {\n    return _peers.apply(this, arguments);\n  }\n  function _peers() {\n    _peers = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var options,\n        res,\n        _yield$res$json,\n        Peers,\n        _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n            _context.next = 3;\n            return api.post('swarm/peers', {\n              signal: options.signal,\n              searchParams: toUrlSearchParams(options),\n              headers: options.headers\n            });\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.json();\n          case 6:\n            _yield$res$json = _context.sent;\n            Peers = _yield$res$json.Peers;\n            return _context.abrupt(\"return\", (Peers || []).map(function (peer) {\n              return {\n                addr: new Multiaddr(peer.Addr),\n                peer: peer.Peer,\n                muxer: peer.Muxer,\n                latency: peer.Latency,\n                streams: peer.Streams,\n                direction: peer.Direction == null ? undefined : peer.Direction === 0 ? 'inbound' : 'outbound'\n              };\n            }));\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return _peers.apply(this, arguments);\n  }\n  return peers;\n});","map":{"version":3,"names":["require","Multiaddr","configure","toUrlSearchParams","module","exports","api","peers","options","post","signal","searchParams","headers","res","json","Peers","map","peer","addr","Addr","Peer","muxer","Muxer","latency","Latency","streams","Streams","direction","Direction","undefined"],"sources":["C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/ipfs-http-client/src/swarm/peers.js"],"sourcesContent":["'use strict'\n\nconst { Multiaddr } = require('multiaddr')\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/swarm').API<HTTPClientExtraOptions>} SwarmAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {SwarmAPI[\"peers\"]}\n   */\n  async function peers (options = {}) {\n    const res = await api.post('swarm/peers', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    /** @type {{ Peers: { Peer: string, Addr: string, Muxer?: string, Latency?: string, Streams?: string[], Direction?: 0 | 1 }[] }} */\n    const { Peers } = await res.json()\n\n    return (Peers || []).map(peer => {\n      return {\n        addr: new Multiaddr(peer.Addr),\n        peer: peer.Peer,\n        muxer: peer.Muxer,\n        latency: peer.Latency,\n        streams: peer.Streams,\n        direction: peer.Direction == null ? undefined : peer.Direction === 0 ? 'inbound' : 'outbound'\n      }\n    })\n  }\n  return peers\n})\n"],"mappings":"AAAA,YAAY;;AAAA;AAAA;AAEZ,eAAsBA,OAAO,CAAC,WAAW,CAAC;EAAlCC,SAAS,YAATA,SAAS;AACjB,IAAMC,SAAS,GAAGF,OAAO,CAAC,kBAAkB,CAAC;AAC7C,IAAMG,iBAAiB,GAAGH,OAAO,CAAC,6BAA6B,CAAC;;AAEhE;AACA;AACA;AACA;;AAEAI,MAAM,CAACC,OAAO,GAAGH,SAAS,CAAC,UAAAI,GAAG,EAAI;EAChC;AACF;AACA;EAFE,SAGeC,KAAK;IAAA;EAAA;EAAA;IAAA,oEAApB;MAAA;QAAA;QAAA;QAAA;QAAA;MAAA;QAAA;UAAA;YAAsBC,OAAO,2DAAG,CAAC,CAAC;YAAA;YAAA,OACdF,GAAG,CAACG,IAAI,CAAC,aAAa,EAAE;cACxCC,MAAM,EAAEF,OAAO,CAACE,MAAM;cACtBC,YAAY,EAAER,iBAAiB,CAACK,OAAO,CAAC;cACxCI,OAAO,EAAEJ,OAAO,CAACI;YACnB,CAAC,CAAC;UAAA;YAJIC,GAAG;YAAA;YAAA,OAOeA,GAAG,CAACC,IAAI,EAAE;UAAA;YAAA;YAA1BC,KAAK,mBAALA,KAAK;YAAA,iCAEN,CAACA,KAAK,IAAI,EAAE,EAAEC,GAAG,CAAC,UAAAC,IAAI,EAAI;cAC/B,OAAO;gBACLC,IAAI,EAAE,IAAIjB,SAAS,CAACgB,IAAI,CAACE,IAAI,CAAC;gBAC9BF,IAAI,EAAEA,IAAI,CAACG,IAAI;gBACfC,KAAK,EAAEJ,IAAI,CAACK,KAAK;gBACjBC,OAAO,EAAEN,IAAI,CAACO,OAAO;gBACrBC,OAAO,EAAER,IAAI,CAACS,OAAO;gBACrBC,SAAS,EAAEV,IAAI,CAACW,SAAS,IAAI,IAAI,GAAGC,SAAS,GAAGZ,IAAI,CAACW,SAAS,KAAK,CAAC,GAAG,SAAS,GAAG;cACrF,CAAC;YACH,CAAC,CAAC;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA,CACH;IAAA;EAAA;EACD,OAAOrB,KAAK;AACd,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}