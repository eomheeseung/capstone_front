{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _objectSpread = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _asyncToGenerator = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _require = require('multiformats/cid'),\n  CID = _require.CID;\nvar multipartRequest = require('../lib/multipart-request');\nvar configure = require('../lib/configure');\nvar toUrlSearchParams = require('../lib/to-url-search-params');\nvar abortSignal = require('../lib/abort-signal');\nvar _require2 = require('native-abort-controller'),\n  AbortController = _require2.AbortController;\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/block').API<HTTPClientExtraOptions>} BlockAPI\n */\n\nmodule.exports = configure(function (api) {\n  /**\n   * @type {BlockAPI[\"put\"]}\n   */\n  function put(_x) {\n    return _put.apply(this, arguments);\n  }\n  function _put() {\n    _put = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(data) {\n      var options,\n        controller,\n        signal,\n        res,\n        response,\n        _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n            // allow aborting requests on body errors\n            controller = new AbortController();\n            signal = abortSignal(controller.signal, options.signal);\n            _context.prev = 3;\n            _context.t0 = api;\n            _context.t1 = _objectSpread;\n            _context.t2 = {\n              signal: signal,\n              searchParams: toUrlSearchParams(options)\n            };\n            _context.next = 9;\n            return multipartRequest(data, controller, options.headers);\n          case 9:\n            _context.t3 = _context.sent;\n            _context.t4 = (0, _context.t1)(_context.t2, _context.t3);\n            _context.next = 13;\n            return _context.t0.post.call(_context.t0, 'block/put', _context.t4);\n          case 13:\n            response = _context.sent;\n            _context.next = 16;\n            return response.json();\n          case 16:\n            res = _context.sent;\n            _context.next = 28;\n            break;\n          case 19:\n            _context.prev = 19;\n            _context.t5 = _context[\"catch\"](3);\n            if (!(options.format === 'dag-pb')) {\n              _context.next = 25;\n              break;\n            }\n            return _context.abrupt(\"return\", put(data, _objectSpread(_objectSpread({}, options), {}, {\n              format: 'protobuf'\n            })));\n          case 25:\n            if (!(options.format === 'dag-cbor')) {\n              _context.next = 27;\n              break;\n            }\n            return _context.abrupt(\"return\", put(data, _objectSpread(_objectSpread({}, options), {}, {\n              format: 'cbor'\n            })));\n          case 27:\n            throw _context.t5;\n          case 28:\n            return _context.abrupt(\"return\", CID.parse(res.Key));\n          case 29:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[3, 19]]);\n    }));\n    return _put.apply(this, arguments);\n  }\n  return put;\n});","map":{"version":3,"names":["require","CID","multipartRequest","configure","toUrlSearchParams","abortSignal","AbortController","module","exports","api","put","data","options","controller","signal","searchParams","headers","post","response","json","res","format","parse","Key"],"sources":["C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/ipfs-http-client/src/block/put.js"],"sourcesContent":["'use strict'\n\nconst { CID } = require('multiformats/cid')\nconst multipartRequest = require('../lib/multipart-request')\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\nconst abortSignal = require('../lib/abort-signal')\nconst { AbortController } = require('native-abort-controller')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/block').API<HTTPClientExtraOptions>} BlockAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {BlockAPI[\"put\"]}\n   */\n  async function put (data, options = {}) {\n    // allow aborting requests on body errors\n    const controller = new AbortController()\n    const signal = abortSignal(controller.signal, options.signal)\n\n    let res\n    try {\n      const response = await api.post('block/put', {\n        signal: signal,\n        searchParams: toUrlSearchParams(options),\n        ...(\n          await multipartRequest(data, controller, options.headers)\n        )\n      })\n      res = await response.json()\n    } catch (err) {\n      // Retry with \"protobuf\"/\"cbor\" format for go-ipfs\n      // TODO: remove when https://github.com/ipfs/go-cid/issues/75 resolved\n      if (options.format === 'dag-pb') {\n        return put(data, { ...options, format: 'protobuf' })\n      } else if (options.format === 'dag-cbor') {\n        return put(data, { ...options, format: 'cbor' })\n      }\n\n      throw err\n    }\n\n    return CID.parse(res.Key)\n  }\n\n  return put\n})\n"],"mappings":"AAAA,YAAY;;AAAA;AAAA;AAAA;AAEZ,eAAgBA,OAAO,CAAC,kBAAkB,CAAC;EAAnCC,GAAG,YAAHA,GAAG;AACX,IAAMC,gBAAgB,GAAGF,OAAO,CAAC,0BAA0B,CAAC;AAC5D,IAAMG,SAAS,GAAGH,OAAO,CAAC,kBAAkB,CAAC;AAC7C,IAAMI,iBAAiB,GAAGJ,OAAO,CAAC,6BAA6B,CAAC;AAChE,IAAMK,WAAW,GAAGL,OAAO,CAAC,qBAAqB,CAAC;AAClD,gBAA4BA,OAAO,CAAC,yBAAyB,CAAC;EAAtDM,eAAe,aAAfA,eAAe;;AAEvB;AACA;AACA;AACA;;AAEAC,MAAM,CAACC,OAAO,GAAGL,SAAS,CAAC,UAAAM,GAAG,EAAI;EAChC;AACF;AACA;EAFE,SAGeC,GAAG;IAAA;EAAA;EAAA;IAAA,kEAAlB,iBAAoBC,IAAI;MAAA;QAAA;QAAA;QAAA;QAAA;QAAA;MAAA;QAAA;UAAA;YAAEC,OAAO,2DAAG,CAAC,CAAC;YACpC;YACMC,UAAU,GAAG,IAAIP,eAAe,EAAE;YAClCQ,MAAM,GAAGT,WAAW,CAACQ,UAAU,CAACC,MAAM,EAAEF,OAAO,CAACE,MAAM,CAAC;YAAA;YAAA,cAIpCL,GAAG;YAAA;YAAA;cACxBK,MAAM,EAAEA,MAAM;cACdC,YAAY,EAAEX,iBAAiB,CAACQ,OAAO;YAAC;YAAA;YAAA,OAEhCV,gBAAgB,CAACS,IAAI,EAAEE,UAAU,EAAED,OAAO,CAACI,OAAO,CAAC;UAAA;YAAA;YAAA;YAAA;YAAA,mBAJlCC,IAAI,mBAAC,WAAW;UAAA;YAArCC,QAAQ;YAAA;YAAA,OAOFA,QAAQ,CAACC,IAAI,EAAE;UAAA;YAA3BC,GAAG;YAAA;YAAA;UAAA;YAAA;YAAA;YAAA,MAICR,OAAO,CAACS,MAAM,KAAK,QAAQ;cAAA;cAAA;YAAA;YAAA,iCACtBX,GAAG,CAACC,IAAI,kCAAOC,OAAO;cAAES,MAAM,EAAE;YAAU,GAAG;UAAA;YAAA,MAC3CT,OAAO,CAACS,MAAM,KAAK,UAAU;cAAA;cAAA;YAAA;YAAA,iCAC/BX,GAAG,CAACC,IAAI,kCAAOC,OAAO;cAAES,MAAM,EAAE;YAAM,GAAG;UAAA;YAAA;UAAA;YAAA,iCAM7CpB,GAAG,CAACqB,KAAK,CAACF,GAAG,CAACG,GAAG,CAAC;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA,CAC1B;IAAA;EAAA;EAED,OAAOb,GAAG;AACZ,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}