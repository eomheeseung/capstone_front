{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar toCamel = require('../lib/object-to-camel');\nvar configure = require('../lib/configure');\nvar toUrlSearchParams = require('../lib/to-url-search-params');\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\nmodule.exports = configure(function (api) {\n  /**\n   * @type {KeyAPI[\"list\"]}\n   */\n  function list() {\n    return _list.apply(this, arguments);\n  }\n  function _list() {\n    _list = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var options,\n        res,\n        data,\n        _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n            _context.next = 3;\n            return api.post('key/list', {\n              signal: options.signal,\n              searchParams: toUrlSearchParams(options),\n              headers: options.headers\n            });\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.json();\n          case 6:\n            data = _context.sent;\n            return _context.abrupt(\"return\", (data.Keys || []).map(function ( /** @type {any} **/k) {\n              return toCamel(k);\n            }));\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return _list.apply(this, arguments);\n  }\n  return list;\n});","map":{"version":3,"names":["toCamel","require","configure","toUrlSearchParams","module","exports","api","list","options","post","signal","searchParams","headers","res","json","data","Keys","map","k"],"sources":["C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/ipfs-http-client/src/key/list.js"],"sourcesContent":["'use strict'\n\nconst toCamel = require('../lib/object-to-camel')\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {KeyAPI[\"list\"]}\n   */\n  async function list (options = {}) {\n    const res = await api.post('key/list', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    // @ts-ignore server output is not typed\n    return (data.Keys || []).map((/** @type {any} **/ k) => toCamel(k))\n  }\n  return list\n})\n"],"mappings":"AAAA,YAAY;;AAAA;AAAA;AAEZ,IAAMA,OAAO,GAAGC,OAAO,CAAC,wBAAwB,CAAC;AACjD,IAAMC,SAAS,GAAGD,OAAO,CAAC,kBAAkB,CAAC;AAC7C,IAAME,iBAAiB,GAAGF,OAAO,CAAC,6BAA6B,CAAC;;AAEhE;AACA;AACA;AACA;;AAEAG,MAAM,CAACC,OAAO,GAAGH,SAAS,CAAC,UAAAI,GAAG,EAAI;EAChC;AACF;AACA;EAFE,SAGeC,IAAI;IAAA;EAAA;EAAA;IAAA,mEAAnB;MAAA;QAAA;QAAA;QAAA;MAAA;QAAA;UAAA;YAAqBC,OAAO,2DAAG,CAAC,CAAC;YAAA;YAAA,OACbF,GAAG,CAACG,IAAI,CAAC,UAAU,EAAE;cACrCC,MAAM,EAAEF,OAAO,CAACE,MAAM;cACtBC,YAAY,EAAER,iBAAiB,CAACK,OAAO,CAAC;cACxCI,OAAO,EAAEJ,OAAO,CAACI;YACnB,CAAC,CAAC;UAAA;YAJIC,GAAG;YAAA;YAAA,OAKUA,GAAG,CAACC,IAAI,EAAE;UAAA;YAAvBC,IAAI;YAAA,iCAGH,CAACA,IAAI,CAACC,IAAI,IAAI,EAAE,EAAEC,GAAG,CAAC,WAAC,mBAAoBC,CAAC;cAAA,OAAKlB,OAAO,CAACkB,CAAC,CAAC;YAAA,EAAC;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA,CACpE;IAAA;EAAA;EACD,OAAOX,IAAI;AACb,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}