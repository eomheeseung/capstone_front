{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _wrapAsyncGenerator = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/wrapAsyncGenerator.js\").default;\nvar _awaitAsyncGenerator = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/awaitAsyncGenerator.js\").default;\nvar _asyncGeneratorDelegate = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/asyncGeneratorDelegate.js\").default;\nvar _asyncIterator = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/asyncIterator.js\").default;\nvar _require = require('multiformats/cid'),\n  CID = _require.CID;\nvar configure = require('../lib/configure');\nvar toUrlSearchParams = require('../lib/to-url-search-params');\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/repo').API<HTTPClientExtraOptions>} RepoAPI\n */\n\nmodule.exports = configure(function (api) {\n  /**\n   * @type {RepoAPI[\"gc\"]}\n   */\n  function gc() {\n    return _gc.apply(this, arguments);\n  }\n  function _gc() {\n    _gc = _wrapAsyncGenerator(function () {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var res;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _awaitAsyncGenerator(api.post('repo/gc', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams(options),\n                headers: options.headers,\n                transform: function transform(res) {\n                  return {\n                    err: res.Error ? new Error(res.Error) : null,\n                    cid: (res.Key || {})['/'] ? CID.parse(res.Key['/']) : null\n                  };\n                }\n              }));\n            case 2:\n              res = _context.sent;\n              return _context.delegateYield(_asyncGeneratorDelegate(_asyncIterator(res.ndjson()), _awaitAsyncGenerator), \"t0\", 4);\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      })();\n    });\n    return _gc.apply(this, arguments);\n  }\n  return gc;\n});","map":{"version":3,"names":["require","CID","configure","toUrlSearchParams","module","exports","api","gc","options","post","signal","searchParams","headers","transform","res","err","Error","cid","Key","parse","ndjson"],"sources":["C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/ipfs-http-client/src/repo/gc.js"],"sourcesContent":["'use strict'\n\nconst { CID } = require('multiformats/cid')\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/repo').API<HTTPClientExtraOptions>} RepoAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {RepoAPI[\"gc\"]}\n   */\n  async function * gc (options = {}) {\n    const res = await api.post('repo/gc', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers,\n      transform: (res) => {\n        return {\n          err: res.Error ? new Error(res.Error) : null,\n          cid: (res.Key || {})['/'] ? CID.parse(res.Key['/']) : null\n        }\n      }\n    })\n\n    yield * res.ndjson()\n  }\n  return gc\n})\n"],"mappings":"AAAA,YAAY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEZ,eAAgBA,OAAO,CAAC,kBAAkB,CAAC;EAAnCC,GAAG,YAAHA,GAAG;AACX,IAAMC,SAAS,GAAGF,OAAO,CAAC,kBAAkB,CAAC;AAC7C,IAAMG,iBAAiB,GAAGH,OAAO,CAAC,6BAA6B,CAAC;;AAEhE;AACA;AACA;AACA;;AAEAI,MAAM,CAACC,OAAO,GAAGH,SAAS,CAAC,UAAAI,GAAG,EAAI;EAChC;AACF;AACA;EAFE,SAGiBC,EAAE;IAAA;EAAA;EAAA;IAAA,0BAAnB;MAAA,IAAqBC,OAAO,uEAAG,CAAC,CAAC;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;cAAA,4BACbF,GAAG,CAACG,IAAI,CAAC,SAAS,EAAE;gBACpCC,MAAM,EAAEF,OAAO,CAACE,MAAM;gBACtBC,YAAY,EAAER,iBAAiB,CAACK,OAAO,CAAC;gBACxCI,OAAO,EAAEJ,OAAO,CAACI,OAAO;gBACxBC,SAAS,EAAE,mBAACC,GAAG,EAAK;kBAClB,OAAO;oBACLC,GAAG,EAAED,GAAG,CAACE,KAAK,GAAG,IAAIA,KAAK,CAACF,GAAG,CAACE,KAAK,CAAC,GAAG,IAAI;oBAC5CC,GAAG,EAAE,CAACH,GAAG,CAACI,GAAG,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,GAAGjB,GAAG,CAACkB,KAAK,CAACL,GAAG,CAACI,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG;kBACxD,CAAC;gBACH;cACF,CAAC,CAAC;YAAA;cAVIJ,GAAG;cAYT,qEAAQA,GAAG,CAACM,MAAM,EAAE;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CACrB;IAAA;EAAA;EACD,OAAOb,EAAE;AACX,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}