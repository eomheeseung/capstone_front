{"ast":null,"code":"'use strict';\n\nconst configure = require('../lib/configure');\nconst errCode = require('err-code');\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {KeyAPI[\"export\"]}\n   */\n  const exportKey = async function (name, password) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    throw errCode(new Error('Not implemented'), 'ERR_NOT_IMPLEMENTED');\n  };\n  return exportKey;\n});","map":{"version":3,"names":["configure","require","errCode","module","exports","api","exportKey","name","password","options","Error"],"sources":["C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/ipfs-http-client/src/key/export.js"],"sourcesContent":["'use strict'\n\nconst configure = require('../lib/configure')\nconst errCode = require('err-code')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {KeyAPI[\"export\"]}\n   */\n  const exportKey = async (name, password, options = {}) => {\n    throw errCode(new Error('Not implemented'), 'ERR_NOT_IMPLEMENTED')\n  }\n\n  return exportKey\n})\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,SAAS,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAC7C,MAAMC,OAAO,GAAGD,OAAO,CAAC,UAAU,CAAC;;AAEnC;AACA;AACA;AACA;;AAEAE,MAAM,CAACC,OAAO,GAAGJ,SAAS,CAACK,GAAG,IAAI;EAChC;AACF;AACA;EACE,MAAMC,SAAS,GAAG,gBAAOC,IAAI,EAAEC,QAAQ,EAAmB;IAAA,IAAjBC,OAAO,uEAAG,CAAC,CAAC;IACnD,MAAMP,OAAO,CAAC,IAAIQ,KAAK,CAAC,iBAAiB,CAAC,EAAE,qBAAqB,CAAC;EACpE,CAAC;EAED,OAAOJ,SAAS;AAClB,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}