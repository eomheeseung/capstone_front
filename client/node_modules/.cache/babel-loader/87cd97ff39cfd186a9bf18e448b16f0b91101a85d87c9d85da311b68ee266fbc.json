{"ast":null,"code":"import _toConsumableArray from \"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _regeneratorRuntime from \"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { proxy as p, subscribe as m } from \"valtio/vanilla\";\nimport { Buffer as O } from \"buffer\";\nvar n = p({\n    selectedChain: void 0,\n    chains: void 0,\n    standaloneChains: void 0,\n    standaloneUri: void 0,\n    address: void 0,\n    profileName: void 0,\n    profileAvatar: void 0,\n    profileLoading: !1,\n    balanceLoading: !1,\n    balance: void 0,\n    isConnected: !1,\n    isStandalone: !1,\n    isCustomDesktop: !1,\n    isCustomMobile: !1,\n    isDataLoaded: !1,\n    isUiLoaded: !1,\n    walletConnectVersion: 1\n  }),\n  a = {\n    state: n,\n    subscribe: function subscribe(e) {\n      return m(n, function () {\n        return e(n);\n      });\n    },\n    setChains: function setChains(e) {\n      n.chains = e;\n    },\n    setStandaloneChains: function setStandaloneChains(e) {\n      n.standaloneChains = e;\n    },\n    setStandaloneUri: function setStandaloneUri(e) {\n      n.standaloneUri = e;\n    },\n    getSelectedChain: function getSelectedChain() {\n      var e = L.client().getNetwork().chain;\n      return e && (n.selectedChain = e), n.selectedChain;\n    },\n    setSelectedChain: function setSelectedChain(e) {\n      n.selectedChain = e;\n    },\n    setIsStandalone: function setIsStandalone(e) {\n      n.isStandalone = e;\n    },\n    setIsCustomDesktop: function setIsCustomDesktop(e) {\n      n.isCustomDesktop = e;\n    },\n    setIsCustomMobile: function setIsCustomMobile(e) {\n      n.isCustomMobile = e;\n    },\n    getAccount: function getAccount() {\n      var e = L.client().getAccount();\n      n.address = e.address, n.isConnected = e.isConnected;\n    },\n    setAddress: function setAddress(e) {\n      n.address = e;\n    },\n    setIsConnected: function setIsConnected(e) {\n      n.isConnected = e;\n    },\n    setProfileName: function setProfileName(e) {\n      n.profileName = e;\n    },\n    setProfileAvatar: function setProfileAvatar(e) {\n      n.profileAvatar = e;\n    },\n    setProfileLoading: function setProfileLoading(e) {\n      n.profileLoading = e;\n    },\n    setBalanceLoading: function setBalanceLoading(e) {\n      n.balanceLoading = e;\n    },\n    setBalance: function setBalance(e) {\n      n.balance = e;\n    },\n    setIsDataLoaded: function setIsDataLoaded(e) {\n      n.isDataLoaded = e;\n    },\n    setIsUiLoaded: function setIsUiLoaded(e) {\n      n.isUiLoaded = e;\n    },\n    setWalletConnectVersion: function setWalletConnectVersion(e) {\n      n.walletConnectVersion = e;\n    },\n    resetEnsProfile: function resetEnsProfile() {\n      n.profileName = void 0, n.profileAvatar = void 0;\n    },\n    resetBalance: function resetBalance() {\n      n.balance = void 0;\n    },\n    resetAccount: function resetAccount() {\n      n.address = void 0, n.isConnected = !1, a.resetEnsProfile(), a.resetBalance();\n    }\n  },\n  h = p({\n    initialized: !1,\n    ethereumClient: void 0\n  }),\n  L = {\n    setEthereumClient: function setEthereumClient(e) {\n      !h.initialized && e && (h.ethereumClient = e, a.setChains(e.chains), h.initialized = !0);\n    },\n    client: function client() {\n      if (h.ethereumClient) return h.ethereumClient;\n      throw new Error(\"ClientCtrl has no client set\");\n    }\n  },\n  d = {\n    WALLETCONNECT_DEEPLINK_CHOICE: \"WALLETCONNECT_DEEPLINK_CHOICE\",\n    isMobile: function isMobile() {\n      return typeof window < \"u\" ? Boolean(window.matchMedia(\"(pointer:coarse)\").matches || /Android|webOS|iPhone|iPad|iPod|BlackBerry|Opera Mini/.test(navigator.userAgent)) : !1;\n    },\n    isAndroid: function isAndroid() {\n      return d.isMobile() && navigator.userAgent.toLowerCase().includes(\"android\");\n    },\n    isEmptyObject: function isEmptyObject(e) {\n      return Object.getPrototypeOf(e) === Object.prototype && Object.getOwnPropertyNames(e).length === 0 && Object.getOwnPropertySymbols(e).length === 0;\n    },\n    isHttpUrl: function isHttpUrl(e) {\n      return e.startsWith(\"http://\") || e.startsWith(\"https://\");\n    },\n    formatNativeUrl: function formatNativeUrl(e, t, s) {\n      if (d.isHttpUrl(e)) return this.formatUniversalUrl(e, t, s);\n      var o = e;\n      o.includes(\"://\") || (o = e.replaceAll(\"/\", \"\").replaceAll(\":\", \"\"), o = \"\".concat(o, \"://\")), this.setWalletConnectDeepLink(o, s);\n      var l = encodeURIComponent(t);\n      return \"\".concat(o, \"wc?uri=\").concat(l);\n    },\n    formatUniversalUrl: function formatUniversalUrl(e, t, s) {\n      if (!d.isHttpUrl(e)) return this.formatNativeUrl(e, t, s);\n      var o = e;\n      e.endsWith(\"/\") && (o = e.slice(0, -1)), this.setWalletConnectDeepLink(o, s);\n      var l = encodeURIComponent(t);\n      return \"\".concat(o, \"/wc?uri=\").concat(l);\n    },\n    wait: function wait(e) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", new Promise(function (t) {\n                setTimeout(t, e);\n              }));\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    },\n    openHref: function openHref(e) {\n      var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"_self\";\n      window.open(e, t, \"noreferrer noopener\");\n    },\n    setWalletConnectDeepLink: function setWalletConnectDeepLink(e, t) {\n      localStorage.setItem(d.WALLETCONNECT_DEEPLINK_CHOICE, JSON.stringify({\n        href: e,\n        name: t\n      }));\n    },\n    setWalletConnectAndroidDeepLink: function setWalletConnectAndroidDeepLink(e) {\n      var _e$split = e.split(\"?\"),\n        _e$split2 = _slicedToArray(_e$split, 1),\n        t = _e$split2[0];\n      localStorage.setItem(d.WALLETCONNECT_DEEPLINK_CHOICE, JSON.stringify({\n        href: t,\n        name: \"Android\"\n      }));\n    },\n    removeWalletConnectDeepLink: function removeWalletConnectDeepLink() {\n      localStorage.removeItem(d.WALLETCONNECT_DEEPLINK_CHOICE);\n    },\n    isNull: function isNull(e) {\n      return e === null;\n    }\n  };\nfunction S() {\n  return typeof matchMedia < \"u\" && matchMedia(\"(prefers-color-scheme: dark)\").matches;\n}\nvar f = p({\n    projectId: \"\",\n    themeMode: S() ? \"dark\" : \"light\",\n    themeColor: \"default\",\n    themeBackground: d.isMobile() ? \"themeColor\" : \"gradient\",\n    themeZIndex: 89,\n    mobileWallets: void 0,\n    desktopWallets: void 0,\n    walletImages: void 0,\n    chainImages: void 0,\n    tokenImages: void 0,\n    standaloneChains: void 0,\n    enableStandaloneMode: !1,\n    enableNetworkView: !1,\n    enableAccountView: !0,\n    defaultChain: void 0,\n    explorerAllowList: void 0,\n    explorerDenyList: void 0,\n    termsOfServiceUrl: void 0,\n    privacyPolicyUrl: void 0\n  }),\n  W = {\n    state: f,\n    subscribe: function subscribe(e) {\n      return m(f, function () {\n        return e(f);\n      });\n    },\n    setConfig: function setConfig(e) {\n      var t, s, o, l;\n      if (a.setStandaloneChains(e.standaloneChains), a.setIsStandalone(Boolean((t = e.standaloneChains) == null ? void 0 : t.length) || Boolean(e.enableStandaloneMode)), a.setIsCustomMobile(Boolean((s = e.mobileWallets) == null ? void 0 : s.length)), a.setIsCustomDesktop(Boolean((o = e.desktopWallets) == null ? void 0 : o.length)), a.setWalletConnectVersion((l = e.walletConnectVersion) != null ? l : 1), e.defaultChain) a.setSelectedChain(e.defaultChain);else if (!a.state.isStandalone) {\n        var u = L.client().getDefaultChain();\n        a.setSelectedChain(u);\n      }\n      Object.assign(f, e);\n    },\n    setThemeConfig: function setThemeConfig(e) {\n      Object.assign(f, e);\n    }\n  },\n  I = \"https://explorer-api.walletconnect.com\";\nfunction y(e) {\n  var t = Object.fromEntries(Object.entries(e).filter(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      s = _ref2[0],\n      o = _ref2[1];\n    return typeof o < \"u\" && o !== null && o !== \"\";\n  }).map(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n      s = _ref4[0],\n      o = _ref4[1];\n    return [s, o.toString()];\n  }));\n  return new URLSearchParams(t).toString();\n}\nvar v = {\n    fetchWallets: function fetchWallets(e, t) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var s, o;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              s = y(t), o = \"\".concat(I, \"/v3/wallets?projectId=\").concat(e, \"&\").concat(s);\n              _context2.next = 3;\n              return fetch(o);\n            case 3:\n              return _context2.abrupt(\"return\", _context2.sent.json());\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }))();\n    },\n    formatImageUrl: function formatImageUrl(e, t) {\n      return \"\".concat(I, \"/v3/logo/lg/\").concat(t, \"?projectId=\").concat(e);\n    }\n  },\n  r = p({\n    wallets: {\n      listings: [],\n      total: 0,\n      page: 1\n    },\n    search: {\n      listings: [],\n      total: 0,\n      page: 1\n    },\n    previewWallets: [],\n    recomendedWallets: []\n  });\nfunction b() {\n  var e = W.state.projectId;\n  if (!e) throw new Error(\"projectId is required to work with explorer api\");\n  return e;\n}\nvar A = {\n    state: r,\n    getPreviewWallets: function getPreviewWallets(e) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var _yield$v$fetchWallets, t;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return v.fetchWallets(b(), e);\n            case 2:\n              _yield$v$fetchWallets = _context3.sent;\n              t = _yield$v$fetchWallets.listings;\n              return _context3.abrupt(\"return\", (r.previewWallets = Object.values(t), r.previewWallets));\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }))();\n    },\n    getRecomendedWallets: function getRecomendedWallets() {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var _yield$v$fetchWallets2, e;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return v.fetchWallets(b(), {\n                page: 1,\n                entries: 6\n              });\n            case 2:\n              _yield$v$fetchWallets2 = _context4.sent;\n              e = _yield$v$fetchWallets2.listings;\n              r.recomendedWallets = Object.values(e);\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4);\n      }))();\n    },\n    getPaginatedWallets: function getPaginatedWallets(e) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var t, s, _yield$v$fetchWallets3, o, l, u, w;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              t = e.page;\n              s = e.search;\n              _context5.next = 4;\n              return v.fetchWallets(b(), e);\n            case 4:\n              _yield$v$fetchWallets3 = _context5.sent;\n              o = _yield$v$fetchWallets3.listings;\n              l = _yield$v$fetchWallets3.total;\n              u = Object.values(o);\n              w = s ? \"search\" : \"wallets\";\n              return _context5.abrupt(\"return\", (r[w] = {\n                listings: [].concat(_toConsumableArray(r[w].listings), u),\n                total: l,\n                page: t !== null && t !== void 0 ? t : 1\n              }, {\n                listings: u,\n                total: l\n              }));\n            case 10:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5);\n      }))();\n    },\n    getImageUrl: function getImageUrl(e) {\n      return v.formatImageUrl(b(), e);\n    },\n    resetSearch: function resetSearch() {\n      r.search = {\n        listings: [],\n        total: 0,\n        page: 1\n      };\n    }\n  },\n  i = p({\n    history: [\"ConnectWallet\"],\n    view: \"ConnectWallet\",\n    data: void 0\n  }),\n  g = {\n    state: i,\n    subscribe: function subscribe(e) {\n      return m(i, function () {\n        return e(i);\n      });\n    },\n    push: function push(e, t) {\n      e !== i.view && (i.view = e, t && (i.data = t), i.history.push(e));\n    },\n    replace: function replace(e) {\n      i.view = e, i.history = [e];\n    },\n    goBack: function goBack() {\n      if (i.history.length > 1) {\n        i.history.pop();\n        var _i$history$slice = i.history.slice(-1),\n          _i$history$slice2 = _slicedToArray(_i$history$slice, 1),\n          e = _i$history$slice2[0];\n        i.view = e;\n      }\n    }\n  },\n  C = p({\n    open: !1\n  }),\n  k = {\n    state: C,\n    subscribe: function subscribe(e) {\n      return m(C, function () {\n        return e(C);\n      });\n    },\n    open: function open(e) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              return _context6.abrupt(\"return\", new Promise(function (t) {\n                var _a$state = a.state,\n                  s = _a$state.isConnected,\n                  o = _a$state.isStandalone,\n                  l = _a$state.isUiLoaded,\n                  u = _a$state.isDataLoaded,\n                  w = W.state.enableNetworkView;\n                if (o ? (a.setStandaloneUri(e === null || e === void 0 ? void 0 : e.uri), a.setStandaloneChains(e === null || e === void 0 ? void 0 : e.standaloneChains), g.replace(\"ConnectWallet\")) : e != null && e.route ? g.replace(e.route) : s ? g.replace(\"Account\") : w ? g.replace(\"SelectNetwork\") : g.replace(\"ConnectWallet\"), l && u) C.open = !0, t();else {\n                  var E = setInterval(function () {\n                    a.state.isUiLoaded && a.state.isDataLoaded && (clearInterval(E), C.open = !0, t());\n                  }, 200);\n                }\n              }));\n            case 1:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6);\n      }))();\n    },\n    close: function close() {\n      C.open = !1;\n    }\n  },\n  c = p({\n    open: !1,\n    message: \"\",\n    variant: \"success\"\n  }),\n  P = {\n    state: c,\n    subscribe: function subscribe(e) {\n      return m(c, function () {\n        return e(c);\n      });\n    },\n    openToast: function openToast(e, t) {\n      c.open = !0, c.message = e, c.variant = t;\n    },\n    closeToast: function closeToast() {\n      c.open = !1;\n    }\n  };\ntypeof window < \"u\" && (window.Buffer || (window.Buffer = O), window.global || (window.global = window), window.process || (window.process = {\n  env: {}\n}));\nexport { L as ClientCtrl, W as ConfigCtrl, d as CoreUtil, A as ExplorerCtrl, k as ModalCtrl, a as OptionsCtrl, g as RouterCtrl, P as ToastCtrl };","map":{"version":3,"mappings":";;;;;;AAKA,IAAMA,IAAQC,EAAwB;IACpCC,eAAe;IACfC,QAAQ;IACRC,kBAAkB;IAClBC,eAAe;IACfC,SAAS;IACTC,aAAa;IACbC,eAAe;IACfC,gBAAgB;IAChBC,gBAAgB;IAChBC,SAAS;IACTC,aAAa;IACbC,cAAc;IACdC,iBAAiB;IACjBC,gBAAgB;IAChBC,cAAc;IACdC,YAAY;IACZC,sBAAsB;EACxB,CAAC;EAGYC,IAAc;IACzBnB;IAEAoB,8BAAUC,GAAgD;MACxD,OAAOC,EAAUtB,GAAO;QAAA,OAAMqB,EAASrB,CAAK,CAAC;MAAA,EAC/C;IAAA;IAEAuB,8BAAUpB,GAAqC;MAC7CH,EAAMG,SAASA,CACjB;IAAA;IAEAqB,kDAAoBpB,GAAwD;MAC1EJ,EAAMI,mBAAmBA,CAC3B;IAAA;IAEAqB,4CAAiBpB,GAAkD;MACjEL,EAAMK,gBAAgBA,CACxB;IAAA;IAEAqB,8CAAmB;MACjB,IAAMxB,IAAgByB,EAAWC,SAASC,aAAaC;MACvD,OAAI5B,MACFF,EAAME,gBAAgBA,IAGjBF,EAAME,aACf;IAAA;IAEA6B,4CAAiB7B,GAAkD;MACjEF,EAAME,gBAAgBA,CACxB;IAAA;IAEA8B,0CAAgBnB,GAAgD;MAC9Db,EAAMa,eAAeA,CACvB;IAAA;IAEAoB,gDAAmBnB,GAAsD;MACvEd,EAAMc,kBAAkBA,CAC1B;IAAA;IAEAoB,8CAAkBnB,GAAoD;MACpEf,EAAMe,iBAAiBA,CACzB;IAAA;IAEAoB,kCAAa;MACX,IAAMC,IAAUT,EAAWC,QAAO,CAAEO,YAAW;MAC/CnC,EAAMM,UAAU8B,EAAQ9B,SACxBN,EAAMY,cAAcwB,EAAQxB,WAC9B;IAAA;IAEAyB,gCAAW/B,GAAsC;MAC/CN,EAAMM,UAAUA,CAClB;IAAA;IAEAgC,wCAAe1B,GAA8C;MAC3DZ,EAAMY,cAAcA,CACtB;IAAA;IAEA2B,wCAAehC,GAA8C;MAC3DP,EAAMO,cAAcA,CACtB;IAAA;IAEAiC,4CAAiBhC,GAAkD;MACjER,EAAMQ,gBAAgBA,CACxB;IAAA;IAEAiC,8CAAkBhC,GAAoD;MACpET,EAAMS,iBAAiBA,CACzB;IAAA;IAEAiC,8CAAkBhC,GAAoD;MACpEV,EAAMU,iBAAiBA,CACzB;IAAA;IAEAiC,gCAAWhC,GAAsC;MAC/CX,EAAMW,UAAUA,CAClB;IAAA;IAEAiC,0CAAgB5B,GAAgD;MAC9DhB,EAAMgB,eAAeA,CACvB;IAAA;IAEA6B,sCAAc5B,GAA4C;MACxDjB,EAAMiB,aAAaA,CACrB;IAAA;IAEA6B,0DAAwB5B,GAAgE;MACtFlB,EAAMkB,uBAAuBA,CAC/B;IAAA;IAEA6B,4CAAkB;MAChB/C,EAAMO,cAAc,QACpBP,EAAMQ,gBAAgB,MACxB;IAAA;IAEAwC,sCAAe;MACbhD,EAAMW,UAAU,MAClB;IAAA;IAEAsC,sCAAe;MACbjD,EAAMM,UAAU,QAChBN,EAAMY,cAAc,IACpBO,EAAY4B,mBACZ5B,EAAY6B,cACd;IAAA;EACF;EC9HMhD,IAAQC,EAAuB;IACnCiD,aAAa;IACbC,gBAAgB;EAClB,CAAC;EAGYxB,IAAa;IACxByB,8CAAkBD,GAAmD;MAC/D,CAACnD,EAAMkD,eAAeC,MACxBnD,EAAMmD,iBAAiBA,GACvBhC,EAAYI,UAAU4B,EAAehD,MAAM,GAC3CH,EAAMkD,cAAc,GAExB;IAAA;IAEAtB,0BAAS;MACP,IAAI5B,EAAMmD,gBACR,OAAOnD,EAAMmD;MAGf,MAAM,IAAIE,MAAM,8BAA8B,CAChD;IAAA;EACF;EC3BaC,IAAW;IACtBC,+BAA+B;IAE/BC,8BAAW;MACT,OAAI,OAAOC,SAAW,MACbC,QACLD,OAAOE,WAAW,kBAAkB,EAAEC,WACpC,uDAAwDC,KAAKC,UAAUC,SAAS,CACpF,IAGK,EACT;IAAA;IAEAC,gCAAY;MACV,OAAOV,EAASE,UAAS,IAAKM,UAAUC,UAAUE,aAAY,CAAEC,SAAS,SAAS,CACpF;IAAA;IAEAC,sCAAcC,GAAgB;MAC5B,OACEC,OAAOC,eAAeF,CAAK,MAAMC,OAAOE,aACxCF,OAAOG,oBAAoBJ,CAAK,EAAEK,WAAW,KAC7CJ,OAAOK,sBAAsBN,CAAK,EAAEK,WAAW,CAEnD;IAAA;IAEAE,8BAAUC,GAAa;MACrB,OAAOA,EAAIC,WAAW,SAAS,KAAKD,EAAIC,WAAW,UAAU,CAC/D;IAAA;IAEAC,0CAAgBC,GAAgBC,GAAeC,GAAsB;MACnE,IAAI3B,EAASqB,UAAUI,CAAM,GAC3B,OAAO,KAAKG,mBAAmBH,GAAQC,GAAOC,CAAI;MAEpD,IAAIE,IAAaJ;MACZI,EAAWjB,SAAS,KAAK,MAC5BiB,IAAaJ,EAAOK,WAAW,KAAK,EAAE,EAAEA,WAAW,KAAK,EAAE,GAC1DD,cAAgBA,YAElB,KAAKE,yBAAyBF,GAAYF,CAAI;MAC9C,IAAMK,IAAeC,mBAAmBP,CAAK;MAE7C,iBAAUG,qBAAoBG;IAChC;IAEAJ,gDAAmBH,GAAgBC,GAAeC,GAAsB;MACtE,IAAI,CAAC3B,EAASqB,UAAUI,CAAM,GAC5B,OAAO,KAAKD,gBAAgBC,GAAQC,GAAOC,CAAI;MAEjD,IAAIO,IAAcT;MACdA,EAAOU,SAAS,GAAG,MACrBD,IAAcT,EAAOW,MAAM,GAAG,EAAE,IAElC,KAAKL,yBAAyBG,GAAaP,CAAI;MAC/C,IAAMK,IAAeC,mBAAmBP,CAAK;MAE7C,iBAAUQ,sBAAsBF;IAClC;IAEMK,oBAAKC,GAAqB;MAAA;QAAA;UAAA;YAAA;cAAA,iCACvB,IAAIC,QAAQC,aAAW;gBAC5BC,WAAWD,GAASF,CAAW,CACjC;cAAA,CAAC,CACH;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;IAEAI,4BAASC,GAAgC;MAAA,IAAlBC,wEAAS;MAC9BzC,OAAO0C,KAAKF,GAAMC,GAAQ,qBAAqB,CACjD;IAAA;IAEAb,4DAAyBY,GAAchB,GAAc;MACnDmB,aAAaC,QAAQ/C,EAASC,+BAA+B+C,KAAKC,UAAU;QAAEN;QAAMhB;MAAK,CAAC,CAAC,CAC7F;IAAA;IAEAuB,0EAAgCxB,GAAe;MAC7C,eAAeA,EAAMyB,MAAM,GAAG;QAAA;QAAvBR,CAAI;MAEXG,aAAaC,QACX/C,EAASC,+BACT+C,KAAKC,UAAU;QAAEN;QAAMhB,MAAM;MAAU,CAAC,CAC1C,CACF;IAAA;IAEAyB,oEAA8B;MAC5BN,aAAaO,WAAWrD,EAASC,6BAA6B,CAChE;IAAA;IAEAqD,wBAAUxC,GAAgC;MACxC,OAAOA,MAAU,IACnB;IAAA;EACF;AClFA,SAASyC,IAAa;EACpB,OAAO,OAAOlD,aAAe,OAAeA,WAAW,8BAA8B,EAAEC,OACzF;AAAA;AAEA,IAAM5D,IAAQC,EAAuB;IACnC6G,WAAW;IACXC,WAAWF,MAAe,SAAS;IACnCG,YAAY;IACZC,iBAAiB3D,EAASE,aAAa,eAAe;IACtD0D,aAAa;IACbC,eAAe;IACfC,gBAAgB;IAChBC,cAAc;IACdC,aAAa;IACbC,aAAa;IACbnH,kBAAkB;IAClBoH,sBAAsB;IACtBC,mBAAmB;IACnBC,mBAAmB;IACnBC,cAAc;IACdC,mBAAmB;IACnBC,kBAAkB;IAClBC,mBAAmB;IACnBC,kBAAkB;EACpB,CAAC;EAGYC,IAAa;IACxBhI;IAEAoB,8BAAUC,GAA+C;MACvD,OAAOC,EAAUtB,GAAO;QAAA,OAAMqB,EAASrB,CAAK,CAAC;MAAA,EAC/C;IAAA;IAEAiI,8BAAUC,GAAyB;MAzCrC;MAkDI,IARA/G,EAAYK,oBAAoB0G,EAAO9H,gBAAgB,GACvDe,EAAYa,gBACV0B,SAAQyE,MAAO/H,qBAAP,kBAAyBqE,MAAM,KAAKf,QAAQwE,EAAOV,oBAAoB,CACjF,GACArG,EAAYe,kBAAkBwB,SAAQ0E,MAAOjB,kBAAP,kBAAsB1C,MAAM,CAAC,GACnEtD,EAAYc,mBAAmByB,SAAQ2E,MAAOjB,mBAAP,kBAAuB3C,MAAM,CAAC,GACrEtD,EAAY2B,yBAAwBwF,MAAOpH,yBAAP,WAA+B,CAAC,GAEhEgH,EAAOP,cACTxG,EAAYY,iBAAiBmG,EAAOP,YAAY,WACvC,CAACxG,EAAYnB,MAAMa,cAAc;QAC1C,IAAMiB,IAAQH,EAAWC,SAAS2G;QAClCpH,EAAYY,iBAAiBD,CAAK,CACpC;MAAA;MAEAuC,OAAOmE,OAAOxI,GAAOkI,CAAM,CAC7B;IAAA;IAEAO,wCAAeC,GAA8E;MAC3FrE,OAAOmE,OAAOxI,GAAO0I,CAAK,CAC5B;IAAA;EACF;EC7DMC,IAAe;AAErB,SAASC,EAAaC,GAAoB;EACxC,IAAMC,IAAezE,OAAO0E,YAC1B1E,OAAO2E,QAAQH,CAAM,EAClBI,OAAO;IAAA;MAAEC;MAAG9E,CAAK;IAAA,OAAM,OAAOA,IAAU,OAAeA,MAAU,QAAQA,MAAU,EAAE;EAAA,GACrF+E,IAAI;IAAA;MAAEC;MAAKhF,CAAK;IAAA,OAAM,CAACgF,GAAKhF,EAAMiF,UAAU,CAAC;EAAA,EAClD;EAEA,OAAO,IAAIC,gBAAgBR,CAAY,EAAEO,UAC3C;AAAA;AAAA,IAEaE,IAAe;IACpBC,oCAAa1C,GAAmB+B,GAA8C;MAAA;QAAA;QAAA;UAAA;YAAA;cAC5EY,IAAYb,EAAaC,CAAM,GAC/Ba,cAAaf,oCAAqC7B,eAAa2C;cAAAA;cAAAA,OAC/CE,MAAMD,CAAO;YAAA;cAAA,iDAEpBE;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IACjB;IAEAC,wCAAe/C,GAAmBgD,GAAiB;MACjD,iBAAUnB,0BAA2BmB,yBAAqBhD;IAC5D;EACF;ECpBM9G,IAAQC,EAAyB;IACrC8J,SAAS;MAAEC,UAAU,EAAC;MAAGC,OAAO;MAAGC,MAAM;IAAE;IAC3CC,QAAQ;MAAEH,UAAU;MAAIC,OAAO;MAAGC,MAAM;IAAE;IAC1CE,gBAAgB;IAChBC,mBAAmB;EACrB,CAAC;AAGD,SAASC,IAAe;EACtB,IAAQxD,CAAU,GAAIkB,EAAWhI,MAAzB8G;EACR,IAAI,CAACA,GACH,MAAM,IAAIzD,MAAM,iDAAiD;EAGnE,OAAOyD,CACT;AAAA;AAAA,IAGayD,IAAe;IAC1BvK;IAEMwK,8CAAkB3B,GAAoB;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OACfU,EAAaC,aAAac,GAAgBzB,GAAM;YAAA;cAAA;cAAnEmB,CAAS,yBAATA;cAAA,mCACRhK,EAAMoK,iBAAiB/F,OAAOoG,OAAOT,CAAQ,GAEtChK,EAAMoK,cACf;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;IAEMM,sDAAuB;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OACAnB,EAAaC,aAAac,GAAa,EAAG;gBAAEJ,MAAM;gBAAGlB,SAAS;cAAE,CAAC;YAAA;cAAA;cAApFgB,CAAS,0BAATA;cACRhK,EAAMqK,oBAAoBhG,OAAOoG,OAAOT,CAAQ,CAClD;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;IAEMW,kDAAoB9B,GAAoB;MAAA;QAAA;QAAA;UAAA;YAAA;cACpCqB,IAAiBrB,EAAjBqB;cAAMC,CAAO,GAAItB,EAAXsB;cAAA;cAAA,OACiCZ,EAAaC,aAAac,KAAgBzB,CAAM;YAAA;cAAA;cAA7E+B,2BAAVZ;cAAuBC,CAAM,0BAANA;cACzBD,IAAW3F,OAAOoG,OAAOG,CAAW;cACpCC,IAAOV,IAAS,WAAW;cAAA,mCACjCnK,EAAM6K,CAAI,IAAI;gBACZb,uCAAchK,EAAM6K,CAAI,EAAEb,WAAaA,CAAQ;gBAC/CC;gBACAC,MAAMA,iCAAQ;cAChB,GAEO;gBAAEF;gBAAUC;cAAM,CAC3B;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;IAEAa,kCAAYhB,GAAiB;MAC3B,OAAOP,EAAaM,eAAeS,KAAgBR,CAAO,CAC5D;IAAA;IAEAiB,oCAAc;MACZ/K,EAAMmK,SAAS;QAAEH,UAAU,EAAC;QAAGC,OAAO;QAAGC,MAAM;MAAE,CACnD;IAAA;EACF;ECxDMlK,IAAQC,EAAuB;IACnC+K,SAAS,CAAC,eAAe;IACzBC,MAAM;IACNC,MAAM;EACR,CAAC;EAGYC,IAAa;IACxBnL;IAEAoB,8BAAUC,GAA+C;MACvD,OAAOC,EAAUtB,GAAO;QAAA,OAAMqB,EAASrB,CAAK,CAAC;MAAA,EAC/C;IAAA;IAEAoL,oBAAKH,GAA+BC,GAAgC;MAC9DD,MAASjL,EAAMiL,SACjBjL,EAAMiL,OAAOA,GACTC,MACFlL,EAAMkL,OAAOA,IAEflL,EAAMgL,QAAQI,KAAKH,CAAI,EAE3B;IAAA;IAEAI,0BAAQJ,GAA+B;MACrCjL,EAAMiL,OAAOA,GACbjL,EAAMgL,UAAU,CAACC,CAAI,CACvB;IAAA;IAEAK,0BAAS;MACP,IAAItL,EAAMgL,QAAQvG,SAAS,GAAG;QAC5BzE,EAAMgL,QAAQO;QACd,uBAAevL,EAAMgL,QAAQtF,MAAM,EAAE;UAAA;UAA9B8F,CAAI;QACXxL,EAAMiL,OAAOO,CACf;MAAA;IACF;EACF;EC1BMxL,IAAQC,EAAsB;IAClCkG,MAAM;EACR,CAAC;EAGYsF,IAAY;IACvBzL;IAEAoB,8BAAUC,GAA8C;MACtD,OAAOC,EAAUtB,GAAO;QAAA,OAAMqB,EAASrB,CAAK,CAAC;MAAA,EAC/C;IAAA;IAEMmG,oBAAKuF,GAAuB;MAAA;QAAA;UAAA;YAAA;cAAA,kCACzB,IAAI7F,QAAcC,aAAW;gBAClC,eAAgE3E,EAAYnB;kBAApEY;kBAAaC;kBAAcI;kBAAYD,CAAa,YAAbA;kBACvCyG,CAAkB,GAAIO,EAAWhI,MAAjCyH;gBAiBR,IAfI5G,KACFM,EAAYM,iBAAiBiK,wCAASC,GAAG,GACzCxK,EAAYK,oBAAoBkK,wCAAStL,gBAAgB,GACzD+K,EAAWE,QAAQ,eAAe,KACzBK,eAASE,QAClBT,EAAWE,QAAQK,EAAQE,KAAK,IACvBhL,IACTuK,EAAWE,QAAQ,SAAS,IACnB5D,IACT0D,EAAWE,QAAQ,eAAe,IAElCF,EAAWE,QAAQ,eAAe,GAIhCpK,KAAcD,GAChBhB,EAAMmG,OAAO,IACbL,SAGG;kBACH,IAAM+F,IAAWC,YAAY,YAAM;oBAC7B3K,EAAYnB,MAAMiB,cAAcE,EAAYnB,MAAMgB,iBACpD+K,cAAcF,CAAQ,GACtB7L,EAAMmG,OAAO,IACbL,IAEJ;kBAAA,GAAG,GAAG,CACR;gBAAA;cACF,CAAC,CACH;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;IAEAkG,wBAAQ;MACNhM,EAAMmG,OAAO,EACf;IAAA;EACF;EC9DMnG,IAAQC,EAAsB;IAClCkG,MAAM;IACN8F,SAAS;IACTC,SAAS;EACX,CAAC;EAGYC,IAAY;IACvBnM;IAEAoB,8BAAUC,GAA8C;MACtD,OAAOC,EAAUtB,GAAO;QAAA,OAAMqB,EAASrB,CAAK,CAAC;MAAA,EAC/C;IAAA;IAEAoM,8BAAUH,GAAoCC,GAAoC;MAChFlM,EAAMmG,OAAO,IACbnG,EAAMiM,UAAUA,GAChBjM,EAAMkM,UAAUA,CAClB;IAAA;IAEAG,kCAAa;MACXrM,EAAMmG,OAAO,EACf;IAAA;EACF;ACxBI,OAAO1C,SAAW,QACfA,OAAO6I,WACV7I,OAAO6I,SAASA,IAEb7I,OAAO8I,WACV9I,OAAO8I,SAAS9I,SAEbA,OAAO+I,YAEV/I,OAAO+I,UAAU;EAAEC,KAAK,CAAG;AAAA;AAAA","names":["state","proxy","selectedChain","chains","standaloneChains","standaloneUri","address","profileName","profileAvatar","profileLoading","balanceLoading","balance","isConnected","isStandalone","isCustomDesktop","isCustomMobile","isDataLoaded","isUiLoaded","walletConnectVersion","OptionsCtrl","subscribe","callback","valtioSub","setChains","setStandaloneChains","setStandaloneUri","getSelectedChain","ClientCtrl","client","getNetwork","chain","setSelectedChain","setIsStandalone","setIsCustomDesktop","setIsCustomMobile","getAccount","account","setAddress","setIsConnected","setProfileName","setProfileAvatar","setProfileLoading","setBalanceLoading","setBalance","setIsDataLoaded","setIsUiLoaded","setWalletConnectVersion","resetEnsProfile","resetBalance","resetAccount","initialized","ethereumClient","setEthereumClient","Error","CoreUtil","WALLETCONNECT_DEEPLINK_CHOICE","isMobile","window","Boolean","matchMedia","matches","test","navigator","userAgent","isAndroid","toLowerCase","includes","isEmptyObject","value","Object","getPrototypeOf","prototype","getOwnPropertyNames","length","getOwnPropertySymbols","isHttpUrl","url","startsWith","formatNativeUrl","appUrl","wcUri","name","formatUniversalUrl","safeAppUrl","replaceAll","setWalletConnectDeepLink","encodedWcUrl","encodeURIComponent","plainAppUrl","endsWith","slice","wait","miliseconds","Promise","resolve","setTimeout","openHref","href","target","open","localStorage","setItem","JSON","stringify","setWalletConnectAndroidDeepLink","split","removeWalletConnectDeepLink","removeItem","isNull","isDarkMode","projectId","themeMode","themeColor","themeBackground","themeZIndex","mobileWallets","desktopWallets","walletImages","chainImages","tokenImages","enableStandaloneMode","enableNetworkView","enableAccountView","defaultChain","explorerAllowList","explorerDenyList","termsOfServiceUrl","privacyPolicyUrl","ConfigCtrl","setConfig","config","_a","_b","_c","_d","getDefaultChain","assign","setThemeConfig","theme","EXPLORER_API","formatParams","params","stringParams","fromEntries","entries","filter","_","map","key","toString","URLSearchParams","ExplorerUtil","fetchWallets","urlParams","fetcUrl","fetch","json","formatImageUrl","imageId","wallets","listings","total","page","search","previewWallets","recomendedWallets","getProjectId","ExplorerCtrl","getPreviewWallets","values","getRecomendedWallets","getPaginatedWallets","listingsObj","type","getImageUrl","resetSearch","history","view","data","RouterCtrl","push","replace","goBack","pop","last","ModalCtrl","options","uri","route","interval","setInterval","clearInterval","close","message","variant","ToastCtrl","openToast","closeToast","Buffer","global","process","env"],"sources":["C:\\Users\\paete\\Prototype\\nftmusicProtoCopy\\client\\node_modules\\@web3modal\\core\\src\\controllers\\OptionsCtrl.ts","C:\\Users\\paete\\Prototype\\nftmusicProtoCopy\\client\\node_modules\\@web3modal\\core\\src\\controllers\\ClientCtrl.ts","C:\\Users\\paete\\Prototype\\nftmusicProtoCopy\\client\\node_modules\\@web3modal\\core\\src\\utils\\CoreUtil.ts","C:\\Users\\paete\\Prototype\\nftmusicProtoCopy\\client\\node_modules\\@web3modal\\core\\src\\controllers\\ConfigCtrl.ts","C:\\Users\\paete\\Prototype\\nftmusicProtoCopy\\client\\node_modules\\@web3modal\\core\\src\\utils\\ExplorerUtil.ts","C:\\Users\\paete\\Prototype\\nftmusicProtoCopy\\client\\node_modules\\@web3modal\\core\\src\\controllers\\ExplorerCtrl.ts","C:\\Users\\paete\\Prototype\\nftmusicProtoCopy\\client\\node_modules\\@web3modal\\core\\src\\controllers\\RouterCtrl.ts","C:\\Users\\paete\\Prototype\\nftmusicProtoCopy\\client\\node_modules\\@web3modal\\core\\src\\controllers\\ModalCtrl.ts","C:\\Users\\paete\\Prototype\\nftmusicProtoCopy\\client\\node_modules\\@web3modal\\core\\src\\controllers\\ToastCtrl.ts","C:\\Users\\paete\\Prototype\\nftmusicProtoCopy\\client\\node_modules\\@web3modal\\core\\src\\utils\\PolyfillUtil.ts"],"sourcesContent":["import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { OptionsCtrlState } from '../types/controllerTypes'\nimport { ClientCtrl } from './ClientCtrl'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<OptionsCtrlState>({\n  selectedChain: undefined,\n  chains: undefined,\n  standaloneChains: undefined,\n  standaloneUri: undefined,\n  address: undefined,\n  profileName: undefined,\n  profileAvatar: undefined,\n  profileLoading: false,\n  balanceLoading: false,\n  balance: undefined,\n  isConnected: false,\n  isStandalone: false,\n  isCustomDesktop: false,\n  isCustomMobile: false,\n  isDataLoaded: false,\n  isUiLoaded: false,\n  walletConnectVersion: 1\n})\n\n// -- controller --------------------------------------------------- //\nexport const OptionsCtrl = {\n  state,\n\n  subscribe(callback: (newState: OptionsCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setChains(chains?: OptionsCtrlState['chains']) {\n    state.chains = chains\n  },\n\n  setStandaloneChains(standaloneChains: OptionsCtrlState['standaloneChains']) {\n    state.standaloneChains = standaloneChains\n  },\n\n  setStandaloneUri(standaloneUri: OptionsCtrlState['standaloneUri']) {\n    state.standaloneUri = standaloneUri\n  },\n\n  getSelectedChain() {\n    const selectedChain = ClientCtrl.client().getNetwork().chain\n    if (selectedChain) {\n      state.selectedChain = selectedChain\n    }\n\n    return state.selectedChain\n  },\n\n  setSelectedChain(selectedChain: OptionsCtrlState['selectedChain']) {\n    state.selectedChain = selectedChain\n  },\n\n  setIsStandalone(isStandalone: OptionsCtrlState['isStandalone']) {\n    state.isStandalone = isStandalone\n  },\n\n  setIsCustomDesktop(isCustomDesktop: OptionsCtrlState['isCustomDesktop']) {\n    state.isCustomDesktop = isCustomDesktop\n  },\n\n  setIsCustomMobile(isCustomMobile: OptionsCtrlState['isCustomMobile']) {\n    state.isCustomMobile = isCustomMobile\n  },\n\n  getAccount() {\n    const account = ClientCtrl.client().getAccount()\n    state.address = account.address\n    state.isConnected = account.isConnected\n  },\n\n  setAddress(address: OptionsCtrlState['address']) {\n    state.address = address\n  },\n\n  setIsConnected(isConnected: OptionsCtrlState['isConnected']) {\n    state.isConnected = isConnected\n  },\n\n  setProfileName(profileName: OptionsCtrlState['profileName']) {\n    state.profileName = profileName\n  },\n\n  setProfileAvatar(profileAvatar: OptionsCtrlState['profileAvatar']) {\n    state.profileAvatar = profileAvatar\n  },\n\n  setProfileLoading(profileLoading: OptionsCtrlState['profileLoading']) {\n    state.profileLoading = profileLoading\n  },\n\n  setBalanceLoading(balanceLoading: OptionsCtrlState['balanceLoading']) {\n    state.balanceLoading = balanceLoading\n  },\n\n  setBalance(balance: OptionsCtrlState['balance']) {\n    state.balance = balance\n  },\n\n  setIsDataLoaded(isDataLoaded: OptionsCtrlState['isDataLoaded']) {\n    state.isDataLoaded = isDataLoaded\n  },\n\n  setIsUiLoaded(isUiLoaded: OptionsCtrlState['isUiLoaded']) {\n    state.isUiLoaded = isUiLoaded\n  },\n\n  setWalletConnectVersion(walletConnectVersion: OptionsCtrlState['walletConnectVersion']) {\n    state.walletConnectVersion = walletConnectVersion\n  },\n\n  resetEnsProfile() {\n    state.profileName = undefined\n    state.profileAvatar = undefined\n  },\n\n  resetBalance() {\n    state.balance = undefined\n  },\n\n  resetAccount() {\n    state.address = undefined\n    state.isConnected = false\n    OptionsCtrl.resetEnsProfile()\n    OptionsCtrl.resetBalance()\n  }\n}\n","import { proxy } from 'valtio/vanilla'\nimport type { ClientCtrlState } from '../types/controllerTypes'\nimport { OptionsCtrl } from './OptionsCtrl'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ClientCtrlState>({\n  initialized: false,\n  ethereumClient: undefined\n})\n\n// -- controller -- As function to enable correct ssr handling\nexport const ClientCtrl = {\n  setEthereumClient(ethereumClient: ClientCtrlState['ethereumClient']) {\n    if (!state.initialized && ethereumClient) {\n      state.ethereumClient = ethereumClient\n      OptionsCtrl.setChains(ethereumClient.chains)\n      state.initialized = true\n    }\n  },\n\n  client() {\n    if (state.ethereumClient) {\n      return state.ethereumClient\n    }\n\n    throw new Error('ClientCtrl has no client set')\n  }\n}\n","export const CoreUtil = {\n  WALLETCONNECT_DEEPLINK_CHOICE: 'WALLETCONNECT_DEEPLINK_CHOICE',\n\n  isMobile() {\n    if (typeof window !== 'undefined') {\n      return Boolean(\n        window.matchMedia('(pointer:coarse)').matches ||\n          /Android|webOS|iPhone|iPad|iPod|BlackBerry|Opera Mini/u.test(navigator.userAgent)\n      )\n    }\n\n    return false\n  },\n\n  isAndroid() {\n    return CoreUtil.isMobile() && navigator.userAgent.toLowerCase().includes('android')\n  },\n\n  isEmptyObject(value: unknown) {\n    return (\n      Object.getPrototypeOf(value) === Object.prototype &&\n      Object.getOwnPropertyNames(value).length === 0 &&\n      Object.getOwnPropertySymbols(value).length === 0\n    )\n  },\n\n  isHttpUrl(url: string) {\n    return url.startsWith('http://') || url.startsWith('https://')\n  },\n\n  formatNativeUrl(appUrl: string, wcUri: string, name: string): string {\n    if (CoreUtil.isHttpUrl(appUrl)) {\n      return this.formatUniversalUrl(appUrl, wcUri, name)\n    }\n    let safeAppUrl = appUrl\n    if (!safeAppUrl.includes('://')) {\n      safeAppUrl = appUrl.replaceAll('/', '').replaceAll(':', '')\n      safeAppUrl = `${safeAppUrl}://`\n    }\n    this.setWalletConnectDeepLink(safeAppUrl, name)\n    const encodedWcUrl = encodeURIComponent(wcUri)\n\n    return `${safeAppUrl}wc?uri=${encodedWcUrl}`\n  },\n\n  formatUniversalUrl(appUrl: string, wcUri: string, name: string): string {\n    if (!CoreUtil.isHttpUrl(appUrl)) {\n      return this.formatNativeUrl(appUrl, wcUri, name)\n    }\n    let plainAppUrl = appUrl\n    if (appUrl.endsWith('/')) {\n      plainAppUrl = appUrl.slice(0, -1)\n    }\n    this.setWalletConnectDeepLink(plainAppUrl, name)\n    const encodedWcUrl = encodeURIComponent(wcUri)\n\n    return `${plainAppUrl}/wc?uri=${encodedWcUrl}`\n  },\n\n  async wait(miliseconds: number) {\n    return new Promise(resolve => {\n      setTimeout(resolve, miliseconds)\n    })\n  },\n\n  openHref(href: string, target = '_self') {\n    window.open(href, target, 'noreferrer noopener')\n  },\n\n  setWalletConnectDeepLink(href: string, name: string) {\n    localStorage.setItem(CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE, JSON.stringify({ href, name }))\n  },\n\n  setWalletConnectAndroidDeepLink(wcUri: string) {\n    const [href] = wcUri.split('?')\n\n    localStorage.setItem(\n      CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE,\n      JSON.stringify({ href, name: 'Android' })\n    )\n  },\n\n  removeWalletConnectDeepLink() {\n    localStorage.removeItem(CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE)\n  },\n\n  isNull<T>(value: T | null): value is null {\n    return value === null\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ConfigCtrlState } from '../types/controllerTypes'\nimport { CoreUtil } from '../utils/CoreUtil'\nimport { ClientCtrl } from './ClientCtrl'\nimport { OptionsCtrl } from './OptionsCtrl'\n\n// -- initial state ------------------------------------------------ //\nfunction isDarkMode() {\n  return typeof matchMedia !== 'undefined' && matchMedia('(prefers-color-scheme: dark)').matches\n}\n\nconst state = proxy<ConfigCtrlState>({\n  projectId: '',\n  themeMode: isDarkMode() ? 'dark' : 'light',\n  themeColor: 'default',\n  themeBackground: CoreUtil.isMobile() ? 'themeColor' : 'gradient',\n  themeZIndex: 89,\n  mobileWallets: undefined,\n  desktopWallets: undefined,\n  walletImages: undefined,\n  chainImages: undefined,\n  tokenImages: undefined,\n  standaloneChains: undefined,\n  enableStandaloneMode: false,\n  enableNetworkView: false,\n  enableAccountView: true,\n  defaultChain: undefined,\n  explorerAllowList: undefined,\n  explorerDenyList: undefined,\n  termsOfServiceUrl: undefined,\n  privacyPolicyUrl: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const ConfigCtrl = {\n  state,\n\n  subscribe(callback: (newState: ConfigCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setConfig(config: ConfigCtrlState) {\n    OptionsCtrl.setStandaloneChains(config.standaloneChains)\n    OptionsCtrl.setIsStandalone(\n      Boolean(config.standaloneChains?.length) || Boolean(config.enableStandaloneMode)\n    )\n    OptionsCtrl.setIsCustomMobile(Boolean(config.mobileWallets?.length))\n    OptionsCtrl.setIsCustomDesktop(Boolean(config.desktopWallets?.length))\n    OptionsCtrl.setWalletConnectVersion(config.walletConnectVersion ?? 1)\n\n    if (config.defaultChain) {\n      OptionsCtrl.setSelectedChain(config.defaultChain)\n    } else if (!OptionsCtrl.state.isStandalone) {\n      const chain = ClientCtrl.client().getDefaultChain()\n      OptionsCtrl.setSelectedChain(chain)\n    }\n\n    Object.assign(state, config)\n  },\n\n  setThemeConfig(theme: Pick<ConfigCtrlState, 'themeBackground' | 'themeColor' | 'themeMode'>) {\n    Object.assign(state, theme)\n  }\n}\n","import type { ListingResponse, PageParams } from '../types/controllerTypes'\n\nconst EXPLORER_API = 'https://explorer-api.walletconnect.com'\n\nfunction formatParams(params: PageParams) {\n  const stringParams = Object.fromEntries(\n    Object.entries(params)\n      .filter(([_, value]) => typeof value !== 'undefined' && value !== null && value !== '')\n      .map(([key, value]) => [key, value.toString()])\n  )\n\n  return new URLSearchParams(stringParams).toString()\n}\n\nexport const ExplorerUtil = {\n  async fetchWallets(projectId: string, params: PageParams): Promise<ListingResponse> {\n    const urlParams = formatParams(params)\n    const fetcUrl = `${EXPLORER_API}/v3/wallets?projectId=${projectId}&${urlParams}`\n    const fetched = await fetch(fetcUrl)\n\n    return fetched.json()\n  },\n\n  formatImageUrl(projectId: string, imageId: string) {\n    return `${EXPLORER_API}/v3/logo/lg/${imageId}?projectId=${projectId}`\n  }\n}\n","import { proxy } from 'valtio/vanilla'\nimport type { ExplorerCtrlState, PageParams } from '../types/controllerTypes'\nimport { ExplorerUtil } from '../utils/ExplorerUtil'\nimport { ConfigCtrl } from './ConfigCtrl'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ExplorerCtrlState>({\n  wallets: { listings: [], total: 0, page: 1 },\n  search: { listings: [], total: 0, page: 1 },\n  previewWallets: [],\n  recomendedWallets: []\n})\n\n// -- helpers ------------------------------------------------------ //\nfunction getProjectId() {\n  const { projectId } = ConfigCtrl.state\n  if (!projectId) {\n    throw new Error('projectId is required to work with explorer api')\n  }\n\n  return projectId\n}\n\n// -- controller --------------------------------------------------- //\nexport const ExplorerCtrl = {\n  state,\n\n  async getPreviewWallets(params: PageParams) {\n    const { listings } = await ExplorerUtil.fetchWallets(getProjectId(), params)\n    state.previewWallets = Object.values(listings)\n\n    return state.previewWallets\n  },\n\n  async getRecomendedWallets() {\n    const { listings } = await ExplorerUtil.fetchWallets(getProjectId(), { page: 1, entries: 6 })\n    state.recomendedWallets = Object.values(listings)\n  },\n\n  async getPaginatedWallets(params: PageParams) {\n    const { page, search } = params\n    const { listings: listingsObj, total } = await ExplorerUtil.fetchWallets(getProjectId(), params)\n    const listings = Object.values(listingsObj)\n    const type = search ? 'search' : 'wallets'\n    state[type] = {\n      listings: [...state[type].listings, ...listings],\n      total,\n      page: page ?? 1\n    }\n\n    return { listings, total }\n  },\n\n  getImageUrl(imageId: string) {\n    return ExplorerUtil.formatImageUrl(getProjectId(), imageId)\n  },\n\n  resetSearch() {\n    state.search = { listings: [], total: 0, page: 1 }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { RouterCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<RouterCtrlState>({\n  history: ['ConnectWallet'],\n  view: 'ConnectWallet',\n  data: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const RouterCtrl = {\n  state,\n\n  subscribe(callback: (newState: RouterCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  push(view: RouterCtrlState['view'], data?: RouterCtrlState['data']) {\n    if (view !== state.view) {\n      state.view = view\n      if (data) {\n        state.data = data\n      }\n      state.history.push(view)\n    }\n  },\n\n  replace(view: RouterCtrlState['view']) {\n    state.view = view\n    state.history = [view]\n  },\n\n  goBack() {\n    if (state.history.length > 1) {\n      state.history.pop()\n      const [last] = state.history.slice(-1)\n      state.view = last\n    }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ModalCtrlState } from '../types/controllerTypes'\nimport { ConfigCtrl } from './ConfigCtrl'\nimport { OptionsCtrl } from './OptionsCtrl'\nimport { RouterCtrl } from './RouterCtrl'\n\n// -- types -------------------------------------------------------- //\nexport interface OpenOptions {\n  uri?: string\n  standaloneChains?: string[]\n  route?: 'Account' | 'ConnectWallet' | 'Help' | 'SelectNetwork'\n}\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ModalCtrlState>({\n  open: false\n})\n\n// -- controller --------------------------------------------------- //\nexport const ModalCtrl = {\n  state,\n\n  subscribe(callback: (newState: ModalCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  async open(options?: OpenOptions) {\n    return new Promise<void>(resolve => {\n      const { isConnected, isStandalone, isUiLoaded, isDataLoaded } = OptionsCtrl.state\n      const { enableNetworkView } = ConfigCtrl.state\n\n      if (isStandalone) {\n        OptionsCtrl.setStandaloneUri(options?.uri)\n        OptionsCtrl.setStandaloneChains(options?.standaloneChains)\n        RouterCtrl.replace('ConnectWallet')\n      } else if (options?.route) {\n        RouterCtrl.replace(options.route)\n      } else if (isConnected) {\n        RouterCtrl.replace('Account')\n      } else if (enableNetworkView) {\n        RouterCtrl.replace('SelectNetwork')\n      } else {\n        RouterCtrl.replace('ConnectWallet')\n      }\n\n      // Open modal if async data is ready\n      if (isUiLoaded && isDataLoaded) {\n        state.open = true\n        resolve()\n      }\n      // Otherwise (slow network) re-attempt open checks\n      else {\n        const interval = setInterval(() => {\n          if (OptionsCtrl.state.isUiLoaded && OptionsCtrl.state.isDataLoaded) {\n            clearInterval(interval)\n            state.open = true\n            resolve()\n          }\n        }, 200)\n      }\n    })\n  },\n\n  close() {\n    state.open = false\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ToastCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ToastCtrlState>({\n  open: false,\n  message: '',\n  variant: 'success'\n})\n\n// -- controller --------------------------------------------------- //\nexport const ToastCtrl = {\n  state,\n\n  subscribe(callback: (newState: ToastCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  openToast(message: ToastCtrlState['message'], variant: ToastCtrlState['variant']) {\n    state.open = true\n    state.message = message\n    state.variant = variant\n  },\n\n  closeToast() {\n    state.open = false\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unnecessary-condition */\nimport { Buffer } from 'buffer'\n\nif (typeof window !== 'undefined') {\n  if (!window.Buffer) {\n    window.Buffer = Buffer\n  }\n  if (!window.global) {\n    window.global = window\n  }\n  if (!window.process) {\n    // @ts-expect-error minimal process\n    window.process = { env: {} }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}