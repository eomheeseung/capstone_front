{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _objectSpread = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _asyncToGenerator = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar configure = require('../lib/configure');\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object').API<HTTPClientExtraOptions>} ObjectAPI\n */\n\n/**\n * @param {import('ipfs-core-utils/src/multicodecs')} codecs\n * @param {import('../types').Options} options\n */\nmodule.exports = function (codecs, options) {\n  var fn = configure(function (api) {\n    var dagPut = require('../dag/put')(codecs, options);\n\n    /**\n     * @type {ObjectAPI[\"put\"]}\n     */\n    function put(_x) {\n      return _put.apply(this, arguments);\n    }\n    function _put() {\n      _put = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(obj) {\n        var options,\n          _args = arguments;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              return _context.abrupt(\"return\", dagPut(obj, _objectSpread(_objectSpread({}, options), {}, {\n                format: 'dag-pb',\n                hashAlg: 'sha2-256',\n                version: 0\n              })));\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      return _put.apply(this, arguments);\n    }\n    return put;\n  });\n  return fn(options);\n};","map":{"version":3,"names":["configure","require","module","exports","codecs","options","fn","api","dagPut","put","obj","format","hashAlg","version"],"sources":["C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/ipfs-http-client/src/object/put.js"],"sourcesContent":["'use strict'\n\nconst configure = require('../lib/configure')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object').API<HTTPClientExtraOptions>} ObjectAPI\n */\n\n/**\n * @param {import('ipfs-core-utils/src/multicodecs')} codecs\n * @param {import('../types').Options} options\n */\nmodule.exports = (codecs, options) => {\n  const fn = configure((api) => {\n    const dagPut = require('../dag/put')(codecs, options)\n\n    /**\n     * @type {ObjectAPI[\"put\"]}\n     */\n    async function put (obj, options = {}) {\n      return dagPut(obj, {\n        ...options,\n        format: 'dag-pb',\n        hashAlg: 'sha2-256',\n        version: 0\n      })\n    }\n    return put\n  })\n\n  return fn(options)\n}\n"],"mappings":"AAAA,YAAY;;AAAA;AAAA;AAAA;AAEZ,IAAMA,SAAS,GAAGC,OAAO,CAAC,kBAAkB,CAAC;;AAE7C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACAC,MAAM,CAACC,OAAO,GAAG,UAACC,MAAM,EAAEC,OAAO,EAAK;EACpC,IAAMC,EAAE,GAAGN,SAAS,CAAC,UAACO,GAAG,EAAK;IAC5B,IAAMC,MAAM,GAAGP,OAAO,CAAC,YAAY,CAAC,CAACG,MAAM,EAAEC,OAAO,CAAC;;IAErD;AACJ;AACA;IAFI,SAGeI,GAAG;MAAA;IAAA;IAAA;MAAA,kEAAlB,iBAAoBC,GAAG;QAAA;UAAA;QAAA;UAAA;YAAA;cAAEL,OAAO,2DAAG,CAAC,CAAC;cAAA,iCAC5BG,MAAM,CAACE,GAAG,kCACZL,OAAO;gBACVM,MAAM,EAAE,QAAQ;gBAChBC,OAAO,EAAE,UAAU;gBACnBC,OAAO,EAAE;cAAC,GACV;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA,CACH;MAAA;IAAA;IACD,OAAOJ,GAAG;EACZ,CAAC,CAAC;EAEF,OAAOH,EAAE,CAACD,OAAO,CAAC;AACpB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}