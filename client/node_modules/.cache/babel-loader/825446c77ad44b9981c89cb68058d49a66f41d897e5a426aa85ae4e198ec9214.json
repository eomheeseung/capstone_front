{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _objectSpread = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _awaitAsyncGenerator = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/awaitAsyncGenerator.js\").default;\nvar _wrapAsyncGenerator = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/wrapAsyncGenerator.js\").default;\nvar _asyncIterator = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/asyncIterator.js\").default;\nvar _require = require('multiaddr'),\n  Multiaddr = _require.Multiaddr;\nvar toCamel = require('../lib/object-to-camel');\nvar configure = require('../lib/configure');\nvar toUrlSearchParams = require('../lib/to-url-search-params');\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dht').API<HTTPClientExtraOptions>} DHTAPI\n * @typedef {import('multiformats/cid').CID} CID\n */\n\nmodule.exports = configure(function (api) {\n  /**\n   * @type {DHTAPI[\"provide\"]}\n   */\n  function provide(_x) {\n    return _provide.apply(this, arguments);\n  }\n  function _provide() {\n    _provide = _wrapAsyncGenerator(function (cids) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        recursive: false\n      };\n      return /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var cidArr, res, _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, message;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              /** @type {CID[]} */\n              cidArr = Array.isArray(cids) ? cids : [cids];\n              _context.next = 3;\n              return _awaitAsyncGenerator(api.post('dht/provide', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams(_objectSpread({\n                  arg: cidArr.map(function (cid) {\n                    return cid.toString();\n                  })\n                }, options)),\n                headers: options.headers\n              }));\n            case 3:\n              res = _context.sent;\n              _iteratorAbruptCompletion = false;\n              _didIteratorError = false;\n              _context.prev = 6;\n              _iterator = _asyncIterator(res.ndjson());\n            case 8:\n              _context.next = 10;\n              return _awaitAsyncGenerator(_iterator.next());\n            case 10:\n              if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n                _context.next = 19;\n                break;\n              }\n              message = _step.value;\n              message = toCamel(message);\n              if (message.responses) {\n                message.responses = message.responses.map(function ( /** @type {{ ID: string, Addrs: string[] }} */_ref) {\n                  var ID = _ref.ID,\n                    Addrs = _ref.Addrs;\n                  return {\n                    id: ID,\n                    addrs: (Addrs || []).map(function ( /** @type {string} **/a) {\n                      return new Multiaddr(a);\n                    })\n                  };\n                });\n              } else {\n                message.responses = [];\n              }\n              _context.next = 16;\n              return message;\n            case 16:\n              _iteratorAbruptCompletion = false;\n              _context.next = 8;\n              break;\n            case 19:\n              _context.next = 25;\n              break;\n            case 21:\n              _context.prev = 21;\n              _context.t0 = _context[\"catch\"](6);\n              _didIteratorError = true;\n              _iteratorError = _context.t0;\n            case 25:\n              _context.prev = 25;\n              _context.prev = 26;\n              if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                _context.next = 30;\n                break;\n              }\n              _context.next = 30;\n              return _awaitAsyncGenerator(_iterator.return());\n            case 30:\n              _context.prev = 30;\n              if (!_didIteratorError) {\n                _context.next = 33;\n                break;\n              }\n              throw _iteratorError;\n            case 33:\n              return _context.finish(30);\n            case 34:\n              return _context.finish(25);\n            case 35:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[6, 21, 25, 35], [26,, 30, 34]]);\n      })();\n    });\n    return _provide.apply(this, arguments);\n  }\n  return provide;\n});","map":{"version":3,"names":["require","Multiaddr","toCamel","configure","toUrlSearchParams","module","exports","api","provide","cids","options","recursive","cidArr","Array","isArray","post","signal","searchParams","arg","map","cid","toString","headers","res","ndjson","message","responses","ID","Addrs","id","addrs","a"],"sources":["C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/ipfs-http-client/src/dht/provide.js"],"sourcesContent":["'use strict'\n\nconst { Multiaddr } = require('multiaddr')\nconst toCamel = require('../lib/object-to-camel')\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dht').API<HTTPClientExtraOptions>} DHTAPI\n * @typedef {import('multiformats/cid').CID} CID\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {DHTAPI[\"provide\"]}\n   */\n  async function * provide (cids, options = { recursive: false }) {\n    /** @type {CID[]} */\n    const cidArr = Array.isArray(cids) ? cids : [cids]\n\n    const res = await api.post('dht/provide', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cidArr.map(cid => cid.toString()),\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    for await (let message of res.ndjson()) {\n      message = toCamel(message)\n      if (message.responses) {\n        message.responses = message.responses.map((/** @type {{ ID: string, Addrs: string[] }} */ { ID, Addrs }) => ({\n          id: ID,\n          addrs: (Addrs || []).map((/** @type {string} **/ a) => new Multiaddr(a))\n        }))\n      } else {\n        message.responses = []\n      }\n      yield message\n    }\n  }\n\n  return provide\n})\n"],"mappings":"AAAA,YAAY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEZ,eAAsBA,OAAO,CAAC,WAAW,CAAC;EAAlCC,SAAS,YAATA,SAAS;AACjB,IAAMC,OAAO,GAAGF,OAAO,CAAC,wBAAwB,CAAC;AACjD,IAAMG,SAAS,GAAGH,OAAO,CAAC,kBAAkB,CAAC;AAC7C,IAAMI,iBAAiB,GAAGJ,OAAO,CAAC,6BAA6B,CAAC;;AAEhE;AACA;AACA;AACA;AACA;;AAEAK,MAAM,CAACC,OAAO,GAAGH,SAAS,CAAC,UAAAI,GAAG,EAAI;EAChC;AACF;AACA;EAFE,SAGiBC,OAAO;IAAA;EAAA;EAAA;IAAA,+BAAxB,UAA0BC,IAAI;MAAA,IAAEC,OAAO,uEAAG;QAAEC,SAAS,EAAE;MAAM,CAAC;MAAA;QAAA;QAAA;UAAA;YAAA;cAC5D;cACMC,MAAM,GAAGC,KAAK,CAACC,OAAO,CAACL,IAAI,CAAC,GAAGA,IAAI,GAAG,CAACA,IAAI,CAAC;cAAA;cAAA,4BAEhCF,GAAG,CAACQ,IAAI,CAAC,aAAa,EAAE;gBACxCC,MAAM,EAAEN,OAAO,CAACM,MAAM;gBACtBC,YAAY,EAAEb,iBAAiB;kBAC7Bc,GAAG,EAAEN,MAAM,CAACO,GAAG,CAAC,UAAAC,GAAG;oBAAA,OAAIA,GAAG,CAACC,QAAQ,EAAE;kBAAA;gBAAC,GACnCX,OAAO,EACV;gBACFY,OAAO,EAAEZ,OAAO,CAACY;cACnB,CAAC,CAAC;YAAA;cAPIC,GAAG;cAAA;cAAA;cAAA;cAAA,2BASiBA,GAAG,CAACC,MAAM,EAAE;YAAA;cAAA;cAAA;YAAA;cAAA;gBAAA;gBAAA;cAAA;cAAvBC,OAAO;cACpBA,OAAO,GAAGvB,OAAO,CAACuB,OAAO,CAAC;cAC1B,IAAIA,OAAO,CAACC,SAAS,EAAE;gBACrBD,OAAO,CAACC,SAAS,GAAGD,OAAO,CAACC,SAAS,CAACP,GAAG,CAAC,WAAC;kBAAA,IAAiDQ,EAAE,QAAFA,EAAE;oBAAEC,KAAK,QAALA,KAAK;kBAAA,OAAQ;oBAC3GC,EAAE,EAAEF,EAAE;oBACNG,KAAK,EAAE,CAACF,KAAK,IAAI,EAAE,EAAET,GAAG,CAAC,WAAC,sBAAuBY,CAAC;sBAAA,OAAK,IAAI9B,SAAS,CAAC8B,CAAC,CAAC;oBAAA;kBACzE,CAAC;gBAAA,CAAC,CAAC;cACL,CAAC,MAAM;gBACLN,OAAO,CAACC,SAAS,GAAG,EAAE;cACxB;cAAC;cACD,OAAMD,OAAO;YAAA;cAAA;cAAA;cAAA;YAAA;cAAA;cAAA;YAAA;cAAA;cAAA;cAAA;cAAA;YAAA;cAAA;cAAA;cAAA;gBAAA;gBAAA;cAAA;cAAA;cAAA;YAAA;cAAA;cAAA;gBAAA;gBAAA;cAAA;cAAA;YAAA;cAAA;YAAA;cAAA;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAEhB;IAAA;EAAA;EAED,OAAOjB,OAAO;AAChB,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}