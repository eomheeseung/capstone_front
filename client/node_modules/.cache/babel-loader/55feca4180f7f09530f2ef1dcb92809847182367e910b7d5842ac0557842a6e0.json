{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.gatherV2Config = void 0;\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nexports.gatherV2Config = {\n  kernelName: tfjs_1.GatherV2,\n  backendName: 'tensorflow',\n  kernelFunc: function (args) {\n    var _a = args.inputs,\n      x = _a.x,\n      indices = _a.indices;\n    var backend = args.backend;\n    var _b = args.attrs,\n      axis = _b.axis,\n      batchDims = _b.batchDims;\n    // Throw error when any index is out of bound.\n    var indicesVals = backend.readSync(indices.dataId);\n    var axisDim = x.shape[axis];\n    var _loop_1 = function (i) {\n      var index = indicesVals[i];\n      tfjs_1.util.assert(index <= axisDim - 1 && index >= 0, function () {\n        return \"GatherV2: the index value \".concat(index, \" is not in [0, \").concat(axisDim - 1, \"]\");\n      });\n    };\n    for (var i = 0; i < indicesVals.length; ++i) {\n      _loop_1(i);\n    }\n    // validate the inputs\n    tfjs_1.backend_util.segment_util.collectGatherOpShapeInfo(x, indices, axis, batchDims);\n    var axisTensor = (0, tfjs_1.scalar)(axis, 'int32');\n    var opAttrs = [{\n      name: 'batch_dims',\n      type: backend.binding.TF_ATTR_INT,\n      value: batchDims\n    }, (0, nodejs_kernel_backend_1.createTensorsTypeOpAttr)('Tparams', x.dtype), (0, nodejs_kernel_backend_1.createTensorsTypeOpAttr)('Tindices', indices.dtype), (0, nodejs_kernel_backend_1.createTensorsTypeOpAttr)('Taxis', 'int32')];\n    var res = backend.executeSingleOutput(tfjs_1.GatherV2, opAttrs, [x, indices, axisTensor]);\n    axisTensor.dispose();\n    return res;\n  }\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","gatherV2Config","tfjs_1","require","nodejs_kernel_backend_1","kernelName","GatherV2","backendName","kernelFunc","args","_a","inputs","x","indices","backend","_b","attrs","axis","batchDims","indicesVals","readSync","dataId","axisDim","shape","_loop_1","i","index","util","assert","concat","length","backend_util","segment_util","collectGatherOpShapeInfo","axisTensor","scalar","opAttrs","name","type","binding","TF_ATTR_INT","createTensorsTypeOpAttr","dtype","res","executeSingleOutput","dispose"],"sources":["C:/Users/paete/CapstonPro/nftmusicProtoCopy/client/node_modules/@tensorflow/tfjs-node/dist/kernels/GatherV2.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.gatherV2Config = void 0;\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nexports.gatherV2Config = {\n    kernelName: tfjs_1.GatherV2,\n    backendName: 'tensorflow',\n    kernelFunc: function (args) {\n        var _a = args.inputs, x = _a.x, indices = _a.indices;\n        var backend = args.backend;\n        var _b = args.attrs, axis = _b.axis, batchDims = _b.batchDims;\n        // Throw error when any index is out of bound.\n        var indicesVals = backend.readSync(indices.dataId);\n        var axisDim = x.shape[axis];\n        var _loop_1 = function (i) {\n            var index = indicesVals[i];\n            tfjs_1.util.assert(index <= axisDim - 1 && index >= 0, function () { return \"GatherV2: the index value \".concat(index, \" is not in [0, \").concat(axisDim - 1, \"]\"); });\n        };\n        for (var i = 0; i < indicesVals.length; ++i) {\n            _loop_1(i);\n        }\n        // validate the inputs\n        tfjs_1.backend_util.segment_util.collectGatherOpShapeInfo(x, indices, axis, batchDims);\n        var axisTensor = (0, tfjs_1.scalar)(axis, 'int32');\n        var opAttrs = [\n            { name: 'batch_dims', type: backend.binding.TF_ATTR_INT, value: batchDims },\n            (0, nodejs_kernel_backend_1.createTensorsTypeOpAttr)('Tparams', x.dtype),\n            (0, nodejs_kernel_backend_1.createTensorsTypeOpAttr)('Tindices', indices.dtype),\n            (0, nodejs_kernel_backend_1.createTensorsTypeOpAttr)('Taxis', 'int32')\n        ];\n        var res = backend.executeSingleOutput(tfjs_1.GatherV2, opAttrs, [x, indices, axisTensor]);\n        axisTensor.dispose();\n        return res;\n    }\n};\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,cAAc,GAAG,KAAK,CAAC;AAC/B,IAAIC,MAAM,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AACxC,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,0BAA0B,CAAC;AACjEJ,OAAO,CAACE,cAAc,GAAG;EACrBI,UAAU,EAAEH,MAAM,CAACI,QAAQ;EAC3BC,WAAW,EAAE,YAAY;EACzBC,UAAU,EAAE,UAAUC,IAAI,EAAE;IACxB,IAAIC,EAAE,GAAGD,IAAI,CAACE,MAAM;MAAEC,CAAC,GAAGF,EAAE,CAACE,CAAC;MAAEC,OAAO,GAAGH,EAAE,CAACG,OAAO;IACpD,IAAIC,OAAO,GAAGL,IAAI,CAACK,OAAO;IAC1B,IAAIC,EAAE,GAAGN,IAAI,CAACO,KAAK;MAAEC,IAAI,GAAGF,EAAE,CAACE,IAAI;MAAEC,SAAS,GAAGH,EAAE,CAACG,SAAS;IAC7D;IACA,IAAIC,WAAW,GAAGL,OAAO,CAACM,QAAQ,CAACP,OAAO,CAACQ,MAAM,CAAC;IAClD,IAAIC,OAAO,GAAGV,CAAC,CAACW,KAAK,CAACN,IAAI,CAAC;IAC3B,IAAIO,OAAO,GAAG,UAAUC,CAAC,EAAE;MACvB,IAAIC,KAAK,GAAGP,WAAW,CAACM,CAAC,CAAC;MAC1BvB,MAAM,CAACyB,IAAI,CAACC,MAAM,CAACF,KAAK,IAAIJ,OAAO,GAAG,CAAC,IAAII,KAAK,IAAI,CAAC,EAAE,YAAY;QAAE,OAAO,4BAA4B,CAACG,MAAM,CAACH,KAAK,EAAE,iBAAiB,CAAC,CAACG,MAAM,CAACP,OAAO,GAAG,CAAC,EAAE,GAAG,CAAC;MAAE,CAAC,CAAC;IAC1K,CAAC;IACD,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,WAAW,CAACW,MAAM,EAAE,EAAEL,CAAC,EAAE;MACzCD,OAAO,CAACC,CAAC,CAAC;IACd;IACA;IACAvB,MAAM,CAAC6B,YAAY,CAACC,YAAY,CAACC,wBAAwB,CAACrB,CAAC,EAAEC,OAAO,EAAEI,IAAI,EAAEC,SAAS,CAAC;IACtF,IAAIgB,UAAU,GAAG,CAAC,CAAC,EAAEhC,MAAM,CAACiC,MAAM,EAAElB,IAAI,EAAE,OAAO,CAAC;IAClD,IAAImB,OAAO,GAAG,CACV;MAAEC,IAAI,EAAE,YAAY;MAAEC,IAAI,EAAExB,OAAO,CAACyB,OAAO,CAACC,WAAW;MAAExC,KAAK,EAAEkB;IAAU,CAAC,EAC3E,CAAC,CAAC,EAAEd,uBAAuB,CAACqC,uBAAuB,EAAE,SAAS,EAAE7B,CAAC,CAAC8B,KAAK,CAAC,EACxE,CAAC,CAAC,EAAEtC,uBAAuB,CAACqC,uBAAuB,EAAE,UAAU,EAAE5B,OAAO,CAAC6B,KAAK,CAAC,EAC/E,CAAC,CAAC,EAAEtC,uBAAuB,CAACqC,uBAAuB,EAAE,OAAO,EAAE,OAAO,CAAC,CACzE;IACD,IAAIE,GAAG,GAAG7B,OAAO,CAAC8B,mBAAmB,CAAC1C,MAAM,CAACI,QAAQ,EAAE8B,OAAO,EAAE,CAACxB,CAAC,EAAEC,OAAO,EAAEqB,UAAU,CAAC,CAAC;IACzFA,UAAU,CAACW,OAAO,EAAE;IACpB,OAAOF,GAAG;EACd;AACJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}