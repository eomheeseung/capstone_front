{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _awaitAsyncGenerator = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/awaitAsyncGenerator.js\").default;\nvar _wrapAsyncGenerator = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/wrapAsyncGenerator.js\").default;\nvar _require = require('multiformats/cid'),\n  CID = _require.CID;\nvar errCode = require('err-code');\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n */\n\n/**\n * Retrieves IPLD Nodes along the `path` that is rooted at `cid`.\n *\n * @param {CID} cid - the CID where the resolving starts\n * @param {string} path - the path that should be resolved\n * @param {import('ipfs-core-utils/src/multicodecs')} codecs\n * @param {(cid: CID, options?: AbortOptions) => Promise<Uint8Array>} getBlock\n * @param {AbortOptions} [options]\n */\nvar resolve = /*#__PURE__*/function () {\n  var _ref = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(cid, path, codecs, getBlock, options) {\n    var load, parts, value, lastCid, key, _cid;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          /**\n           * @param {CID} cid\n           */\n          load = /*#__PURE__*/function () {\n            var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(cid) {\n              var codec, block;\n              return _regeneratorRuntime().wrap(function _callee$(_context) {\n                while (1) switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return codecs.getCodec(cid.code);\n                  case 2:\n                    codec = _context.sent;\n                    _context.next = 5;\n                    return getBlock(cid, options);\n                  case 5:\n                    block = _context.sent;\n                    return _context.abrupt(\"return\", codec.decode(block));\n                  case 7:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }, _callee);\n            }));\n            return function load(_x6) {\n              return _ref2.apply(this, arguments);\n            };\n          }();\n          parts = path.split('/').filter(Boolean);\n          _context2.next = 4;\n          return _awaitAsyncGenerator(load(cid));\n        case 4:\n          value = _context2.sent;\n          lastCid = cid;\n          if (parts.length) {\n            _context2.next = 9;\n            break;\n          }\n          _context2.next = 9;\n          return {\n            value: value,\n            remainderPath: ''\n          };\n        case 9:\n          if (!parts.length) {\n            _context2.next = 28;\n            break;\n          }\n          key = parts.shift();\n          if (key) {\n            _context2.next = 13;\n            break;\n          }\n          throw errCode(new Error(\"Could not resolve path \\\"\".concat(path, \"\\\"\")), 'ERR_INVALID_PATH');\n        case 13:\n          if (!Object.prototype.hasOwnProperty.call(value, key)) {\n            _context2.next = 19;\n            break;\n          }\n          value = value[key];\n          _context2.next = 17;\n          return {\n            value: value,\n            remainderPath: parts.join('/')\n          };\n        case 17:\n          _context2.next = 20;\n          break;\n        case 19:\n          throw errCode(new Error(\"no link named \\\"\".concat(key, \"\\\" under \").concat(lastCid)), 'ERR_NO_LINK');\n        case 20:\n          _cid = CID.asCID(value);\n          if (!_cid) {\n            _context2.next = 26;\n            break;\n          }\n          lastCid = _cid;\n          _context2.next = 25;\n          return _awaitAsyncGenerator(load(value));\n        case 25:\n          value = _context2.sent;\n        case 26:\n          _context2.next = 9;\n          break;\n        case 28:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return function resolve(_x, _x2, _x3, _x4, _x5) {\n    return _ref.apply(this, arguments);\n  };\n}();\nmodule.exports = resolve;","map":{"version":3,"names":["require","CID","errCode","resolve","cid","path","codecs","getBlock","options","load","getCodec","code","codec","block","decode","parts","split","filter","Boolean","value","lastCid","length","remainderPath","key","shift","Error","Object","prototype","hasOwnProperty","call","join","asCID","module","exports"],"sources":["C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/ipfs-http-client/src/lib/resolve.js"],"sourcesContent":["'use strict'\n\nconst { CID } = require('multiformats/cid')\nconst errCode = require('err-code')\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n */\n\n/**\n * Retrieves IPLD Nodes along the `path` that is rooted at `cid`.\n *\n * @param {CID} cid - the CID where the resolving starts\n * @param {string} path - the path that should be resolved\n * @param {import('ipfs-core-utils/src/multicodecs')} codecs\n * @param {(cid: CID, options?: AbortOptions) => Promise<Uint8Array>} getBlock\n * @param {AbortOptions} [options]\n */\nconst resolve = async function * (cid, path, codecs, getBlock, options) {\n  /**\n   * @param {CID} cid\n   */\n  const load = async (cid) => {\n    const codec = await codecs.getCodec(cid.code)\n    const block = await getBlock(cid, options)\n\n    return codec.decode(block)\n  }\n\n  const parts = path.split('/').filter(Boolean)\n  let value = await load(cid)\n  let lastCid = cid\n\n  if (!parts.length) {\n    yield {\n      value,\n      remainderPath: ''\n    }\n  }\n\n  // End iteration if there isn't a CID to follow any more\n  while (parts.length) {\n    const key = parts.shift()\n\n    if (!key) {\n      throw errCode(new Error(`Could not resolve path \"${path}\"`), 'ERR_INVALID_PATH')\n    }\n\n    if (Object.prototype.hasOwnProperty.call(value, key)) {\n      value = value[key]\n\n      yield {\n        value,\n        remainderPath: parts.join('/')\n      }\n    } else {\n      throw errCode(new Error(`no link named \"${key}\" under ${lastCid}`), 'ERR_NO_LINK')\n    }\n\n    const cid = CID.asCID(value)\n\n    if (cid) {\n      lastCid = cid\n      value = await load(value)\n    }\n  }\n}\n\nmodule.exports = resolve\n"],"mappings":"AAAA,YAAY;;AAAA;AAAA;AAAA;AAAA;AAEZ,eAAgBA,OAAO,CAAC,kBAAkB,CAAC;EAAnCC,GAAG,YAAHA,GAAG;AACX,IAAMC,OAAO,GAAGF,OAAO,CAAC,UAAU,CAAC;;AAEnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMG,OAAO;EAAA,wEAAG,kBAAkBC,GAAG,EAAEC,IAAI,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,OAAO;IAAA;IAAA;MAAA;QAAA;UACpE;AACF;AACA;UACQC,IAAI;YAAA,uEAAG,iBAAOL,GAAG;cAAA;cAAA;gBAAA;kBAAA;oBAAA;oBAAA,OACDE,MAAM,CAACI,QAAQ,CAACN,GAAG,CAACO,IAAI,CAAC;kBAAA;oBAAvCC,KAAK;oBAAA;oBAAA,OACSL,QAAQ,CAACH,GAAG,EAAEI,OAAO,CAAC;kBAAA;oBAApCK,KAAK;oBAAA,iCAEJD,KAAK,CAACE,MAAM,CAACD,KAAK,CAAC;kBAAA;kBAAA;oBAAA;gBAAA;cAAA;YAAA,CAC3B;YAAA,gBALKJ,IAAI;cAAA;YAAA;UAAA;UAOJM,KAAK,GAAGV,IAAI,CAACW,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC;UAAA;UAAA,4BAC3BT,IAAI,CAACL,GAAG,CAAC;QAAA;UAAvBe,KAAK;UACLC,OAAO,GAAGhB,GAAG;UAAA,IAEZW,KAAK,CAACM,MAAM;YAAA;YAAA;UAAA;UAAA;UACf,OAAM;YACJF,KAAK,EAALA,KAAK;YACLG,aAAa,EAAE;UACjB,CAAC;QAAA;UAAA,KAIIP,KAAK,CAACM,MAAM;YAAA;YAAA;UAAA;UACXE,GAAG,GAAGR,KAAK,CAACS,KAAK,EAAE;UAAA,IAEpBD,GAAG;YAAA;YAAA;UAAA;UAAA,MACArB,OAAO,CAAC,IAAIuB,KAAK,oCAA4BpB,IAAI,QAAI,EAAE,kBAAkB,CAAC;QAAA;UAAA,KAG9EqB,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACV,KAAK,EAAEI,GAAG,CAAC;YAAA;YAAA;UAAA;UAClDJ,KAAK,GAAGA,KAAK,CAACI,GAAG,CAAC;UAAA;UAElB,OAAM;YACJJ,KAAK,EAALA,KAAK;YACLG,aAAa,EAAEP,KAAK,CAACe,IAAI,CAAC,GAAG;UAC/B,CAAC;QAAA;UAAA;UAAA;QAAA;UAAA,MAEK5B,OAAO,CAAC,IAAIuB,KAAK,2BAAmBF,GAAG,sBAAWH,OAAO,EAAG,EAAE,aAAa,CAAC;QAAA;UAG9EhB,IAAG,GAAGH,GAAG,CAAC8B,KAAK,CAACZ,KAAK,CAAC;UAAA,KAExBf,IAAG;YAAA;YAAA;UAAA;UACLgB,OAAO,GAAGhB,IAAG;UAAA;UAAA,4BACCK,IAAI,CAACU,KAAK,CAAC;QAAA;UAAzBA,KAAK;QAAA;UAAA;UAAA;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,CAGV;EAAA,gBAhDKhB,OAAO;IAAA;EAAA;AAAA,GAgDZ;AAED6B,MAAM,CAACC,OAAO,GAAG9B,OAAO"},"metadata":{},"sourceType":"script","externalDependencies":[]}