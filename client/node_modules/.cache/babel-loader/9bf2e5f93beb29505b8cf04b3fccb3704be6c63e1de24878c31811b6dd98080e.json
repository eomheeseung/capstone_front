{"ast":null,"code":"import { Connector, __privateAdd, __privateGet, __privateMethod, __privateSet, __publicField } from \"./chunk-5NCTPR6C.js\";\n\n// src/walletConnect.ts\nimport { SwitchChainError, UserRejectedRequestError, getClient, normalizeChainId } from \"@wagmi/core\";\nimport { providers } from \"ethers\";\nimport { getAddress, hexValue } from \"ethers/lib/utils.js\";\nvar defaultV2Config = {\n  namespace: \"eip155\",\n  methods: [\"eth_sendTransaction\", \"eth_sendRawTransaction\", \"eth_sign\", \"eth_signTransaction\", \"eth_signTypedData\", \"eth_signTypedData_v3\", \"eth_signTypedData_v4\", \"personal_sign\", \"wallet_switchEthereumChain\", \"wallet_addEthereumChain\"],\n  events: [\"accountsChanged\", \"chainChanged\"]\n};\nvar _provider, _initUniversalProviderPromise, _web3Modal, _createWeb3Modal, createWeb3Modal_fn, _initUniversalProvider, initUniversalProvider_fn, _createUniversalProvider, createUniversalProvider_fn, _isChainsAuthorized, isChainsAuthorized_fn, _switchChain, switchChain_fn;\nvar WalletConnectConnector = class extends Connector {\n  constructor(config) {\n    super(config);\n    __privateAdd(this, _createWeb3Modal);\n    __privateAdd(this, _initUniversalProvider);\n    __privateAdd(this, _createUniversalProvider);\n    __privateAdd(this, _isChainsAuthorized);\n    __privateAdd(this, _switchChain);\n    __publicField(this, \"id\", \"walletConnect\");\n    __publicField(this, \"name\", \"WalletConnect\");\n    __publicField(this, \"ready\", true);\n    __privateAdd(this, _provider, void 0);\n    __privateAdd(this, _initUniversalProviderPromise, void 0);\n    __privateAdd(this, _web3Modal, void 0);\n    __publicField(this, \"onAccountsChanged\", accounts => {\n      if (accounts.length === 0) this.emit(\"disconnect\");else this.emit(\"change\", {\n        account: getAddress(accounts[0])\n      });\n    });\n    __publicField(this, \"onChainChanged\", chainId => {\n      const id = normalizeChainId(chainId);\n      const unsupported = this.isChainUnsupported(id);\n      this.emit(\"change\", {\n        chain: {\n          id,\n          unsupported\n        }\n      });\n    });\n    __publicField(this, \"onDisconnect\", () => {\n      this.emit(\"disconnect\");\n    });\n    __publicField(this, \"onDisplayUri\", uri => {\n      this.emit(\"message\", {\n        type: \"display_uri\",\n        data: uri\n      });\n    });\n    if (this.version === \"2\") {\n      __privateMethod(this, _createUniversalProvider, createUniversalProvider_fn).call(this);\n      if (this.isQrCode) __privateMethod(this, _createWeb3Modal, createWeb3Modal_fn).call(this);\n    }\n  }\n  get isQrCode() {\n    return this.options.qrcode !== false;\n  }\n  get namespacedChains() {\n    return this.chains.map(chain => `${defaultV2Config.namespace}:${chain.id}`);\n  }\n  get version() {\n    if (\"version\" in this.options) return this.options.version;\n    return \"1\";\n  }\n  async connect() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const isV1 = this.version === \"1\";\n    const isV2 = this.version === \"2\";\n    try {\n      let targetChainId = chainId;\n      if (!targetChainId) {\n        const lastUsedChainId = getClient().lastUsedChainId;\n        if (lastUsedChainId && !this.isChainUnsupported(lastUsedChainId)) targetChainId = lastUsedChainId;\n      }\n      const provider = await this.getProvider({\n        chainId: targetChainId,\n        create: isV1\n      });\n      provider.on(\"accountsChanged\", this.onAccountsChanged);\n      provider.on(\"chainChanged\", this.onChainChanged);\n      provider.on(\"disconnect\", this.onDisconnect);\n      if (isV2) {\n        provider.on(\"session_delete\", this.onDisconnect);\n        provider.on(\"display_uri\", this.onDisplayUri);\n        const isChainsAuthorized = await __privateMethod(this, _isChainsAuthorized, isChainsAuthorized_fn).call(this);\n        if (provider.session && !isChainsAuthorized) await provider.disconnect();\n        if (!provider.session || provider.session && !isChainsAuthorized) {\n          await Promise.race([provider.connect({\n            namespaces: {\n              [defaultV2Config.namespace]: {\n                methods: defaultV2Config.methods,\n                events: defaultV2Config.events,\n                chains: this.namespacedChains,\n                rpcMap: this.chains.reduce((rpc, chain) => ({\n                  ...rpc,\n                  [chain.id]: chain.rpcUrls.default.http[0]\n                }), {})\n              }\n            }\n          }), ...(this.isQrCode ? [new Promise((_resolve, reject) => provider.on(\"display_uri\", async uri => {\n            await __privateGet(this, _web3Modal)?.openModal({\n              uri\n            });\n            __privateGet(this, _web3Modal)?.subscribeModal(_ref => {\n              let {\n                open\n              } = _ref;\n              if (!open) reject(new Error(\"user rejected\"));\n            });\n          }))] : [])]);\n          if (this.isQrCode) __privateGet(this, _web3Modal)?.closeModal();\n        }\n      }\n      setTimeout(() => this.emit(\"message\", {\n        type: \"connecting\"\n      }), 0);\n      const accounts = await Promise.race([provider.enable(), ...(isV1 && this.isQrCode ? [new Promise((_res, reject) => provider.connector.on(\"disconnect\", () => reject(new Error(\"user rejected\"))))] : [])]);\n      const account = getAddress(accounts[0]);\n      const id = await this.getChainId();\n      const unsupported = this.isChainUnsupported(id);\n      if (isV1) {\n        const walletName = provider.connector?.peerMeta?.name ?? \"\";\n        const switchChainAllowedRegex = /(imtoken|metamask|omni|rainbow|trust wallet)/i;\n        if (switchChainAllowedRegex.test(walletName)) this.switchChain = __privateMethod(this, _switchChain, switchChain_fn);\n      } else this.switchChain = __privateMethod(this, _switchChain, switchChain_fn);\n      return {\n        account,\n        chain: {\n          id,\n          unsupported\n        },\n        provider: new providers.Web3Provider(provider)\n      };\n    } catch (error) {\n      if (isV2 && this.isQrCode) __privateGet(this, _web3Modal)?.closeModal();\n      if (/user closed modal|user rejected/i.test(error?.message)) {\n        throw new UserRejectedRequestError(error);\n      }\n      throw error;\n    }\n  }\n  async disconnect() {\n    const provider = await this.getProvider();\n    try {\n      await provider.disconnect();\n    } catch (error) {\n      if (!/No matching key/i.test(error.message)) throw error;\n    }\n    provider.removeListener(\"accountsChanged\", this.onAccountsChanged);\n    provider.removeListener(\"chainChanged\", this.onChainChanged);\n    provider.removeListener(\"disconnect\", this.onDisconnect);\n    if (this.version === \"1\" && typeof localStorage !== \"undefined\") localStorage.removeItem(\"walletconnect\");else {\n      provider.removeListener(\"session_delete\", this.onDisconnect);\n      provider.removeListener(\"display_uri\", this.onDisplayUri);\n    }\n  }\n  async getAccount() {\n    const provider = await this.getProvider();\n    let accounts;\n    if (this.version === \"1\") accounts = provider.accounts;else accounts = await provider.request({\n      method: \"eth_accounts\"\n    });\n    return getAddress(accounts[0]);\n  }\n  async getChainId() {\n    const provider = await this.getProvider();\n    if (this.version === \"1\") return normalizeChainId(provider.chainId);\n    return getClient().data?.chain?.id ?? normalizeChainId(await provider.request({\n      method: \"eth_chainId\"\n    }));\n  }\n  async getProvider() {\n    let {\n      chainId,\n      create\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (this.options.version === \"2\") {\n      if (!__privateGet(this, _provider)) await __privateMethod(this, _createUniversalProvider, createUniversalProvider_fn).call(this);\n      if (chainId) __privateGet(this, _provider).setDefaultChain(`${defaultV2Config.namespace}:${chainId}`);\n      return __privateGet(this, _provider);\n    } else if (!__privateGet(this, _provider) || chainId || create) {\n      const rpc = !this.options?.infuraId ? this.chains.reduce((rpc2, chain) => ({\n        ...rpc2,\n        [chain.id]: chain.rpcUrls.default.http[0]\n      }), {}) : {};\n      const WalletConnectProvider = (await import(\"@walletconnect/ethereum-provider\")).default;\n      __privateSet(this, _provider, new WalletConnectProvider({\n        ...this.options,\n        chainId,\n        rpc: {\n          ...rpc,\n          ...this.options?.rpc\n        }\n      }));\n      return __privateGet(this, _provider);\n    }\n    return __privateGet(this, _provider);\n  }\n  async getSigner() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const [provider, account] = await Promise.all([this.getProvider({\n      chainId\n    }), this.getAccount()]);\n    let provider_ = provider;\n    if (this.version === \"2\") {\n      const chainId_ = await this.getChainId();\n      provider_ = {\n        ...provider,\n        async request(args) {\n          return await provider.request(args, `${defaultV2Config.namespace}:${chainId ?? chainId_}`);\n        }\n      };\n    }\n    return new providers.Web3Provider(provider_, chainId).getSigner(account);\n  }\n  async isAuthorized() {\n    try {\n      const [account, isChainsAuthorized] = await Promise.all([this.getAccount(), __privateMethod(this, _isChainsAuthorized, isChainsAuthorized_fn).call(this)]);\n      return !!account && isChainsAuthorized;\n    } catch {\n      return false;\n    }\n  }\n};\n_provider = new WeakMap();\n_initUniversalProviderPromise = new WeakMap();\n_web3Modal = new WeakMap();\n_createWeb3Modal = new WeakSet();\ncreateWeb3Modal_fn = async function () {\n  const {\n    Web3Modal\n  } = await import(\"@web3modal/standalone\");\n  const {\n    version\n  } = this.options;\n  __privateSet(this, _web3Modal, new Web3Modal({\n    walletConnectVersion: version === \"2\" ? 2 : 1,\n    projectId: version === \"2\" ? this.options.projectId : \"\",\n    standaloneChains: this.namespacedChains\n  }));\n};\n_initUniversalProvider = new WeakSet();\ninitUniversalProvider_fn = async function () {\n  const WalletConnectProvider = (await import(\"@walletconnect/universal-provider\")).default;\n  if (typeof WalletConnectProvider?.init === \"function\") {\n    __privateSet(this, _provider, await WalletConnectProvider.init(this.options));\n  }\n};\n_createUniversalProvider = new WeakSet();\ncreateUniversalProvider_fn = async function () {\n  if (!__privateGet(this, _initUniversalProviderPromise)) {\n    __privateSet(this, _initUniversalProviderPromise, __privateMethod(this, _initUniversalProvider, initUniversalProvider_fn).call(this));\n  }\n  return __privateGet(this, _initUniversalProviderPromise);\n};\n_isChainsAuthorized = new WeakSet();\nisChainsAuthorized_fn = async function () {\n  const provider = await this.getProvider();\n  if (this.version === \"1\") return true;\n  const providerChains = provider.namespaces?.[defaultV2Config.namespace]?.chains || [];\n  const authorizedChainIds = providerChains.map(chain => parseInt(chain.split(\":\")[1] || \"\"));\n  return !this.chains.some(_ref2 => {\n    let {\n      id\n    } = _ref2;\n    return !authorizedChainIds.includes(id);\n  });\n};\n_switchChain = new WeakSet();\nswitchChain_fn = async function (chainId) {\n  const provider = await this.getProvider();\n  const id = hexValue(chainId);\n  try {\n    await Promise.race([provider.request({\n      method: \"wallet_switchEthereumChain\",\n      params: [{\n        chainId: id\n      }]\n    }), new Promise(res => this.on(\"change\", _ref3 => {\n      let {\n        chain\n      } = _ref3;\n      if (chain?.id === chainId) res(chainId);\n    }))]);\n    if (this.version === \"2\") {\n      ;\n      provider.setDefaultChain(`${defaultV2Config.namespace}:${chainId}`);\n      this.onChainChanged(chainId);\n    }\n    return this.chains.find(x => x.id === chainId) ?? {\n      id: chainId,\n      name: `Chain ${id}`,\n      network: `${id}`,\n      nativeCurrency: {\n        decimals: 18,\n        name: \"Ether\",\n        symbol: \"ETH\"\n      },\n      rpcUrls: {\n        default: {\n          http: [\"\"]\n        },\n        public: {\n          http: [\"\"]\n        }\n      }\n    };\n  } catch (error) {\n    const message = typeof error === \"string\" ? error : error?.message;\n    if (/user rejected request/i.test(message)) throw new UserRejectedRequestError(error);\n    throw new SwitchChainError(error);\n  }\n};\nexport { WalletConnectConnector };","map":{"version":3,"names":["Connector","__privateAdd","__privateGet","__privateMethod","__privateSet","__publicField","SwitchChainError","UserRejectedRequestError","getClient","normalizeChainId","providers","getAddress","hexValue","defaultV2Config","namespace","methods","events","_provider","_initUniversalProviderPromise","_web3Modal","_createWeb3Modal","createWeb3Modal_fn","_initUniversalProvider","initUniversalProvider_fn","_createUniversalProvider","createUniversalProvider_fn","_isChainsAuthorized","isChainsAuthorized_fn","_switchChain","switchChain_fn","WalletConnectConnector","constructor","config","accounts","length","emit","account","chainId","id","unsupported","isChainUnsupported","chain","uri","type","data","version","call","isQrCode","options","qrcode","namespacedChains","chains","map","connect","isV1","isV2","targetChainId","lastUsedChainId","provider","getProvider","create","on","onAccountsChanged","onChainChanged","onDisconnect","onDisplayUri","isChainsAuthorized","session","disconnect","Promise","race","namespaces","rpcMap","reduce","rpc","rpcUrls","default","http","_resolve","reject","openModal","subscribeModal","open","Error","closeModal","setTimeout","enable","_res","connector","getChainId","walletName","peerMeta","name","switchChainAllowedRegex","test","switchChain","Web3Provider","error","message","removeListener","localStorage","removeItem","getAccount","request","method","setDefaultChain","infuraId","rpc2","WalletConnectProvider","getSigner","all","provider_","chainId_","args","isAuthorized","WeakMap","WeakSet","Web3Modal","walletConnectVersion","projectId","standaloneChains","init","providerChains","authorizedChainIds","parseInt","split","some","includes","params","res","find","x","network","nativeCurrency","decimals","symbol","public"],"sources":["C:/Users/paete/Prototype/nftmusicprotocopy/client/node_modules/@wagmi/connectors/dist/walletConnect.js"],"sourcesContent":["import {\n  Connector,\n  __privateAdd,\n  __privateGet,\n  __privateMethod,\n  __privateSet,\n  __publicField\n} from \"./chunk-5NCTPR6C.js\";\n\n// src/walletConnect.ts\nimport {\n  SwitchChainError,\n  UserRejectedRequestError,\n  getClient,\n  normalizeChainId\n} from \"@wagmi/core\";\nimport { providers } from \"ethers\";\nimport { getAddress, hexValue } from \"ethers/lib/utils.js\";\nvar defaultV2Config = {\n  namespace: \"eip155\",\n  methods: [\n    \"eth_sendTransaction\",\n    \"eth_sendRawTransaction\",\n    \"eth_sign\",\n    \"eth_signTransaction\",\n    \"eth_signTypedData\",\n    \"eth_signTypedData_v3\",\n    \"eth_signTypedData_v4\",\n    \"personal_sign\",\n    \"wallet_switchEthereumChain\",\n    \"wallet_addEthereumChain\"\n  ],\n  events: [\"accountsChanged\", \"chainChanged\"]\n};\nvar _provider, _initUniversalProviderPromise, _web3Modal, _createWeb3Modal, createWeb3Modal_fn, _initUniversalProvider, initUniversalProvider_fn, _createUniversalProvider, createUniversalProvider_fn, _isChainsAuthorized, isChainsAuthorized_fn, _switchChain, switchChain_fn;\nvar WalletConnectConnector = class extends Connector {\n  constructor(config) {\n    super(config);\n    __privateAdd(this, _createWeb3Modal);\n    __privateAdd(this, _initUniversalProvider);\n    __privateAdd(this, _createUniversalProvider);\n    __privateAdd(this, _isChainsAuthorized);\n    __privateAdd(this, _switchChain);\n    __publicField(this, \"id\", \"walletConnect\");\n    __publicField(this, \"name\", \"WalletConnect\");\n    __publicField(this, \"ready\", true);\n    __privateAdd(this, _provider, void 0);\n    __privateAdd(this, _initUniversalProviderPromise, void 0);\n    __privateAdd(this, _web3Modal, void 0);\n    __publicField(this, \"onAccountsChanged\", (accounts) => {\n      if (accounts.length === 0)\n        this.emit(\"disconnect\");\n      else\n        this.emit(\"change\", { account: getAddress(accounts[0]) });\n    });\n    __publicField(this, \"onChainChanged\", (chainId) => {\n      const id = normalizeChainId(chainId);\n      const unsupported = this.isChainUnsupported(id);\n      this.emit(\"change\", { chain: { id, unsupported } });\n    });\n    __publicField(this, \"onDisconnect\", () => {\n      this.emit(\"disconnect\");\n    });\n    __publicField(this, \"onDisplayUri\", (uri) => {\n      this.emit(\"message\", { type: \"display_uri\", data: uri });\n    });\n    if (this.version === \"2\") {\n      __privateMethod(this, _createUniversalProvider, createUniversalProvider_fn).call(this);\n      if (this.isQrCode)\n        __privateMethod(this, _createWeb3Modal, createWeb3Modal_fn).call(this);\n    }\n  }\n  get isQrCode() {\n    return this.options.qrcode !== false;\n  }\n  get namespacedChains() {\n    return this.chains.map(\n      (chain) => `${defaultV2Config.namespace}:${chain.id}`\n    );\n  }\n  get version() {\n    if (\"version\" in this.options)\n      return this.options.version;\n    return \"1\";\n  }\n  async connect({ chainId } = {}) {\n    const isV1 = this.version === \"1\";\n    const isV2 = this.version === \"2\";\n    try {\n      let targetChainId = chainId;\n      if (!targetChainId) {\n        const lastUsedChainId = getClient().lastUsedChainId;\n        if (lastUsedChainId && !this.isChainUnsupported(lastUsedChainId))\n          targetChainId = lastUsedChainId;\n      }\n      const provider = await this.getProvider({\n        chainId: targetChainId,\n        create: isV1\n      });\n      provider.on(\"accountsChanged\", this.onAccountsChanged);\n      provider.on(\"chainChanged\", this.onChainChanged);\n      provider.on(\"disconnect\", this.onDisconnect);\n      if (isV2) {\n        provider.on(\"session_delete\", this.onDisconnect);\n        provider.on(\"display_uri\", this.onDisplayUri);\n        const isChainsAuthorized = await __privateMethod(this, _isChainsAuthorized, isChainsAuthorized_fn).call(this);\n        if (provider.session && !isChainsAuthorized)\n          await provider.disconnect();\n        if (!provider.session || provider.session && !isChainsAuthorized) {\n          await Promise.race([\n            provider.connect({\n              namespaces: {\n                [defaultV2Config.namespace]: {\n                  methods: defaultV2Config.methods,\n                  events: defaultV2Config.events,\n                  chains: this.namespacedChains,\n                  rpcMap: this.chains.reduce(\n                    (rpc, chain) => ({\n                      ...rpc,\n                      [chain.id]: chain.rpcUrls.default.http[0]\n                    }),\n                    {}\n                  )\n                }\n              }\n            }),\n            ...this.isQrCode ? [\n              new Promise(\n                (_resolve, reject) => provider.on(\"display_uri\", async (uri) => {\n                  await __privateGet(this, _web3Modal)?.openModal({ uri });\n                  __privateGet(this, _web3Modal)?.subscribeModal(({ open }) => {\n                    if (!open)\n                      reject(new Error(\"user rejected\"));\n                  });\n                })\n              )\n            ] : []\n          ]);\n          if (this.isQrCode)\n            __privateGet(this, _web3Modal)?.closeModal();\n        }\n      }\n      setTimeout(() => this.emit(\"message\", { type: \"connecting\" }), 0);\n      const accounts = await Promise.race([\n        provider.enable(),\n        ...isV1 && this.isQrCode ? [\n          new Promise(\n            (_res, reject) => provider.connector.on(\n              \"disconnect\",\n              () => reject(new Error(\"user rejected\"))\n            )\n          )\n        ] : []\n      ]);\n      const account = getAddress(accounts[0]);\n      const id = await this.getChainId();\n      const unsupported = this.isChainUnsupported(id);\n      if (isV1) {\n        const walletName = provider.connector?.peerMeta?.name ?? \"\";\n        const switchChainAllowedRegex = /(imtoken|metamask|omni|rainbow|trust wallet)/i;\n        if (switchChainAllowedRegex.test(walletName))\n          this.switchChain = __privateMethod(this, _switchChain, switchChain_fn);\n      } else\n        this.switchChain = __privateMethod(this, _switchChain, switchChain_fn);\n      return {\n        account,\n        chain: { id, unsupported },\n        provider: new providers.Web3Provider(\n          provider\n        )\n      };\n    } catch (error) {\n      if (isV2 && this.isQrCode)\n        __privateGet(this, _web3Modal)?.closeModal();\n      if (/user closed modal|user rejected/i.test(\n        error?.message\n      )) {\n        throw new UserRejectedRequestError(error);\n      }\n      throw error;\n    }\n  }\n  async disconnect() {\n    const provider = await this.getProvider();\n    try {\n      await provider.disconnect();\n    } catch (error) {\n      if (!/No matching key/i.test(error.message))\n        throw error;\n    }\n    provider.removeListener(\"accountsChanged\", this.onAccountsChanged);\n    provider.removeListener(\"chainChanged\", this.onChainChanged);\n    provider.removeListener(\"disconnect\", this.onDisconnect);\n    if (this.version === \"1\" && typeof localStorage !== \"undefined\")\n      localStorage.removeItem(\"walletconnect\");\n    else {\n      provider.removeListener(\"session_delete\", this.onDisconnect);\n      provider.removeListener(\"display_uri\", this.onDisplayUri);\n    }\n  }\n  async getAccount() {\n    const provider = await this.getProvider();\n    let accounts;\n    if (this.version === \"1\")\n      accounts = provider.accounts;\n    else\n      accounts = await provider.request({\n        method: \"eth_accounts\"\n      });\n    return getAddress(accounts[0]);\n  }\n  async getChainId() {\n    const provider = await this.getProvider();\n    if (this.version === \"1\")\n      return normalizeChainId(provider.chainId);\n    return getClient().data?.chain?.id ?? normalizeChainId(await provider.request({ method: \"eth_chainId\" }));\n  }\n  async getProvider({\n    chainId,\n    create\n  } = {}) {\n    if (this.options.version === \"2\") {\n      if (!__privateGet(this, _provider))\n        await __privateMethod(this, _createUniversalProvider, createUniversalProvider_fn).call(this);\n      if (chainId)\n        __privateGet(this, _provider).setDefaultChain(\n          `${defaultV2Config.namespace}:${chainId}`\n        );\n      return __privateGet(this, _provider);\n    } else if (!__privateGet(this, _provider) || chainId || create) {\n      const rpc = !this.options?.infuraId ? this.chains.reduce(\n        (rpc2, chain) => ({\n          ...rpc2,\n          [chain.id]: chain.rpcUrls.default.http[0]\n        }),\n        {}\n      ) : {};\n      const WalletConnectProvider = (await import(\"@walletconnect/ethereum-provider\")).default;\n      __privateSet(this, _provider, new WalletConnectProvider({\n        ...this.options,\n        chainId,\n        rpc: { ...rpc, ...this.options?.rpc }\n      }));\n      return __privateGet(this, _provider);\n    }\n    return __privateGet(this, _provider);\n  }\n  async getSigner({ chainId } = {}) {\n    const [provider, account] = await Promise.all([\n      this.getProvider({ chainId }),\n      this.getAccount()\n    ]);\n    let provider_ = provider;\n    if (this.version === \"2\") {\n      const chainId_ = await this.getChainId();\n      provider_ = {\n        ...provider,\n        async request(args) {\n          return await provider.request(\n            args,\n            `${defaultV2Config.namespace}:${chainId ?? chainId_}`\n          );\n        }\n      };\n    }\n    return new providers.Web3Provider(provider_, chainId).getSigner(account);\n  }\n  async isAuthorized() {\n    try {\n      const [account, isChainsAuthorized] = await Promise.all([\n        this.getAccount(),\n        __privateMethod(this, _isChainsAuthorized, isChainsAuthorized_fn).call(this)\n      ]);\n      return !!account && isChainsAuthorized;\n    } catch {\n      return false;\n    }\n  }\n};\n_provider = new WeakMap();\n_initUniversalProviderPromise = new WeakMap();\n_web3Modal = new WeakMap();\n_createWeb3Modal = new WeakSet();\ncreateWeb3Modal_fn = async function() {\n  const { Web3Modal } = await import(\"@web3modal/standalone\");\n  const { version } = this.options;\n  __privateSet(this, _web3Modal, new Web3Modal({\n    walletConnectVersion: version === \"2\" ? 2 : 1,\n    projectId: version === \"2\" ? this.options.projectId : \"\",\n    standaloneChains: this.namespacedChains\n  }));\n};\n_initUniversalProvider = new WeakSet();\ninitUniversalProvider_fn = async function() {\n  const WalletConnectProvider = (await import(\"@walletconnect/universal-provider\")).default;\n  if (typeof WalletConnectProvider?.init === \"function\") {\n    __privateSet(this, _provider, await WalletConnectProvider.init(\n      this.options\n    ));\n  }\n};\n_createUniversalProvider = new WeakSet();\ncreateUniversalProvider_fn = async function() {\n  if (!__privateGet(this, _initUniversalProviderPromise)) {\n    __privateSet(this, _initUniversalProviderPromise, __privateMethod(this, _initUniversalProvider, initUniversalProvider_fn).call(this));\n  }\n  return __privateGet(this, _initUniversalProviderPromise);\n};\n_isChainsAuthorized = new WeakSet();\nisChainsAuthorized_fn = async function() {\n  const provider = await this.getProvider();\n  if (this.version === \"1\")\n    return true;\n  const providerChains = provider.namespaces?.[defaultV2Config.namespace]?.chains || [];\n  const authorizedChainIds = providerChains.map(\n    (chain) => parseInt(chain.split(\":\")[1] || \"\")\n  );\n  return !this.chains.some(({ id }) => !authorizedChainIds.includes(id));\n};\n_switchChain = new WeakSet();\nswitchChain_fn = async function(chainId) {\n  const provider = await this.getProvider();\n  const id = hexValue(chainId);\n  try {\n    await Promise.race([\n      provider.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{ chainId: id }]\n      }),\n      new Promise(\n        (res) => this.on(\"change\", ({ chain }) => {\n          if (chain?.id === chainId)\n            res(chainId);\n        })\n      )\n    ]);\n    if (this.version === \"2\") {\n      ;\n      provider.setDefaultChain(\n        `${defaultV2Config.namespace}:${chainId}`\n      );\n      this.onChainChanged(chainId);\n    }\n    return this.chains.find((x) => x.id === chainId) ?? {\n      id: chainId,\n      name: `Chain ${id}`,\n      network: `${id}`,\n      nativeCurrency: { decimals: 18, name: \"Ether\", symbol: \"ETH\" },\n      rpcUrls: { default: { http: [\"\"] }, public: { http: [\"\"] } }\n    };\n  } catch (error) {\n    const message = typeof error === \"string\" ? error : error?.message;\n    if (/user rejected request/i.test(message))\n      throw new UserRejectedRequestError(error);\n    throw new SwitchChainError(error);\n  }\n};\nexport {\n  WalletConnectConnector\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}