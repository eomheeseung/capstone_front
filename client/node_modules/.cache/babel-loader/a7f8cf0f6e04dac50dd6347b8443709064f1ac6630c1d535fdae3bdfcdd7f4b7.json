{"ast":null,"code":"'use strict';\n\n// Import browser version otherwise electron-renderer will end up with node\n// version and fail.\nvar _regeneratorRuntime = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _asyncIterator = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/asyncIterator.js\").default;\nvar _require = require('ipfs-core-utils/src/files/normalise-input/index.browser'),\n  normaliseInput = _require.normaliseInput;\nvar modeToString = require('./mode-to-string');\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidateStream} ImportCandidateStream\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidate} ImportCandidate\n */\n\n/**\n * @param {ImportCandidateStream|ImportCandidate} source\n * @param {AbortController} abortController\n * @param {Headers|Record<string, string>} [headers]\n */\nfunction multipartRequest(_x, _x2) {\n  return _multipartRequest.apply(this, arguments);\n}\nfunction _multipartRequest() {\n  _multipartRequest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(source, abortController) {\n    var headers,\n      parts,\n      formData,\n      index,\n      total,\n      _iteratorAbruptCompletion,\n      _didIteratorError,\n      _iteratorError,\n      _iterator,\n      _step,\n      _step$value,\n      content,\n      path,\n      mode,\n      mtime,\n      fileSuffix,\n      type,\n      fieldName,\n      qs,\n      secs,\n      nsecs,\n      end,\n      _args = arguments;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          headers = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};\n          parts = [];\n          formData = new FormData();\n          index = 0;\n          total = 0; // @ts-ignore wrong input type for normaliseInput\n          _iteratorAbruptCompletion = false;\n          _didIteratorError = false;\n          _context.prev = 7;\n          _iterator = _asyncIterator(normaliseInput(source));\n        case 9:\n          _context.next = 11;\n          return _iterator.next();\n        case 11:\n          if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n            _context.next = 37;\n            break;\n          }\n          _step$value = _step.value, content = _step$value.content, path = _step$value.path, mode = _step$value.mode, mtime = _step$value.mtime;\n          fileSuffix = '';\n          type = content ? 'file' : 'dir';\n          if (index > 0) {\n            fileSuffix = \"-\".concat(index);\n          }\n          fieldName = type + fileSuffix;\n          qs = [];\n          if (mode !== null && mode !== undefined) {\n            qs.push(\"mode=\".concat(modeToString(mode)));\n          }\n          if (mtime != null) {\n            secs = mtime.secs, nsecs = mtime.nsecs;\n            qs.push(\"mtime=\".concat(secs));\n            if (nsecs != null) {\n              qs.push(\"mtime-nsecs=\".concat(nsecs));\n            }\n          }\n          if (qs.length) {\n            fieldName = \"\".concat(fieldName, \"?\").concat(qs.join('&'));\n          }\n          if (!content) {\n            _context.next = 28;\n            break;\n          }\n          formData.set(fieldName, content, path != null ? encodeURIComponent(path) : undefined);\n          end = total + content.size;\n          parts.push({\n            name: path,\n            start: total,\n            end: end\n          });\n          total = end;\n          _context.next = 33;\n          break;\n        case 28:\n          if (!(path != null)) {\n            _context.next = 32;\n            break;\n          }\n          formData.set(fieldName, new File([''], encodeURIComponent(path), {\n            type: 'application/x-directory'\n          }));\n          _context.next = 33;\n          break;\n        case 32:\n          throw new Error('path or content or both must be set');\n        case 33:\n          index++;\n        case 34:\n          _iteratorAbruptCompletion = false;\n          _context.next = 9;\n          break;\n        case 37:\n          _context.next = 43;\n          break;\n        case 39:\n          _context.prev = 39;\n          _context.t0 = _context[\"catch\"](7);\n          _didIteratorError = true;\n          _iteratorError = _context.t0;\n        case 43:\n          _context.prev = 43;\n          _context.prev = 44;\n          if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n            _context.next = 48;\n            break;\n          }\n          _context.next = 48;\n          return _iterator.return();\n        case 48:\n          _context.prev = 48;\n          if (!_didIteratorError) {\n            _context.next = 51;\n            break;\n          }\n          throw _iteratorError;\n        case 51:\n          return _context.finish(48);\n        case 52:\n          return _context.finish(43);\n        case 53:\n          return _context.abrupt(\"return\", {\n            total: total,\n            parts: parts,\n            headers: headers,\n            body: formData\n          });\n        case 54:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[7, 39, 43, 53], [44,, 48, 52]]);\n  }));\n  return _multipartRequest.apply(this, arguments);\n}\nmodule.exports = multipartRequest;","map":{"version":3,"names":["require","normaliseInput","modeToString","multipartRequest","source","abortController","headers","parts","formData","FormData","index","total","content","path","mode","mtime","fileSuffix","type","fieldName","qs","undefined","push","secs","nsecs","length","join","set","encodeURIComponent","end","size","name","start","File","Error","body","module","exports"],"sources":["C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/ipfs-http-client/src/lib/multipart-request.browser.js"],"sourcesContent":["'use strict'\n\n// Import browser version otherwise electron-renderer will end up with node\n// version and fail.\nconst { normaliseInput } = require('ipfs-core-utils/src/files/normalise-input/index.browser')\nconst modeToString = require('./mode-to-string')\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidateStream} ImportCandidateStream\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidate} ImportCandidate\n */\n\n/**\n * @param {ImportCandidateStream|ImportCandidate} source\n * @param {AbortController} abortController\n * @param {Headers|Record<string, string>} [headers]\n */\nasync function multipartRequest (source, abortController, headers = {}) {\n  const parts = []\n  const formData = new FormData()\n  let index = 0\n  let total = 0\n\n  // @ts-ignore wrong input type for normaliseInput\n  for await (const { content, path, mode, mtime } of normaliseInput(source)) {\n    let fileSuffix = ''\n    const type = content ? 'file' : 'dir'\n\n    if (index > 0) {\n      fileSuffix = `-${index}`\n    }\n\n    let fieldName = type + fileSuffix\n    const qs = []\n\n    if (mode !== null && mode !== undefined) {\n      qs.push(`mode=${modeToString(mode)}`)\n    }\n\n    if ((mtime) != null) {\n      const { secs, nsecs } = (mtime)\n\n      qs.push(`mtime=${secs}`)\n\n      if (nsecs != null) {\n        qs.push(`mtime-nsecs=${nsecs}`)\n      }\n    }\n\n    if (qs.length) {\n      fieldName = `${fieldName}?${qs.join('&')}`\n    }\n\n    if (content) {\n      formData.set(fieldName, content, path != null ? encodeURIComponent(path) : undefined)\n      const end = total + content.size\n      parts.push({ name: path, start: total, end })\n      total = end\n    } else if (path != null) {\n      formData.set(fieldName, new File([''], encodeURIComponent(path), { type: 'application/x-directory' }))\n    } else {\n      throw new Error('path or content or both must be set')\n    }\n\n    index++\n  }\n\n  return {\n    total,\n    parts,\n    headers,\n    body: formData\n  }\n}\n\nmodule.exports = multipartRequest\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}