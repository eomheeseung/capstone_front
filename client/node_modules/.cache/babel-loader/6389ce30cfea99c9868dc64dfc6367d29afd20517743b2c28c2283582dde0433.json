{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.avgPoolConfig = void 0;\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nexports.avgPoolConfig = {\n  kernelName: tfjs_1.AvgPool,\n  backendName: 'tensorflow',\n  kernelFunc: function (args) {\n    var x = args.inputs.x;\n    var backend = args.backend;\n    var _a = args.attrs,\n      filterSize = _a.filterSize,\n      strides = _a.strides,\n      pad = _a.pad,\n      dimRoundingMode = _a.dimRoundingMode;\n    var convInfo = tfjs_1.backend_util.computePool2DInfo(x.shape, filterSize, strides, 1 /* dilations */, pad, dimRoundingMode);\n    if (convInfo.padInfo.type !== 'VALID' && convInfo.padInfo.type !== 'SAME') {\n      throw new Error(\"TF Backend supports only 'valid' and 'same' padding \" + \"while padding was \".concat(convInfo.padInfo.type));\n    }\n    var ksize = [1, convInfo.filterHeight, convInfo.filterWidth, 1];\n    var $strides = [1, convInfo.strideHeight, convInfo.strideWidth, 1];\n    var padding = convInfo.padInfo.type;\n    var dataFormat = convInfo.dataFormat === 'channelsLast' ? 'NHWC' : 'NCHW';\n    var opAttrs = [(0, nodejs_kernel_backend_1.createTensorsTypeOpAttr)('T', x.dtype), {\n      name: 'ksize',\n      type: backend.binding.TF_ATTR_INT,\n      value: ksize\n    }, {\n      name: 'strides',\n      type: backend.binding.TF_ATTR_INT,\n      value: $strides\n    }, {\n      name: 'padding',\n      type: backend.binding.TF_ATTR_STRING,\n      value: padding\n    }, {\n      name: 'data_format',\n      type: backend.binding.TF_ATTR_STRING,\n      value: dataFormat\n    }];\n    return backend.executeSingleOutput(tfjs_1.AvgPool, opAttrs, [x]);\n  }\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","avgPoolConfig","tfjs_1","require","nodejs_kernel_backend_1","kernelName","AvgPool","backendName","kernelFunc","args","x","inputs","backend","_a","attrs","filterSize","strides","pad","dimRoundingMode","convInfo","backend_util","computePool2DInfo","shape","padInfo","type","Error","concat","ksize","filterHeight","filterWidth","$strides","strideHeight","strideWidth","padding","dataFormat","opAttrs","createTensorsTypeOpAttr","dtype","name","binding","TF_ATTR_INT","TF_ATTR_STRING","executeSingleOutput"],"sources":["C:/Users/paete/CapstonPro/nftmusicProtoCopy/client/node_modules/@tensorflow/tfjs-node/dist/kernels/AvgPool.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.avgPoolConfig = void 0;\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nexports.avgPoolConfig = {\n    kernelName: tfjs_1.AvgPool,\n    backendName: 'tensorflow',\n    kernelFunc: function (args) {\n        var x = args.inputs.x;\n        var backend = args.backend;\n        var _a = args.attrs, filterSize = _a.filterSize, strides = _a.strides, pad = _a.pad, dimRoundingMode = _a.dimRoundingMode;\n        var convInfo = tfjs_1.backend_util.computePool2DInfo(x.shape, filterSize, strides, 1 /* dilations */, pad, dimRoundingMode);\n        if (convInfo.padInfo.type !== 'VALID' && convInfo.padInfo.type !== 'SAME') {\n            throw new Error(\"TF Backend supports only 'valid' and 'same' padding \" +\n                \"while padding was \".concat(convInfo.padInfo.type));\n        }\n        var ksize = [1, convInfo.filterHeight, convInfo.filterWidth, 1];\n        var $strides = [1, convInfo.strideHeight, convInfo.strideWidth, 1];\n        var padding = convInfo.padInfo.type;\n        var dataFormat = convInfo.dataFormat === 'channelsLast' ? 'NHWC' : 'NCHW';\n        var opAttrs = [\n            (0, nodejs_kernel_backend_1.createTensorsTypeOpAttr)('T', x.dtype),\n            { name: 'ksize', type: backend.binding.TF_ATTR_INT, value: ksize },\n            { name: 'strides', type: backend.binding.TF_ATTR_INT, value: $strides },\n            { name: 'padding', type: backend.binding.TF_ATTR_STRING, value: padding },\n            {\n                name: 'data_format',\n                type: backend.binding.TF_ATTR_STRING,\n                value: dataFormat\n            },\n        ];\n        return backend.executeSingleOutput(tfjs_1.AvgPool, opAttrs, [x]);\n    }\n};\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,aAAa,GAAG,KAAK,CAAC;AAC9B,IAAIC,MAAM,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AACxC,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,0BAA0B,CAAC;AACjEJ,OAAO,CAACE,aAAa,GAAG;EACpBI,UAAU,EAAEH,MAAM,CAACI,OAAO;EAC1BC,WAAW,EAAE,YAAY;EACzBC,UAAU,EAAE,UAAUC,IAAI,EAAE;IACxB,IAAIC,CAAC,GAAGD,IAAI,CAACE,MAAM,CAACD,CAAC;IACrB,IAAIE,OAAO,GAAGH,IAAI,CAACG,OAAO;IAC1B,IAAIC,EAAE,GAAGJ,IAAI,CAACK,KAAK;MAAEC,UAAU,GAAGF,EAAE,CAACE,UAAU;MAAEC,OAAO,GAAGH,EAAE,CAACG,OAAO;MAAEC,GAAG,GAAGJ,EAAE,CAACI,GAAG;MAAEC,eAAe,GAAGL,EAAE,CAACK,eAAe;IACzH,IAAIC,QAAQ,GAAGjB,MAAM,CAACkB,YAAY,CAACC,iBAAiB,CAACX,CAAC,CAACY,KAAK,EAAEP,UAAU,EAAEC,OAAO,EAAE,CAAC,CAAC,iBAAiBC,GAAG,EAAEC,eAAe,CAAC;IAC3H,IAAIC,QAAQ,CAACI,OAAO,CAACC,IAAI,KAAK,OAAO,IAAIL,QAAQ,CAACI,OAAO,CAACC,IAAI,KAAK,MAAM,EAAE;MACvE,MAAM,IAAIC,KAAK,CAAC,sDAAsD,GAClE,oBAAoB,CAACC,MAAM,CAACP,QAAQ,CAACI,OAAO,CAACC,IAAI,CAAC,CAAC;IAC3D;IACA,IAAIG,KAAK,GAAG,CAAC,CAAC,EAAER,QAAQ,CAACS,YAAY,EAAET,QAAQ,CAACU,WAAW,EAAE,CAAC,CAAC;IAC/D,IAAIC,QAAQ,GAAG,CAAC,CAAC,EAAEX,QAAQ,CAACY,YAAY,EAAEZ,QAAQ,CAACa,WAAW,EAAE,CAAC,CAAC;IAClE,IAAIC,OAAO,GAAGd,QAAQ,CAACI,OAAO,CAACC,IAAI;IACnC,IAAIU,UAAU,GAAGf,QAAQ,CAACe,UAAU,KAAK,cAAc,GAAG,MAAM,GAAG,MAAM;IACzE,IAAIC,OAAO,GAAG,CACV,CAAC,CAAC,EAAE/B,uBAAuB,CAACgC,uBAAuB,EAAE,GAAG,EAAE1B,CAAC,CAAC2B,KAAK,CAAC,EAClE;MAAEC,IAAI,EAAE,OAAO;MAAEd,IAAI,EAAEZ,OAAO,CAAC2B,OAAO,CAACC,WAAW;MAAExC,KAAK,EAAE2B;IAAM,CAAC,EAClE;MAAEW,IAAI,EAAE,SAAS;MAAEd,IAAI,EAAEZ,OAAO,CAAC2B,OAAO,CAACC,WAAW;MAAExC,KAAK,EAAE8B;IAAS,CAAC,EACvE;MAAEQ,IAAI,EAAE,SAAS;MAAEd,IAAI,EAAEZ,OAAO,CAAC2B,OAAO,CAACE,cAAc;MAAEzC,KAAK,EAAEiC;IAAQ,CAAC,EACzE;MACIK,IAAI,EAAE,aAAa;MACnBd,IAAI,EAAEZ,OAAO,CAAC2B,OAAO,CAACE,cAAc;MACpCzC,KAAK,EAAEkC;IACX,CAAC,CACJ;IACD,OAAOtB,OAAO,CAAC8B,mBAAmB,CAACxC,MAAM,CAACI,OAAO,EAAE6B,OAAO,EAAE,CAACzB,CAAC,CAAC,CAAC;EACpE;AACJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}