{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.scatterNdConfig = void 0;\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nexports.scatterNdConfig = {\n  kernelName: tfjs_1.ScatterNd,\n  backendName: 'tensorflow',\n  kernelFunc: function (args) {\n    var _a = args.inputs,\n      indices = _a.indices,\n      updates = _a.updates;\n    var backend = args.backend;\n    var shape = args.attrs.shape;\n    var opAttrs = [(0, nodejs_kernel_backend_1.createTensorsTypeOpAttr)('T', updates.dtype), (0, nodejs_kernel_backend_1.createTensorsTypeOpAttr)('Tindices', 'int32')];\n    var shapeTensor = (0, tfjs_1.tensor1d)(shape, 'int32');\n    var ret = backend.executeSingleOutput(tfjs_1.ScatterNd, opAttrs, [indices, updates, shapeTensor]);\n    shapeTensor.dispose();\n    return ret;\n  }\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","scatterNdConfig","tfjs_1","require","nodejs_kernel_backend_1","kernelName","ScatterNd","backendName","kernelFunc","args","_a","inputs","indices","updates","backend","shape","attrs","opAttrs","createTensorsTypeOpAttr","dtype","shapeTensor","tensor1d","ret","executeSingleOutput","dispose"],"sources":["C:/Users/paete/CapstonPro/nftmusicProtoCopy/client/node_modules/@tensorflow/tfjs-node/dist/kernels/ScatterNd.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.scatterNdConfig = void 0;\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nexports.scatterNdConfig = {\n    kernelName: tfjs_1.ScatterNd,\n    backendName: 'tensorflow',\n    kernelFunc: function (args) {\n        var _a = args.inputs, indices = _a.indices, updates = _a.updates;\n        var backend = args.backend;\n        var shape = args.attrs.shape;\n        var opAttrs = [\n            (0, nodejs_kernel_backend_1.createTensorsTypeOpAttr)('T', updates.dtype),\n            (0, nodejs_kernel_backend_1.createTensorsTypeOpAttr)('Tindices', 'int32')\n        ];\n        var shapeTensor = (0, tfjs_1.tensor1d)(shape, 'int32');\n        var ret = backend.executeSingleOutput(tfjs_1.ScatterNd, opAttrs, [indices, updates, shapeTensor]);\n        shapeTensor.dispose();\n        return ret;\n    }\n};\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,eAAe,GAAG,KAAK,CAAC;AAChC,IAAIC,MAAM,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AACxC,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,0BAA0B,CAAC;AACjEJ,OAAO,CAACE,eAAe,GAAG;EACtBI,UAAU,EAAEH,MAAM,CAACI,SAAS;EAC5BC,WAAW,EAAE,YAAY;EACzBC,UAAU,EAAE,UAAUC,IAAI,EAAE;IACxB,IAAIC,EAAE,GAAGD,IAAI,CAACE,MAAM;MAAEC,OAAO,GAAGF,EAAE,CAACE,OAAO;MAAEC,OAAO,GAAGH,EAAE,CAACG,OAAO;IAChE,IAAIC,OAAO,GAAGL,IAAI,CAACK,OAAO;IAC1B,IAAIC,KAAK,GAAGN,IAAI,CAACO,KAAK,CAACD,KAAK;IAC5B,IAAIE,OAAO,GAAG,CACV,CAAC,CAAC,EAAEb,uBAAuB,CAACc,uBAAuB,EAAE,GAAG,EAAEL,OAAO,CAACM,KAAK,CAAC,EACxE,CAAC,CAAC,EAAEf,uBAAuB,CAACc,uBAAuB,EAAE,UAAU,EAAE,OAAO,CAAC,CAC5E;IACD,IAAIE,WAAW,GAAG,CAAC,CAAC,EAAElB,MAAM,CAACmB,QAAQ,EAAEN,KAAK,EAAE,OAAO,CAAC;IACtD,IAAIO,GAAG,GAAGR,OAAO,CAACS,mBAAmB,CAACrB,MAAM,CAACI,SAAS,EAAEW,OAAO,EAAE,CAACL,OAAO,EAAEC,OAAO,EAAEO,WAAW,CAAC,CAAC;IACjGA,WAAW,CAACI,OAAO,EAAE;IACrB,OAAOF,GAAG;EACd;AACJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}