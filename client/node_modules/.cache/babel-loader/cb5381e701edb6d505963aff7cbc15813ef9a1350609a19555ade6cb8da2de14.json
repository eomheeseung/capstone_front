{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _createForOfIteratorHelper = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _objectSpread = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _awaitAsyncGenerator = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/awaitAsyncGenerator.js\").default;\nvar _wrapAsyncGenerator = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/wrapAsyncGenerator.js\").default;\nvar _asyncIterator = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/asyncIterator.js\").default;\nvar _require = require('multiformats/cid'),\n  CID = _require.CID;\nvar configure = require('../lib/configure');\nvar _require2 = require('ipfs-core-utils/src/pins/normalise-input'),\n  normaliseInput = _require2.normaliseInput;\nvar toUrlSearchParams = require('../lib/to-url-search-params');\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin').API<HTTPClientExtraOptions>} PinAPI\n */\n\nmodule.exports = configure(function (api) {\n  /**\n   * @type {PinAPI[\"addAll\"]}\n   */\n  function addAll(_x) {\n    return _addAll.apply(this, arguments);\n  }\n  function _addAll() {\n    _addAll = _wrapAsyncGenerator(function (source) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, _step$value, path, recursive, metadata, res, _iteratorAbruptCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, pin, _iterator3, _step3, cid;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _iteratorAbruptCompletion = false;\n              _didIteratorError = false;\n              _context.prev = 2;\n              _iterator = _asyncIterator(normaliseInput(source));\n            case 4:\n              _context.next = 6;\n              return _awaitAsyncGenerator(_iterator.next());\n            case 6:\n              if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n                _context.next = 62;\n                break;\n              }\n              _step$value = _step.value, path = _step$value.path, recursive = _step$value.recursive, metadata = _step$value.metadata;\n              _context.next = 10;\n              return _awaitAsyncGenerator(api.post('pin/add', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams(_objectSpread(_objectSpread({}, options), {}, {\n                  arg: path,\n                  recursive: recursive,\n                  metadata: metadata ? JSON.stringify(metadata) : undefined,\n                  stream: true\n                })),\n                headers: options.headers\n              }));\n            case 10:\n              res = _context.sent;\n              _iteratorAbruptCompletion2 = false;\n              _didIteratorError2 = false;\n              _context.prev = 13;\n              _iterator2 = _asyncIterator(res.ndjson());\n            case 15:\n              _context.next = 17;\n              return _awaitAsyncGenerator(_iterator2.next());\n            case 17:\n              if (!(_iteratorAbruptCompletion2 = !(_step2 = _context.sent).done)) {\n                _context.next = 43;\n                break;\n              }\n              pin = _step2.value;\n              if (!pin.Pins) {\n                _context.next = 38;\n                break;\n              }\n              // non-streaming response\n              _iterator3 = _createForOfIteratorHelper(pin.Pins);\n              _context.prev = 21;\n              _iterator3.s();\n            case 23:\n              if ((_step3 = _iterator3.n()).done) {\n                _context.next = 29;\n                break;\n              }\n              cid = _step3.value;\n              _context.next = 27;\n              return CID.parse(cid);\n            case 27:\n              _context.next = 23;\n              break;\n            case 29:\n              _context.next = 34;\n              break;\n            case 31:\n              _context.prev = 31;\n              _context.t0 = _context[\"catch\"](21);\n              _iterator3.e(_context.t0);\n            case 34:\n              _context.prev = 34;\n              _iterator3.f();\n              return _context.finish(34);\n            case 37:\n              return _context.abrupt(\"continue\", 40);\n            case 38:\n              _context.next = 40;\n              return CID.parse(pin);\n            case 40:\n              _iteratorAbruptCompletion2 = false;\n              _context.next = 15;\n              break;\n            case 43:\n              _context.next = 49;\n              break;\n            case 45:\n              _context.prev = 45;\n              _context.t1 = _context[\"catch\"](13);\n              _didIteratorError2 = true;\n              _iteratorError2 = _context.t1;\n            case 49:\n              _context.prev = 49;\n              _context.prev = 50;\n              if (!(_iteratorAbruptCompletion2 && _iterator2.return != null)) {\n                _context.next = 54;\n                break;\n              }\n              _context.next = 54;\n              return _awaitAsyncGenerator(_iterator2.return());\n            case 54:\n              _context.prev = 54;\n              if (!_didIteratorError2) {\n                _context.next = 57;\n                break;\n              }\n              throw _iteratorError2;\n            case 57:\n              return _context.finish(54);\n            case 58:\n              return _context.finish(49);\n            case 59:\n              _iteratorAbruptCompletion = false;\n              _context.next = 4;\n              break;\n            case 62:\n              _context.next = 68;\n              break;\n            case 64:\n              _context.prev = 64;\n              _context.t2 = _context[\"catch\"](2);\n              _didIteratorError = true;\n              _iteratorError = _context.t2;\n            case 68:\n              _context.prev = 68;\n              _context.prev = 69;\n              if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                _context.next = 73;\n                break;\n              }\n              _context.next = 73;\n              return _awaitAsyncGenerator(_iterator.return());\n            case 73:\n              _context.prev = 73;\n              if (!_didIteratorError) {\n                _context.next = 76;\n                break;\n              }\n              throw _iteratorError;\n            case 76:\n              return _context.finish(73);\n            case 77:\n              return _context.finish(68);\n            case 78:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[2, 64, 68, 78], [13, 45, 49, 59], [21, 31, 34, 37], [50,, 54, 58], [69,, 73, 77]]);\n      })();\n    });\n    return _addAll.apply(this, arguments);\n  }\n  return addAll;\n});","map":{"version":3,"names":["require","CID","configure","normaliseInput","toUrlSearchParams","module","exports","api","addAll","source","options","path","recursive","metadata","post","signal","searchParams","arg","JSON","stringify","undefined","stream","headers","res","ndjson","pin","Pins","cid","parse"],"sources":["C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/ipfs-http-client/src/pin/add-all.js"],"sourcesContent":["'use strict'\n\nconst { CID } = require('multiformats/cid')\nconst configure = require('../lib/configure')\nconst { normaliseInput } = require('ipfs-core-utils/src/pins/normalise-input')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin').API<HTTPClientExtraOptions>} PinAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {PinAPI[\"addAll\"]}\n   */\n  async function * addAll (source, options = {}) {\n    for await (const { path, recursive, metadata } of normaliseInput(source)) {\n      const res = await api.post('pin/add', {\n        signal: options.signal,\n        searchParams: toUrlSearchParams({\n          ...options,\n          arg: path,\n          recursive,\n          metadata: metadata ? JSON.stringify(metadata) : undefined,\n          stream: true\n        }),\n        headers: options.headers\n      })\n\n      for await (const pin of res.ndjson()) {\n        if (pin.Pins) { // non-streaming response\n          for (const cid of pin.Pins) {\n            yield CID.parse(cid)\n          }\n          continue\n        }\n\n        yield CID.parse(pin)\n      }\n    }\n  }\n  return addAll\n})\n"],"mappings":"AAAA,YAAY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEZ,eAAgBA,OAAO,CAAC,kBAAkB,CAAC;EAAnCC,GAAG,YAAHA,GAAG;AACX,IAAMC,SAAS,GAAGF,OAAO,CAAC,kBAAkB,CAAC;AAC7C,gBAA2BA,OAAO,CAAC,0CAA0C,CAAC;EAAtEG,cAAc,aAAdA,cAAc;AACtB,IAAMC,iBAAiB,GAAGJ,OAAO,CAAC,6BAA6B,CAAC;;AAEhE;AACA;AACA;AACA;;AAEAK,MAAM,CAACC,OAAO,GAAGJ,SAAS,CAAC,UAAAK,GAAG,EAAI;EAChC;AACF;AACA;EAFE,SAGiBC,MAAM;IAAA;EAAA;EAAA;IAAA,8BAAvB,UAAyBC,MAAM;MAAA,IAAEC,OAAO,uEAAG,CAAC,CAAC;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;cAAA;cAAA;cAAA,2BACOP,cAAc,CAACM,MAAM,CAAC;YAAA;cAAA;cAAA;YAAA;cAAA;gBAAA;gBAAA;cAAA;cAAA,2BAArDE,IAAI,eAAJA,IAAI,EAAEC,SAAS,eAATA,SAAS,EAAEC,QAAQ,eAARA,QAAQ;cAAA;cAAA,4BACxBN,GAAG,CAACO,IAAI,CAAC,SAAS,EAAE;gBACpCC,MAAM,EAAEL,OAAO,CAACK,MAAM;gBACtBC,YAAY,EAAEZ,iBAAiB,iCAC1BM,OAAO;kBACVO,GAAG,EAAEN,IAAI;kBACTC,SAAS,EAATA,SAAS;kBACTC,QAAQ,EAAEA,QAAQ,GAAGK,IAAI,CAACC,SAAS,CAACN,QAAQ,CAAC,GAAGO,SAAS;kBACzDC,MAAM,EAAE;gBAAI,GACZ;gBACFC,OAAO,EAAEZ,OAAO,CAACY;cACnB,CAAC,CAAC;YAAA;cAVIC,GAAG;cAAA;cAAA;cAAA;cAAA,4BAYeA,GAAG,CAACC,MAAM,EAAE;YAAA;cAAA;cAAA;YAAA;cAAA;gBAAA;gBAAA;cAAA;cAAnBC,GAAG;cAAA,KACdA,GAAG,CAACC,IAAI;gBAAA;gBAAA;cAAA;cAAI;cAAA,wCACID,GAAG,CAACC,IAAI;cAAA;cAAA;YAAA;cAAA;gBAAA;gBAAA;cAAA;cAAfC,GAAG;cAAA;cACZ,OAAM1B,GAAG,CAAC2B,KAAK,CAACD,GAAG,CAAC;YAAA;cAAA;cAAA;YAAA;cAAA;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA;cAAA;YAAA;cAAA;cAKxB,OAAM1B,GAAG,CAAC2B,KAAK,CAACH,GAAG,CAAC;YAAA;cAAA;cAAA;cAAA;YAAA;cAAA;cAAA;YAAA;cAAA;cAAA;cAAA;cAAA;YAAA;cAAA;cAAA;cAAA;gBAAA;gBAAA;cAAA;cAAA;cAAA;YAAA;cAAA;cAAA;gBAAA;gBAAA;cAAA;cAAA;YAAA;cAAA;YAAA;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA;cAAA;cAAA;YAAA;cAAA;cAAA;cAAA;cAAA;YAAA;cAAA;cAAA;cAAA;gBAAA;gBAAA;cAAA;cAAA;cAAA;YAAA;cAAA;cAAA;gBAAA;gBAAA;cAAA;cAAA;YAAA;cAAA;YAAA;cAAA;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAGzB;IAAA;EAAA;EACD,OAAOjB,MAAM;AACf,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}