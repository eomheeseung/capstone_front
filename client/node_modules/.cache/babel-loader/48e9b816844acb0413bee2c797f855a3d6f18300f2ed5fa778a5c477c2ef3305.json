{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.oneHotConfig = void 0;\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nexports.oneHotConfig = {\n  kernelName: tfjs_1.OneHot,\n  backendName: 'tensorflow',\n  kernelFunc: function (args) {\n    var indices = args.inputs.indices;\n    var backend = args.backend;\n    var _a = args.attrs,\n      dtype = _a.dtype,\n      depth = _a.depth,\n      onValue = _a.onValue,\n      offValue = _a.offValue;\n    var depthTensor = (0, tfjs_1.scalar)(depth, 'int32');\n    var onValueTensor = (0, tfjs_1.scalar)(onValue, dtype);\n    var offValueTensor = (0, tfjs_1.scalar)(offValue, dtype);\n    var opAttrs = [{\n      name: 'axis',\n      type: backend.binding.TF_ATTR_INT,\n      value: -1\n    }, (0, nodejs_kernel_backend_1.createTensorsTypeOpAttr)('T', dtype), (0, nodejs_kernel_backend_1.createTensorsTypeOpAttr)('TI', indices.dtype)];\n    var res = backend.executeSingleOutput(tfjs_1.OneHot, opAttrs, [indices, depthTensor, onValueTensor, offValueTensor]);\n    depthTensor.dispose();\n    onValueTensor.dispose();\n    offValueTensor.dispose();\n    return res;\n  }\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","oneHotConfig","tfjs_1","require","nodejs_kernel_backend_1","kernelName","OneHot","backendName","kernelFunc","args","indices","inputs","backend","_a","attrs","dtype","depth","onValue","offValue","depthTensor","scalar","onValueTensor","offValueTensor","opAttrs","name","type","binding","TF_ATTR_INT","createTensorsTypeOpAttr","res","executeSingleOutput","dispose"],"sources":["C:/Users/paete/CapstonPro/nftmusicProtoCopy/client/node_modules/@tensorflow/tfjs-node/dist/kernels/OneHot.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.oneHotConfig = void 0;\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nexports.oneHotConfig = {\n    kernelName: tfjs_1.OneHot,\n    backendName: 'tensorflow',\n    kernelFunc: function (args) {\n        var indices = args.inputs.indices;\n        var backend = args.backend;\n        var _a = args.attrs, dtype = _a.dtype, depth = _a.depth, onValue = _a.onValue, offValue = _a.offValue;\n        var depthTensor = (0, tfjs_1.scalar)(depth, 'int32');\n        var onValueTensor = (0, tfjs_1.scalar)(onValue, dtype);\n        var offValueTensor = (0, tfjs_1.scalar)(offValue, dtype);\n        var opAttrs = [\n            { name: 'axis', type: backend.binding.TF_ATTR_INT, value: -1 },\n            (0, nodejs_kernel_backend_1.createTensorsTypeOpAttr)('T', dtype),\n            (0, nodejs_kernel_backend_1.createTensorsTypeOpAttr)('TI', indices.dtype)\n        ];\n        var res = backend.executeSingleOutput(tfjs_1.OneHot, opAttrs, [indices, depthTensor, onValueTensor, offValueTensor]);\n        depthTensor.dispose();\n        onValueTensor.dispose();\n        offValueTensor.dispose();\n        return res;\n    }\n};\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,YAAY,GAAG,KAAK,CAAC;AAC7B,IAAIC,MAAM,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AACxC,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,0BAA0B,CAAC;AACjEJ,OAAO,CAACE,YAAY,GAAG;EACnBI,UAAU,EAAEH,MAAM,CAACI,MAAM;EACzBC,WAAW,EAAE,YAAY;EACzBC,UAAU,EAAE,UAAUC,IAAI,EAAE;IACxB,IAAIC,OAAO,GAAGD,IAAI,CAACE,MAAM,CAACD,OAAO;IACjC,IAAIE,OAAO,GAAGH,IAAI,CAACG,OAAO;IAC1B,IAAIC,EAAE,GAAGJ,IAAI,CAACK,KAAK;MAAEC,KAAK,GAAGF,EAAE,CAACE,KAAK;MAAEC,KAAK,GAAGH,EAAE,CAACG,KAAK;MAAEC,OAAO,GAAGJ,EAAE,CAACI,OAAO;MAAEC,QAAQ,GAAGL,EAAE,CAACK,QAAQ;IACrG,IAAIC,WAAW,GAAG,CAAC,CAAC,EAAEjB,MAAM,CAACkB,MAAM,EAAEJ,KAAK,EAAE,OAAO,CAAC;IACpD,IAAIK,aAAa,GAAG,CAAC,CAAC,EAAEnB,MAAM,CAACkB,MAAM,EAAEH,OAAO,EAAEF,KAAK,CAAC;IACtD,IAAIO,cAAc,GAAG,CAAC,CAAC,EAAEpB,MAAM,CAACkB,MAAM,EAAEF,QAAQ,EAAEH,KAAK,CAAC;IACxD,IAAIQ,OAAO,GAAG,CACV;MAAEC,IAAI,EAAE,MAAM;MAAEC,IAAI,EAAEb,OAAO,CAACc,OAAO,CAACC,WAAW;MAAE3B,KAAK,EAAE,CAAC;IAAE,CAAC,EAC9D,CAAC,CAAC,EAAEI,uBAAuB,CAACwB,uBAAuB,EAAE,GAAG,EAAEb,KAAK,CAAC,EAChE,CAAC,CAAC,EAAEX,uBAAuB,CAACwB,uBAAuB,EAAE,IAAI,EAAElB,OAAO,CAACK,KAAK,CAAC,CAC5E;IACD,IAAIc,GAAG,GAAGjB,OAAO,CAACkB,mBAAmB,CAAC5B,MAAM,CAACI,MAAM,EAAEiB,OAAO,EAAE,CAACb,OAAO,EAAES,WAAW,EAAEE,aAAa,EAAEC,cAAc,CAAC,CAAC;IACpHH,WAAW,CAACY,OAAO,EAAE;IACrBV,aAAa,CAACU,OAAO,EAAE;IACvBT,cAAc,CAACS,OAAO,EAAE;IACxB,OAAOF,GAAG;EACd;AACJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}