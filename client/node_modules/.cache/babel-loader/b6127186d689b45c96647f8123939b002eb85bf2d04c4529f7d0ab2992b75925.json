{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.unsortedSegmentSumConfig = void 0;\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nexports.unsortedSegmentSumConfig = {\n  kernelName: tfjs_1.UnsortedSegmentSum,\n  backendName: 'tensorflow',\n  kernelFunc: function (args) {\n    var _a = args.inputs,\n      x = _a.x,\n      segmentIds = _a.segmentIds;\n    var backend = args.backend;\n    var numSegments = args.attrs.numSegments;\n    var opAttrs = [(0, nodejs_kernel_backend_1.createTensorsTypeOpAttr)('T', x.dtype), (0, nodejs_kernel_backend_1.createTensorsTypeOpAttr)('Tindices', 'int32'), (0, nodejs_kernel_backend_1.createTensorsTypeOpAttr)('Tnumsegments', 'int32')];\n    var numSegmentsT = (0, tfjs_1.scalar)(numSegments, 'int32');\n    var res = backend.executeSingleOutput(tfjs_1.UnsortedSegmentSum, opAttrs, [x, segmentIds, numSegmentsT]);\n    numSegmentsT.dispose();\n    return res;\n  }\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","unsortedSegmentSumConfig","tfjs_1","require","nodejs_kernel_backend_1","kernelName","UnsortedSegmentSum","backendName","kernelFunc","args","_a","inputs","x","segmentIds","backend","numSegments","attrs","opAttrs","createTensorsTypeOpAttr","dtype","numSegmentsT","scalar","res","executeSingleOutput","dispose"],"sources":["C:/Users/paete/CapstonPro/nftmusicProtoCopy/client/node_modules/@tensorflow/tfjs-node/dist/kernels/UnsortedSegmentSum.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.unsortedSegmentSumConfig = void 0;\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\nexports.unsortedSegmentSumConfig = {\n    kernelName: tfjs_1.UnsortedSegmentSum,\n    backendName: 'tensorflow',\n    kernelFunc: function (args) {\n        var _a = args.inputs, x = _a.x, segmentIds = _a.segmentIds;\n        var backend = args.backend;\n        var numSegments = args.attrs.numSegments;\n        var opAttrs = [\n            (0, nodejs_kernel_backend_1.createTensorsTypeOpAttr)('T', x.dtype),\n            (0, nodejs_kernel_backend_1.createTensorsTypeOpAttr)('Tindices', 'int32'),\n            (0, nodejs_kernel_backend_1.createTensorsTypeOpAttr)('Tnumsegments', 'int32')\n        ];\n        var numSegmentsT = (0, tfjs_1.scalar)(numSegments, 'int32');\n        var res = backend.executeSingleOutput(tfjs_1.UnsortedSegmentSum, opAttrs, [x, segmentIds, numSegmentsT]);\n        numSegmentsT.dispose();\n        return res;\n    }\n};\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,wBAAwB,GAAG,KAAK,CAAC;AACzC,IAAIC,MAAM,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AACxC,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,0BAA0B,CAAC;AACjEJ,OAAO,CAACE,wBAAwB,GAAG;EAC/BI,UAAU,EAAEH,MAAM,CAACI,kBAAkB;EACrCC,WAAW,EAAE,YAAY;EACzBC,UAAU,EAAE,UAAUC,IAAI,EAAE;IACxB,IAAIC,EAAE,GAAGD,IAAI,CAACE,MAAM;MAAEC,CAAC,GAAGF,EAAE,CAACE,CAAC;MAAEC,UAAU,GAAGH,EAAE,CAACG,UAAU;IAC1D,IAAIC,OAAO,GAAGL,IAAI,CAACK,OAAO;IAC1B,IAAIC,WAAW,GAAGN,IAAI,CAACO,KAAK,CAACD,WAAW;IACxC,IAAIE,OAAO,GAAG,CACV,CAAC,CAAC,EAAEb,uBAAuB,CAACc,uBAAuB,EAAE,GAAG,EAAEN,CAAC,CAACO,KAAK,CAAC,EAClE,CAAC,CAAC,EAAEf,uBAAuB,CAACc,uBAAuB,EAAE,UAAU,EAAE,OAAO,CAAC,EACzE,CAAC,CAAC,EAAEd,uBAAuB,CAACc,uBAAuB,EAAE,cAAc,EAAE,OAAO,CAAC,CAChF;IACD,IAAIE,YAAY,GAAG,CAAC,CAAC,EAAElB,MAAM,CAACmB,MAAM,EAAEN,WAAW,EAAE,OAAO,CAAC;IAC3D,IAAIO,GAAG,GAAGR,OAAO,CAACS,mBAAmB,CAACrB,MAAM,CAACI,kBAAkB,EAAEW,OAAO,EAAE,CAACL,CAAC,EAAEC,UAAU,EAAEO,YAAY,CAAC,CAAC;IACxGA,YAAY,CAACI,OAAO,EAAE;IACtB,OAAOF,GAAG;EACd;AACJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}