{"ast":null,"code":"\"use strict\";\n\n// Copyright (c) 2018-2022 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\nvar _toConsumableArray = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\nvar _regeneratorRuntime = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _classCallCheck = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _assertThisInitialized = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/assertThisInitialized.js\").default;\nvar _inherits = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CoinbaseWalletProvider = void 0;\nvar safe_event_emitter_1 = __importDefault(require(\"@metamask/safe-event-emitter\"));\nvar bn_js_1 = __importDefault(require(\"bn.js\"));\nvar eth_rpc_errors_1 = require(\"eth-rpc-errors\");\nvar DiagnosticLogger_1 = require(\"../connection/DiagnosticLogger\");\nvar Session_1 = require(\"../relay/Session\");\nvar WalletSDKRelayAbstract_1 = require(\"../relay/WalletSDKRelayAbstract\");\nvar util_1 = require(\"../util\");\nvar eth_eip712_util_1 = __importDefault(require(\"../vendor-js/eth-eip712-util\"));\nvar FilterPolyfill_1 = require(\"./FilterPolyfill\");\nvar JSONRPC_1 = require(\"./JSONRPC\");\nvar SubscriptionManager_1 = require(\"./SubscriptionManager\");\nvar DEFAULT_CHAIN_ID_KEY = \"DefaultChainId\";\nvar DEFAULT_JSON_RPC_URL = \"DefaultJsonRpcUrl\";\nvar CoinbaseWalletProvider = /*#__PURE__*/function (_safe_event_emitter_) {\n  _inherits(CoinbaseWalletProvider, _safe_event_emitter_);\n  var _super = _createSuper(CoinbaseWalletProvider);\n  function CoinbaseWalletProvider(options) {\n    var _this;\n    _classCallCheck(this, CoinbaseWalletProvider);\n    var _a, _b;\n    _this = _super.call(this);\n    _this._filterPolyfill = new FilterPolyfill_1.FilterPolyfill(_assertThisInitialized(_this));\n    _this._subscriptionManager = new SubscriptionManager_1.SubscriptionManager(_assertThisInitialized(_this));\n    _this._relay = null;\n    _this._addresses = [];\n    _this.hasMadeFirstChainChangedEmission = false;\n    _this._send = _this.send.bind(_assertThisInitialized(_this));\n    _this._sendAsync = _this.sendAsync.bind(_assertThisInitialized(_this));\n    _this.setProviderInfo = _this.setProviderInfo.bind(_assertThisInitialized(_this));\n    _this.updateProviderInfo = _this.updateProviderInfo.bind(_assertThisInitialized(_this));\n    _this.getChainId = _this.getChainId.bind(_assertThisInitialized(_this));\n    _this.setAppInfo = _this.setAppInfo.bind(_assertThisInitialized(_this));\n    _this.enable = _this.enable.bind(_assertThisInitialized(_this));\n    _this.close = _this.close.bind(_assertThisInitialized(_this));\n    _this.send = _this.send.bind(_assertThisInitialized(_this));\n    _this.sendAsync = _this.sendAsync.bind(_assertThisInitialized(_this));\n    _this.request = _this.request.bind(_assertThisInitialized(_this));\n    _this._setAddresses = _this._setAddresses.bind(_assertThisInitialized(_this));\n    _this.scanQRCode = _this.scanQRCode.bind(_assertThisInitialized(_this));\n    _this.genericRequest = _this.genericRequest.bind(_assertThisInitialized(_this));\n    _this._chainIdFromOpts = options.chainId;\n    _this._jsonRpcUrlFromOpts = options.jsonRpcUrl;\n    _this._overrideIsMetaMask = options.overrideIsMetaMask;\n    _this._relayProvider = options.relayProvider;\n    _this._storage = options.storage;\n    _this._relayEventManager = options.relayEventManager;\n    _this.diagnostic = options.diagnosticLogger;\n    _this.reloadOnDisconnect = true;\n    _this.isCoinbaseWallet = (_a = options.overrideIsCoinbaseWallet) !== null && _a !== void 0 ? _a : true;\n    _this.isCoinbaseBrowser = (_b = options.overrideIsCoinbaseBrowser) !== null && _b !== void 0 ? _b : false;\n    _this.qrUrl = options.qrUrl;\n    _this.supportsAddressSwitching = options.supportsAddressSwitching;\n    _this.isLedger = options.isLedger;\n    var chainId = _this.getChainId();\n    var chainIdStr = (0, util_1.prepend0x)(chainId.toString(16));\n    // indicate that we've connected, for EIP-1193 compliance\n    _this.emit(\"connect\", {\n      chainIdStr: chainIdStr\n    });\n    var cachedAddresses = _this._storage.getItem(WalletSDKRelayAbstract_1.LOCAL_STORAGE_ADDRESSES_KEY);\n    if (cachedAddresses) {\n      var addresses = cachedAddresses.split(\" \");\n      if (addresses[0] !== \"\") {\n        _this._addresses = addresses.map(function (address) {\n          return (0, util_1.ensureAddressString)(address);\n        });\n        _this.emit(\"accountsChanged\", addresses);\n      }\n    }\n    _this._subscriptionManager.events.on(\"notification\", function (notification) {\n      _this.emit(\"message\", {\n        type: notification.method,\n        data: notification.params\n      });\n    });\n    if (_this._addresses.length > 0) {\n      void _this.initializeRelay();\n    }\n    window.addEventListener(\"message\", function (event) {\n      var _a;\n      // Used to verify the source and window are correct before proceeding\n      if (event.origin !== location.origin || event.source !== window) {\n        return;\n      }\n      if (event.data.type !== \"walletLinkMessage\") return; // compatibility with CBW extension\n      if (event.data.data.action === \"defaultChainChanged\" || event.data.data.action === \"dappChainSwitched\") {\n        var _chainId = event.data.data.chainId;\n        var jsonRpcUrl = (_a = event.data.data.jsonRpcUrl) !== null && _a !== void 0 ? _a : _this.jsonRpcUrl;\n        _this.updateProviderInfo(jsonRpcUrl, Number(_chainId));\n      }\n      if (event.data.data.action === \"addressChanged\") {\n        _this._setAddresses([event.data.data.address]);\n      }\n    });\n    return _this;\n  }\n  _createClass(CoinbaseWalletProvider, [{\n    key: \"selectedAddress\",\n    get: function get() {\n      return this._addresses[0] || undefined;\n    }\n  }, {\n    key: \"networkVersion\",\n    get: function get() {\n      return this.getChainId().toString(10);\n    }\n  }, {\n    key: \"chainId\",\n    get: function get() {\n      return (0, util_1.prepend0x)(this.getChainId().toString(16));\n    }\n  }, {\n    key: \"isWalletLink\",\n    get: function get() {\n      // backward compatibility\n      return true;\n    }\n    /**\n     * Some DApps (i.e. Alpha Homora) seem to require the window.ethereum object return\n     * true for this method.\n     */\n  }, {\n    key: \"isMetaMask\",\n    get: function get() {\n      return this._overrideIsMetaMask;\n    }\n  }, {\n    key: \"host\",\n    get: function get() {\n      return this.jsonRpcUrl;\n    }\n  }, {\n    key: \"connected\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"isConnected\",\n    value: function isConnected() {\n      return true;\n    }\n  }, {\n    key: \"jsonRpcUrl\",\n    get: function get() {\n      var _a;\n      return (_a = this._storage.getItem(DEFAULT_JSON_RPC_URL)) !== null && _a !== void 0 ? _a : this._jsonRpcUrlFromOpts;\n    },\n    set: function set(value) {\n      this._storage.setItem(DEFAULT_JSON_RPC_URL, value);\n    }\n  }, {\n    key: \"disableReloadOnDisconnect\",\n    value: function disableReloadOnDisconnect() {\n      this.reloadOnDisconnect = false;\n    }\n    /**\n     * this function is called when coinbase provider is being injected to a dapp\n     * standalone + walletlinked extension, ledger, in-app browser using cipher-web-view\n     */\n  }, {\n    key: \"setProviderInfo\",\n    value: function setProviderInfo(jsonRpcUrl, chainId) {\n      // extension tend to use the chianId from the dapp, while in-app browser and ledger overrides the default network\n      if (!(this.isLedger || this.isCoinbaseBrowser)) {\n        this._chainIdFromOpts = chainId;\n        this._jsonRpcUrlFromOpts = jsonRpcUrl;\n      }\n      this.updateProviderInfo(this.jsonRpcUrl, this.getChainId());\n    }\n  }, {\n    key: \"updateProviderInfo\",\n    value: function updateProviderInfo(jsonRpcUrl, chainId) {\n      this.jsonRpcUrl = jsonRpcUrl;\n      // emit chainChanged event if necessary\n      var originalChainId = this.getChainId();\n      this._storage.setItem(DEFAULT_CHAIN_ID_KEY, chainId.toString(10));\n      var chainChanged = (0, util_1.ensureIntNumber)(chainId) !== originalChainId;\n      if (chainChanged || !this.hasMadeFirstChainChangedEmission) {\n        this.emit(\"chainChanged\", this.getChainId());\n        this.hasMadeFirstChainChangedEmission = true;\n      }\n    }\n  }, {\n    key: \"watchAsset\",\n    value: function () {\n      var _watchAsset = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(type, address, symbol, decimals, image, chainId) {\n        var relay, result;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this.initializeRelay();\n            case 2:\n              relay = _context.sent;\n              _context.next = 5;\n              return relay.watchAsset(type, address, symbol, decimals, image, chainId === null || chainId === void 0 ? void 0 : chainId.toString()).promise;\n            case 5:\n              result = _context.sent;\n              return _context.abrupt(\"return\", !!result.result);\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function watchAsset(_x, _x2, _x3, _x4, _x5, _x6) {\n        return _watchAsset.apply(this, arguments);\n      }\n      return watchAsset;\n    }()\n  }, {\n    key: \"addEthereumChain\",\n    value: function () {\n      var _addEthereumChain = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(chainId, rpcUrls, blockExplorerUrls, chainName, iconUrls, nativeCurrency) {\n        var _a, _b, relay, isWhitelistedNetworkOrStandalone, res;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!((0, util_1.ensureIntNumber)(chainId) === this.getChainId())) {\n                _context2.next = 2;\n                break;\n              }\n              return _context2.abrupt(\"return\", false);\n            case 2:\n              _context2.next = 4;\n              return this.initializeRelay();\n            case 4:\n              relay = _context2.sent;\n              isWhitelistedNetworkOrStandalone = relay.inlineAddEthereumChain(chainId.toString());\n              if (!(!this._isAuthorized() && !isWhitelistedNetworkOrStandalone)) {\n                _context2.next = 9;\n                break;\n              }\n              _context2.next = 9;\n              return relay.requestEthereumAccounts().promise;\n            case 9:\n              _context2.next = 11;\n              return relay.addEthereumChain(chainId.toString(), rpcUrls, iconUrls, blockExplorerUrls, chainName, nativeCurrency).promise;\n            case 11:\n              res = _context2.sent;\n              if (((_a = res.result) === null || _a === void 0 ? void 0 : _a.isApproved) === true) {\n                this.updateProviderInfo(rpcUrls[0], chainId);\n              }\n              return _context2.abrupt(\"return\", ((_b = res.result) === null || _b === void 0 ? void 0 : _b.isApproved) === true);\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function addEthereumChain(_x7, _x8, _x9, _x10, _x11, _x12) {\n        return _addEthereumChain.apply(this, arguments);\n      }\n      return addEthereumChain;\n    }()\n  }, {\n    key: \"switchEthereumChain\",\n    value: function () {\n      var _switchEthereumChain = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(chainId) {\n        var relay, res, switchResponse;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return this.initializeRelay();\n            case 2:\n              relay = _context3.sent;\n              _context3.next = 5;\n              return relay.switchEthereumChain(chainId.toString(10), this.selectedAddress || undefined).promise;\n            case 5:\n              res = _context3.sent;\n              if (!res.errorCode) {\n                _context3.next = 8;\n                break;\n              }\n              throw eth_rpc_errors_1.ethErrors.provider.custom({\n                code: res.errorCode\n              });\n            case 8:\n              switchResponse = res.result;\n              if (switchResponse.isApproved && switchResponse.rpcUrl.length > 0) {\n                this.updateProviderInfo(switchResponse.rpcUrl, chainId);\n              }\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function switchEthereumChain(_x13) {\n        return _switchEthereumChain.apply(this, arguments);\n      }\n      return switchEthereumChain;\n    }()\n  }, {\n    key: \"setAppInfo\",\n    value: function setAppInfo(appName, appLogoUrl) {\n      void this.initializeRelay().then(function (relay) {\n        return relay.setAppInfo(appName, appLogoUrl);\n      });\n    }\n  }, {\n    key: \"enable\",\n    value: function () {\n      var _enable = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var _a;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.ETH_ACCOUNTS_STATE, {\n                method: \"provider::enable\",\n                addresses_length: this._addresses.length,\n                sessionIdHash: this._relay ? Session_1.Session.hash(this._relay.session.id) : undefined\n              });\n              if (!(this._addresses.length > 0)) {\n                _context4.next = 3;\n                break;\n              }\n              return _context4.abrupt(\"return\", _toConsumableArray(this._addresses));\n            case 3:\n              _context4.next = 5;\n              return this._send(JSONRPC_1.JSONRPCMethod.eth_requestAccounts);\n            case 5:\n              return _context4.abrupt(\"return\", _context4.sent);\n            case 6:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function enable() {\n        return _enable.apply(this, arguments);\n      }\n      return enable;\n    }()\n  }, {\n    key: \"close\",\n    value: function () {\n      var _close = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var relay;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return this.initializeRelay();\n            case 2:\n              relay = _context5.sent;\n              relay.resetAndReload();\n            case 4:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this);\n      }));\n      function close() {\n        return _close.apply(this, arguments);\n      }\n      return close;\n    }()\n  }, {\n    key: \"send\",\n    value: function send(requestOrMethod, callbackOrParams) {\n      var _this2 = this;\n      // send<T>(method, params): Promise<T>\n      if (typeof requestOrMethod === \"string\") {\n        var method = requestOrMethod;\n        var params = Array.isArray(callbackOrParams) ? callbackOrParams : callbackOrParams !== undefined ? [callbackOrParams] : [];\n        var request = {\n          jsonrpc: \"2.0\",\n          id: 0,\n          method: method,\n          params: params\n        };\n        return this._sendRequestAsync(request).then(function (res) {\n          return res.result;\n        });\n      }\n      // send(JSONRPCRequest | JSONRPCRequest[], callback): void\n      if (typeof callbackOrParams === \"function\") {\n        var _request = requestOrMethod;\n        var callback = callbackOrParams;\n        return this._sendAsync(_request, callback);\n      }\n      // send(JSONRPCRequest[]): JSONRPCResponse[]\n      if (Array.isArray(requestOrMethod)) {\n        var requests = requestOrMethod;\n        return requests.map(function (r) {\n          return _this2._sendRequest(r);\n        });\n      }\n      // send(JSONRPCRequest): JSONRPCResponse\n      var req = requestOrMethod;\n      return this._sendRequest(req);\n    }\n  }, {\n    key: \"sendAsync\",\n    value: function () {\n      var _sendAsync = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(request, callback) {\n        var arrayCb, cb;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              if (!(typeof callback !== \"function\")) {\n                _context6.next = 2;\n                break;\n              }\n              throw new Error(\"callback is required\");\n            case 2:\n              if (!Array.isArray(request)) {\n                _context6.next = 6;\n                break;\n              }\n              arrayCb = callback;\n              this._sendMultipleRequestsAsync(request).then(function (responses) {\n                return arrayCb(null, responses);\n              }).catch(function (err) {\n                return arrayCb(err, null);\n              });\n              return _context6.abrupt(\"return\");\n            case 6:\n              // send(JSONRPCRequest, callback): void\n              cb = callback;\n              return _context6.abrupt(\"return\", this._sendRequestAsync(request).then(function (response) {\n                return cb(null, response);\n              }).catch(function (err) {\n                return cb(err, null);\n              }));\n            case 8:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this);\n      }));\n      function sendAsync(_x14, _x15) {\n        return _sendAsync.apply(this, arguments);\n      }\n      return sendAsync;\n    }()\n  }, {\n    key: \"request\",\n    value: function () {\n      var _request2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(args) {\n        var method, params, newParams, id, result;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              if (!(!args || typeof args !== \"object\" || Array.isArray(args))) {\n                _context7.next = 2;\n                break;\n              }\n              throw eth_rpc_errors_1.ethErrors.rpc.invalidRequest({\n                message: \"Expected a single, non-array, object argument.\",\n                data: args\n              });\n            case 2:\n              method = args.method, params = args.params;\n              if (!(typeof method !== \"string\" || method.length === 0)) {\n                _context7.next = 5;\n                break;\n              }\n              throw eth_rpc_errors_1.ethErrors.rpc.invalidRequest({\n                message: \"'args.method' must be a non-empty string.\",\n                data: args\n              });\n            case 5:\n              if (!(params !== undefined && !Array.isArray(params) && (typeof params !== \"object\" || params === null))) {\n                _context7.next = 7;\n                break;\n              }\n              throw eth_rpc_errors_1.ethErrors.rpc.invalidRequest({\n                message: \"'args.params' must be an object or array if provided.\",\n                data: args\n              });\n            case 7:\n              newParams = params === undefined ? [] : params; // Coinbase Wallet Requests\n              id = this._relayEventManager.makeRequestId();\n              _context7.next = 11;\n              return this._sendRequestAsync({\n                method: method,\n                params: newParams,\n                jsonrpc: \"2.0\",\n                id: id\n              });\n            case 11:\n              result = _context7.sent;\n              return _context7.abrupt(\"return\", result.result);\n            case 13:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, this);\n      }));\n      function request(_x16) {\n        return _request2.apply(this, arguments);\n      }\n      return request;\n    }()\n  }, {\n    key: \"scanQRCode\",\n    value: function () {\n      var _scanQRCode = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(match) {\n        var relay, res;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.next = 2;\n              return this.initializeRelay();\n            case 2:\n              relay = _context8.sent;\n              _context8.next = 5;\n              return relay.scanQRCode((0, util_1.ensureRegExpString)(match)).promise;\n            case 5:\n              res = _context8.sent;\n              if (!(typeof res.result !== \"string\")) {\n                _context8.next = 8;\n                break;\n              }\n              throw new Error(\"result was not a string\");\n            case 8:\n              return _context8.abrupt(\"return\", res.result);\n            case 9:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8, this);\n      }));\n      function scanQRCode(_x17) {\n        return _scanQRCode.apply(this, arguments);\n      }\n      return scanQRCode;\n    }()\n  }, {\n    key: \"genericRequest\",\n    value: function () {\n      var _genericRequest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(data, action) {\n        var relay, res;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.next = 2;\n              return this.initializeRelay();\n            case 2:\n              relay = _context9.sent;\n              _context9.next = 5;\n              return relay.genericRequest(data, action).promise;\n            case 5:\n              res = _context9.sent;\n              if (!(typeof res.result !== \"string\")) {\n                _context9.next = 8;\n                break;\n              }\n              throw new Error(\"result was not a string\");\n            case 8:\n              return _context9.abrupt(\"return\", res.result);\n            case 9:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9, this);\n      }));\n      function genericRequest(_x18, _x19) {\n        return _genericRequest.apply(this, arguments);\n      }\n      return genericRequest;\n    }()\n  }, {\n    key: \"selectProvider\",\n    value: function () {\n      var _selectProvider = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(providerOptions) {\n        var relay, res;\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.next = 2;\n              return this.initializeRelay();\n            case 2:\n              relay = _context10.sent;\n              _context10.next = 5;\n              return relay.selectProvider(providerOptions).promise;\n            case 5:\n              res = _context10.sent;\n              if (!(typeof res.result !== \"string\")) {\n                _context10.next = 8;\n                break;\n              }\n              throw new Error(\"result was not a string\");\n            case 8:\n              return _context10.abrupt(\"return\", res.result);\n            case 9:\n            case \"end\":\n              return _context10.stop();\n          }\n        }, _callee10, this);\n      }));\n      function selectProvider(_x20) {\n        return _selectProvider.apply(this, arguments);\n      }\n      return selectProvider;\n    }()\n  }, {\n    key: \"supportsSubscriptions\",\n    value: function supportsSubscriptions() {\n      return false;\n    }\n  }, {\n    key: \"subscribe\",\n    value: function subscribe() {\n      throw new Error(\"Subscriptions are not supported\");\n    }\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      throw new Error(\"Subscriptions are not supported\");\n    }\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      return true;\n    }\n  }, {\n    key: \"_sendRequest\",\n    value: function _sendRequest(request) {\n      var response = {\n        jsonrpc: \"2.0\",\n        id: request.id\n      };\n      var method = request.method;\n      response.result = this._handleSynchronousMethods(request);\n      if (response.result === undefined) {\n        throw new Error(\"Coinbase Wallet does not support calling \".concat(method, \" synchronously without \") + \"a callback. Please provide a callback parameter to call \".concat(method, \" \") + \"asynchronously.\");\n      }\n      return response;\n    }\n  }, {\n    key: \"_setAddresses\",\n    value: function _setAddresses(addresses, isDisconnect) {\n      if (!Array.isArray(addresses)) {\n        throw new Error(\"addresses is not an array\");\n      }\n      var newAddresses = addresses.map(function (address) {\n        return (0, util_1.ensureAddressString)(address);\n      });\n      if (JSON.stringify(newAddresses) === JSON.stringify(this._addresses)) {\n        return;\n      }\n      if (this._addresses.length > 0 && this.supportsAddressSwitching === false && !isDisconnect) {\n        /**\n         * The extension currently doesn't support switching selected wallet index\n         * make sure walletlink doesn't update it's address in this case\n         */\n        return;\n      }\n      this._addresses = newAddresses;\n      this.emit(\"accountsChanged\", this._addresses);\n      this._storage.setItem(WalletSDKRelayAbstract_1.LOCAL_STORAGE_ADDRESSES_KEY, newAddresses.join(\" \"));\n    }\n  }, {\n    key: \"_sendRequestAsync\",\n    value: function _sendRequestAsync(request) {\n      var _this3 = this;\n      return new Promise(function (resolve, reject) {\n        try {\n          var syncResult = _this3._handleSynchronousMethods(request);\n          if (syncResult !== undefined) {\n            return resolve({\n              jsonrpc: \"2.0\",\n              id: request.id,\n              result: syncResult\n            });\n          }\n          var filterPromise = _this3._handleAsynchronousFilterMethods(request);\n          if (filterPromise !== undefined) {\n            filterPromise.then(function (res) {\n              return resolve(Object.assign(Object.assign({}, res), {\n                id: request.id\n              }));\n            }).catch(function (err) {\n              return reject(err);\n            });\n            return;\n          }\n          var subscriptionPromise = _this3._handleSubscriptionMethods(request);\n          if (subscriptionPromise !== undefined) {\n            subscriptionPromise.then(function (res) {\n              return resolve({\n                jsonrpc: \"2.0\",\n                id: request.id,\n                result: res.result\n              });\n            }).catch(function (err) {\n              return reject(err);\n            });\n            return;\n          }\n        } catch (err) {\n          return reject(err);\n        }\n        _this3._handleAsynchronousMethods(request).then(function (res) {\n          return res && resolve(Object.assign(Object.assign({}, res), {\n            id: request.id\n          }));\n        }).catch(function (err) {\n          return reject(err);\n        });\n      });\n    }\n  }, {\n    key: \"_sendMultipleRequestsAsync\",\n    value: function _sendMultipleRequestsAsync(requests) {\n      var _this4 = this;\n      return Promise.all(requests.map(function (r) {\n        return _this4._sendRequestAsync(r);\n      }));\n    }\n  }, {\n    key: \"_handleSynchronousMethods\",\n    value: function _handleSynchronousMethods(request) {\n      var method = request.method;\n      var params = request.params || [];\n      switch (method) {\n        case JSONRPC_1.JSONRPCMethod.eth_accounts:\n          return this._eth_accounts();\n        case JSONRPC_1.JSONRPCMethod.eth_coinbase:\n          return this._eth_coinbase();\n        case JSONRPC_1.JSONRPCMethod.eth_uninstallFilter:\n          return this._eth_uninstallFilter(params);\n        case JSONRPC_1.JSONRPCMethod.net_version:\n          return this._net_version();\n        case JSONRPC_1.JSONRPCMethod.eth_chainId:\n          return this._eth_chainId();\n        default:\n          return undefined;\n      }\n    }\n  }, {\n    key: \"_handleAsynchronousMethods\",\n    value: function () {\n      var _handleAsynchronousMethods2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(request) {\n        var method, params, relay;\n        return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n          while (1) switch (_context11.prev = _context11.next) {\n            case 0:\n              method = request.method;\n              params = request.params || [];\n              _context11.t0 = method;\n              _context11.next = _context11.t0 === JSONRPC_1.JSONRPCMethod.eth_requestAccounts ? 5 : _context11.t0 === JSONRPC_1.JSONRPCMethod.eth_sign ? 6 : _context11.t0 === JSONRPC_1.JSONRPCMethod.eth_ecRecover ? 7 : _context11.t0 === JSONRPC_1.JSONRPCMethod.personal_sign ? 8 : _context11.t0 === JSONRPC_1.JSONRPCMethod.personal_ecRecover ? 9 : _context11.t0 === JSONRPC_1.JSONRPCMethod.eth_signTransaction ? 10 : _context11.t0 === JSONRPC_1.JSONRPCMethod.eth_sendRawTransaction ? 11 : _context11.t0 === JSONRPC_1.JSONRPCMethod.eth_sendTransaction ? 12 : _context11.t0 === JSONRPC_1.JSONRPCMethod.eth_signTypedData_v1 ? 13 : _context11.t0 === JSONRPC_1.JSONRPCMethod.eth_signTypedData_v2 ? 14 : _context11.t0 === JSONRPC_1.JSONRPCMethod.eth_signTypedData_v3 ? 15 : _context11.t0 === JSONRPC_1.JSONRPCMethod.eth_signTypedData_v4 ? 16 : _context11.t0 === JSONRPC_1.JSONRPCMethod.eth_signTypedData ? 16 : _context11.t0 === JSONRPC_1.JSONRPCMethod.cbWallet_arbitrary ? 17 : _context11.t0 === JSONRPC_1.JSONRPCMethod.wallet_addEthereumChain ? 18 : _context11.t0 === JSONRPC_1.JSONRPCMethod.wallet_switchEthereumChain ? 19 : _context11.t0 === JSONRPC_1.JSONRPCMethod.wallet_watchAsset ? 20 : 21;\n              break;\n            case 5:\n              return _context11.abrupt(\"return\", this._eth_requestAccounts());\n            case 6:\n              return _context11.abrupt(\"return\", this._eth_sign(params));\n            case 7:\n              return _context11.abrupt(\"return\", this._eth_ecRecover(params));\n            case 8:\n              return _context11.abrupt(\"return\", this._personal_sign(params));\n            case 9:\n              return _context11.abrupt(\"return\", this._personal_ecRecover(params));\n            case 10:\n              return _context11.abrupt(\"return\", this._eth_signTransaction(params));\n            case 11:\n              return _context11.abrupt(\"return\", this._eth_sendRawTransaction(params));\n            case 12:\n              return _context11.abrupt(\"return\", this._eth_sendTransaction(params));\n            case 13:\n              return _context11.abrupt(\"return\", this._eth_signTypedData_v1(params));\n            case 14:\n              return _context11.abrupt(\"return\", this._throwUnsupportedMethodError());\n            case 15:\n              return _context11.abrupt(\"return\", this._eth_signTypedData_v3(params));\n            case 16:\n              return _context11.abrupt(\"return\", this._eth_signTypedData_v4(params));\n            case 17:\n              return _context11.abrupt(\"return\", this._cbwallet_arbitrary(params));\n            case 18:\n              return _context11.abrupt(\"return\", this._wallet_addEthereumChain(params));\n            case 19:\n              return _context11.abrupt(\"return\", this._wallet_switchEthereumChain(params));\n            case 20:\n              return _context11.abrupt(\"return\", this._wallet_watchAsset(params));\n            case 21:\n              _context11.next = 23;\n              return this.initializeRelay();\n            case 23:\n              relay = _context11.sent;\n              return _context11.abrupt(\"return\", relay.makeEthereumJSONRPCRequest(request, this.jsonRpcUrl));\n            case 25:\n            case \"end\":\n              return _context11.stop();\n          }\n        }, _callee11, this);\n      }));\n      function _handleAsynchronousMethods(_x21) {\n        return _handleAsynchronousMethods2.apply(this, arguments);\n      }\n      return _handleAsynchronousMethods;\n    }()\n  }, {\n    key: \"_handleAsynchronousFilterMethods\",\n    value: function _handleAsynchronousFilterMethods(request) {\n      var method = request.method;\n      var params = request.params || [];\n      switch (method) {\n        case JSONRPC_1.JSONRPCMethod.eth_newFilter:\n          return this._eth_newFilter(params);\n        case JSONRPC_1.JSONRPCMethod.eth_newBlockFilter:\n          return this._eth_newBlockFilter();\n        case JSONRPC_1.JSONRPCMethod.eth_newPendingTransactionFilter:\n          return this._eth_newPendingTransactionFilter();\n        case JSONRPC_1.JSONRPCMethod.eth_getFilterChanges:\n          return this._eth_getFilterChanges(params);\n        case JSONRPC_1.JSONRPCMethod.eth_getFilterLogs:\n          return this._eth_getFilterLogs(params);\n      }\n      return undefined;\n    }\n  }, {\n    key: \"_handleSubscriptionMethods\",\n    value: function _handleSubscriptionMethods(request) {\n      switch (request.method) {\n        case JSONRPC_1.JSONRPCMethod.eth_subscribe:\n        case JSONRPC_1.JSONRPCMethod.eth_unsubscribe:\n          return this._subscriptionManager.handleRequest(request);\n      }\n      return undefined;\n    }\n  }, {\n    key: \"_isKnownAddress\",\n    value: function _isKnownAddress(addressString) {\n      try {\n        var addressStr = (0, util_1.ensureAddressString)(addressString);\n        var lowercaseAddresses = this._addresses.map(function (address) {\n          return (0, util_1.ensureAddressString)(address);\n        });\n        return lowercaseAddresses.includes(addressStr);\n      } catch (_a) {}\n      return false;\n    }\n  }, {\n    key: \"_ensureKnownAddress\",\n    value: function _ensureKnownAddress(addressString) {\n      var _a;\n      if (!this._isKnownAddress(addressString)) {\n        (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.UNKNOWN_ADDRESS_ENCOUNTERED);\n        throw new Error(\"Unknown Ethereum address\");\n      }\n    }\n  }, {\n    key: \"_prepareTransactionParams\",\n    value: function _prepareTransactionParams(tx) {\n      var fromAddress = tx.from ? (0, util_1.ensureAddressString)(tx.from) : this.selectedAddress;\n      if (!fromAddress) {\n        throw new Error(\"Ethereum address is unavailable\");\n      }\n      this._ensureKnownAddress(fromAddress);\n      var toAddress = tx.to ? (0, util_1.ensureAddressString)(tx.to) : null;\n      var weiValue = tx.value != null ? (0, util_1.ensureBN)(tx.value) : new bn_js_1.default(0);\n      var data = tx.data ? (0, util_1.ensureBuffer)(tx.data) : Buffer.alloc(0);\n      var nonce = tx.nonce != null ? (0, util_1.ensureIntNumber)(tx.nonce) : null;\n      var gasPriceInWei = tx.gasPrice != null ? (0, util_1.ensureBN)(tx.gasPrice) : null;\n      var maxFeePerGas = tx.maxFeePerGas != null ? (0, util_1.ensureBN)(tx.maxFeePerGas) : null;\n      var maxPriorityFeePerGas = tx.maxPriorityFeePerGas != null ? (0, util_1.ensureBN)(tx.maxPriorityFeePerGas) : null;\n      var gasLimit = tx.gas != null ? (0, util_1.ensureBN)(tx.gas) : null;\n      var chainId = this.getChainId();\n      return {\n        fromAddress: fromAddress,\n        toAddress: toAddress,\n        weiValue: weiValue,\n        data: data,\n        nonce: nonce,\n        gasPriceInWei: gasPriceInWei,\n        maxFeePerGas: maxFeePerGas,\n        maxPriorityFeePerGas: maxPriorityFeePerGas,\n        gasLimit: gasLimit,\n        chainId: chainId\n      };\n    }\n  }, {\n    key: \"_isAuthorized\",\n    value: function _isAuthorized() {\n      return this._addresses.length > 0;\n    }\n  }, {\n    key: \"_requireAuthorization\",\n    value: function _requireAuthorization() {\n      if (!this._isAuthorized()) {\n        throw eth_rpc_errors_1.ethErrors.provider.unauthorized({});\n      }\n    }\n  }, {\n    key: \"_throwUnsupportedMethodError\",\n    value: function _throwUnsupportedMethodError() {\n      throw eth_rpc_errors_1.ethErrors.provider.unsupportedMethod({});\n    }\n  }, {\n    key: \"_signEthereumMessage\",\n    value: function () {\n      var _signEthereumMessage2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(message, address, addPrefix, typedDataJson) {\n        var relay, res;\n        return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n          while (1) switch (_context12.prev = _context12.next) {\n            case 0:\n              this._ensureKnownAddress(address);\n              _context12.prev = 1;\n              _context12.next = 4;\n              return this.initializeRelay();\n            case 4:\n              relay = _context12.sent;\n              _context12.next = 7;\n              return relay.signEthereumMessage(message, address, addPrefix, typedDataJson).promise;\n            case 7:\n              res = _context12.sent;\n              return _context12.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: res.result\n              });\n            case 11:\n              _context12.prev = 11;\n              _context12.t0 = _context12[\"catch\"](1);\n              if (!(typeof _context12.t0.message === \"string\" && _context12.t0.message.match(/(denied|rejected)/i))) {\n                _context12.next = 15;\n                break;\n              }\n              throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied message signature\");\n            case 15:\n              throw _context12.t0;\n            case 16:\n            case \"end\":\n              return _context12.stop();\n          }\n        }, _callee12, this, [[1, 11]]);\n      }));\n      function _signEthereumMessage(_x22, _x23, _x24, _x25) {\n        return _signEthereumMessage2.apply(this, arguments);\n      }\n      return _signEthereumMessage;\n    }()\n  }, {\n    key: \"_ethereumAddressFromSignedMessage\",\n    value: function () {\n      var _ethereumAddressFromSignedMessage2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13(message, signature, addPrefix) {\n        var relay, res;\n        return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n          while (1) switch (_context13.prev = _context13.next) {\n            case 0:\n              _context13.next = 2;\n              return this.initializeRelay();\n            case 2:\n              relay = _context13.sent;\n              _context13.next = 5;\n              return relay.ethereumAddressFromSignedMessage(message, signature, addPrefix).promise;\n            case 5:\n              res = _context13.sent;\n              return _context13.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: res.result\n              });\n            case 7:\n            case \"end\":\n              return _context13.stop();\n          }\n        }, _callee13, this);\n      }));\n      function _ethereumAddressFromSignedMessage(_x26, _x27, _x28) {\n        return _ethereumAddressFromSignedMessage2.apply(this, arguments);\n      }\n      return _ethereumAddressFromSignedMessage;\n    }()\n  }, {\n    key: \"_eth_accounts\",\n    value: function _eth_accounts() {\n      return _toConsumableArray(this._addresses);\n    }\n  }, {\n    key: \"_eth_coinbase\",\n    value: function _eth_coinbase() {\n      return this.selectedAddress || null;\n    }\n  }, {\n    key: \"_net_version\",\n    value: function _net_version() {\n      return this.getChainId().toString(10);\n    }\n  }, {\n    key: \"_eth_chainId\",\n    value: function _eth_chainId() {\n      return (0, util_1.hexStringFromIntNumber)(this.getChainId());\n    }\n  }, {\n    key: \"getChainId\",\n    value: function getChainId() {\n      var chainIdStr = this._storage.getItem(DEFAULT_CHAIN_ID_KEY);\n      if (!chainIdStr) {\n        return (0, util_1.ensureIntNumber)(this._chainIdFromOpts);\n      }\n      var chainId = parseInt(chainIdStr, 10);\n      return (0, util_1.ensureIntNumber)(chainId);\n    }\n  }, {\n    key: \"_eth_requestAccounts\",\n    value: function () {\n      var _eth_requestAccounts2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee14() {\n        var _a, res, relay;\n        return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n          while (1) switch (_context14.prev = _context14.next) {\n            case 0:\n              (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.ETH_ACCOUNTS_STATE, {\n                method: \"provider::_eth_requestAccounts\",\n                addresses_length: this._addresses.length,\n                sessionIdHash: this._relay ? Session_1.Session.hash(this._relay.session.id) : undefined\n              });\n              if (!(this._addresses.length > 0)) {\n                _context14.next = 3;\n                break;\n              }\n              return _context14.abrupt(\"return\", Promise.resolve({\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: this._addresses\n              }));\n            case 3:\n              _context14.prev = 3;\n              _context14.next = 6;\n              return this.initializeRelay();\n            case 6:\n              relay = _context14.sent;\n              _context14.next = 9;\n              return relay.requestEthereumAccounts().promise;\n            case 9:\n              res = _context14.sent;\n              _context14.next = 17;\n              break;\n            case 12:\n              _context14.prev = 12;\n              _context14.t0 = _context14[\"catch\"](3);\n              if (!(typeof _context14.t0.message === \"string\" && _context14.t0.message.match(/(denied|rejected)/i))) {\n                _context14.next = 16;\n                break;\n              }\n              throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied account authorization\");\n            case 16:\n              throw _context14.t0;\n            case 17:\n              if (res.result) {\n                _context14.next = 19;\n                break;\n              }\n              throw new Error(\"accounts received is empty\");\n            case 19:\n              this._setAddresses(res.result);\n              if (this.isLedger || this.isCoinbaseBrowser) {\n                _context14.next = 23;\n                break;\n              }\n              _context14.next = 23;\n              return this.switchEthereumChain(this.getChainId());\n            case 23:\n              return _context14.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: this._addresses\n              });\n            case 24:\n            case \"end\":\n              return _context14.stop();\n          }\n        }, _callee14, this, [[3, 12]]);\n      }));\n      function _eth_requestAccounts() {\n        return _eth_requestAccounts2.apply(this, arguments);\n      }\n      return _eth_requestAccounts;\n    }()\n  }, {\n    key: \"_eth_sign\",\n    value: function _eth_sign(params) {\n      this._requireAuthorization();\n      var address = (0, util_1.ensureAddressString)(params[0]);\n      var message = (0, util_1.ensureBuffer)(params[1]);\n      return this._signEthereumMessage(message, address, false);\n    }\n  }, {\n    key: \"_eth_ecRecover\",\n    value: function _eth_ecRecover(params) {\n      var message = (0, util_1.ensureBuffer)(params[0]);\n      var signature = (0, util_1.ensureBuffer)(params[1]);\n      return this._ethereumAddressFromSignedMessage(message, signature, false);\n    }\n  }, {\n    key: \"_personal_sign\",\n    value: function _personal_sign(params) {\n      this._requireAuthorization();\n      var message = (0, util_1.ensureBuffer)(params[0]);\n      var address = (0, util_1.ensureAddressString)(params[1]);\n      return this._signEthereumMessage(message, address, true);\n    }\n  }, {\n    key: \"_personal_ecRecover\",\n    value: function _personal_ecRecover(params) {\n      var message = (0, util_1.ensureBuffer)(params[0]);\n      var signature = (0, util_1.ensureBuffer)(params[1]);\n      return this._ethereumAddressFromSignedMessage(message, signature, true);\n    }\n  }, {\n    key: \"_eth_signTransaction\",\n    value: function () {\n      var _eth_signTransaction2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee15(params) {\n        var tx, relay, res;\n        return _regeneratorRuntime().wrap(function _callee15$(_context15) {\n          while (1) switch (_context15.prev = _context15.next) {\n            case 0:\n              this._requireAuthorization();\n              tx = this._prepareTransactionParams(params[0] || {});\n              _context15.prev = 2;\n              _context15.next = 5;\n              return this.initializeRelay();\n            case 5:\n              relay = _context15.sent;\n              _context15.next = 8;\n              return relay.signEthereumTransaction(tx).promise;\n            case 8:\n              res = _context15.sent;\n              return _context15.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: res.result\n              });\n            case 12:\n              _context15.prev = 12;\n              _context15.t0 = _context15[\"catch\"](2);\n              if (!(typeof _context15.t0.message === \"string\" && _context15.t0.message.match(/(denied|rejected)/i))) {\n                _context15.next = 16;\n                break;\n              }\n              throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied transaction signature\");\n            case 16:\n              throw _context15.t0;\n            case 17:\n            case \"end\":\n              return _context15.stop();\n          }\n        }, _callee15, this, [[2, 12]]);\n      }));\n      function _eth_signTransaction(_x29) {\n        return _eth_signTransaction2.apply(this, arguments);\n      }\n      return _eth_signTransaction;\n    }()\n  }, {\n    key: \"_eth_sendRawTransaction\",\n    value: function () {\n      var _eth_sendRawTransaction2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee16(params) {\n        var signedTransaction, relay, res;\n        return _regeneratorRuntime().wrap(function _callee16$(_context16) {\n          while (1) switch (_context16.prev = _context16.next) {\n            case 0:\n              signedTransaction = (0, util_1.ensureBuffer)(params[0]);\n              _context16.next = 3;\n              return this.initializeRelay();\n            case 3:\n              relay = _context16.sent;\n              _context16.next = 6;\n              return relay.submitEthereumTransaction(signedTransaction, this.getChainId()).promise;\n            case 6:\n              res = _context16.sent;\n              return _context16.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: res.result\n              });\n            case 8:\n            case \"end\":\n              return _context16.stop();\n          }\n        }, _callee16, this);\n      }));\n      function _eth_sendRawTransaction(_x30) {\n        return _eth_sendRawTransaction2.apply(this, arguments);\n      }\n      return _eth_sendRawTransaction;\n    }()\n  }, {\n    key: \"_eth_sendTransaction\",\n    value: function () {\n      var _eth_sendTransaction2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee17(params) {\n        var tx, relay, res;\n        return _regeneratorRuntime().wrap(function _callee17$(_context17) {\n          while (1) switch (_context17.prev = _context17.next) {\n            case 0:\n              this._requireAuthorization();\n              tx = this._prepareTransactionParams(params[0] || {});\n              _context17.prev = 2;\n              _context17.next = 5;\n              return this.initializeRelay();\n            case 5:\n              relay = _context17.sent;\n              _context17.next = 8;\n              return relay.signAndSubmitEthereumTransaction(tx).promise;\n            case 8:\n              res = _context17.sent;\n              return _context17.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: res.result\n              });\n            case 12:\n              _context17.prev = 12;\n              _context17.t0 = _context17[\"catch\"](2);\n              if (!(typeof _context17.t0.message === \"string\" && _context17.t0.message.match(/(denied|rejected)/i))) {\n                _context17.next = 16;\n                break;\n              }\n              throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied transaction signature\");\n            case 16:\n              throw _context17.t0;\n            case 17:\n            case \"end\":\n              return _context17.stop();\n          }\n        }, _callee17, this, [[2, 12]]);\n      }));\n      function _eth_sendTransaction(_x31) {\n        return _eth_sendTransaction2.apply(this, arguments);\n      }\n      return _eth_sendTransaction;\n    }()\n  }, {\n    key: \"_eth_signTypedData_v1\",\n    value: function () {\n      var _eth_signTypedData_v = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee18(params) {\n        var typedData, address, message, typedDataJSON;\n        return _regeneratorRuntime().wrap(function _callee18$(_context18) {\n          while (1) switch (_context18.prev = _context18.next) {\n            case 0:\n              this._requireAuthorization();\n              typedData = (0, util_1.ensureParsedJSONObject)(params[0]);\n              address = (0, util_1.ensureAddressString)(params[1]);\n              this._ensureKnownAddress(address);\n              message = eth_eip712_util_1.default.hashForSignTypedDataLegacy({\n                data: typedData\n              });\n              typedDataJSON = JSON.stringify(typedData, null, 2);\n              return _context18.abrupt(\"return\", this._signEthereumMessage(message, address, false, typedDataJSON));\n            case 7:\n            case \"end\":\n              return _context18.stop();\n          }\n        }, _callee18, this);\n      }));\n      function _eth_signTypedData_v1(_x32) {\n        return _eth_signTypedData_v.apply(this, arguments);\n      }\n      return _eth_signTypedData_v1;\n    }()\n  }, {\n    key: \"_eth_signTypedData_v3\",\n    value: function () {\n      var _eth_signTypedData_v2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee19(params) {\n        var address, typedData, message, typedDataJSON;\n        return _regeneratorRuntime().wrap(function _callee19$(_context19) {\n          while (1) switch (_context19.prev = _context19.next) {\n            case 0:\n              this._requireAuthorization();\n              address = (0, util_1.ensureAddressString)(params[0]);\n              typedData = (0, util_1.ensureParsedJSONObject)(params[1]);\n              this._ensureKnownAddress(address);\n              message = eth_eip712_util_1.default.hashForSignTypedData_v3({\n                data: typedData\n              });\n              typedDataJSON = JSON.stringify(typedData, null, 2);\n              return _context19.abrupt(\"return\", this._signEthereumMessage(message, address, false, typedDataJSON));\n            case 7:\n            case \"end\":\n              return _context19.stop();\n          }\n        }, _callee19, this);\n      }));\n      function _eth_signTypedData_v3(_x33) {\n        return _eth_signTypedData_v2.apply(this, arguments);\n      }\n      return _eth_signTypedData_v3;\n    }()\n  }, {\n    key: \"_eth_signTypedData_v4\",\n    value: function () {\n      var _eth_signTypedData_v5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee20(params) {\n        var address, typedData, message, typedDataJSON;\n        return _regeneratorRuntime().wrap(function _callee20$(_context20) {\n          while (1) switch (_context20.prev = _context20.next) {\n            case 0:\n              this._requireAuthorization();\n              address = (0, util_1.ensureAddressString)(params[0]);\n              typedData = (0, util_1.ensureParsedJSONObject)(params[1]);\n              this._ensureKnownAddress(address);\n              message = eth_eip712_util_1.default.hashForSignTypedData_v4({\n                data: typedData\n              });\n              typedDataJSON = JSON.stringify(typedData, null, 2);\n              return _context20.abrupt(\"return\", this._signEthereumMessage(message, address, false, typedDataJSON));\n            case 7:\n            case \"end\":\n              return _context20.stop();\n          }\n        }, _callee20, this);\n      }));\n      function _eth_signTypedData_v4(_x34) {\n        return _eth_signTypedData_v5.apply(this, arguments);\n      }\n      return _eth_signTypedData_v4;\n    }() /** @deprecated */\n  }, {\n    key: \"_cbwallet_arbitrary\",\n    value: function () {\n      var _cbwallet_arbitrary2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee21(params) {\n        var action, data, result;\n        return _regeneratorRuntime().wrap(function _callee21$(_context21) {\n          while (1) switch (_context21.prev = _context21.next) {\n            case 0:\n              action = params[0];\n              data = params[1];\n              if (!(typeof data !== \"string\")) {\n                _context21.next = 4;\n                break;\n              }\n              throw new Error(\"parameter must be a string\");\n            case 4:\n              if (!(typeof action !== \"object\" || action === null)) {\n                _context21.next = 6;\n                break;\n              }\n              throw new Error(\"parameter must be an object\");\n            case 6:\n              _context21.next = 8;\n              return this.genericRequest(action, data);\n            case 8:\n              result = _context21.sent;\n              return _context21.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: result\n              });\n            case 10:\n            case \"end\":\n              return _context21.stop();\n          }\n        }, _callee21, this);\n      }));\n      function _cbwallet_arbitrary(_x35) {\n        return _cbwallet_arbitrary2.apply(this, arguments);\n      }\n      return _cbwallet_arbitrary;\n    }()\n  }, {\n    key: \"_wallet_addEthereumChain\",\n    value: function () {\n      var _wallet_addEthereumChain2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee22(params) {\n        var _a, _b, _c, _d, request, chainIdNumber, success;\n        return _regeneratorRuntime().wrap(function _callee22$(_context22) {\n          while (1) switch (_context22.prev = _context22.next) {\n            case 0:\n              request = params[0];\n              if (!(((_a = request.rpcUrls) === null || _a === void 0 ? void 0 : _a.length) === 0)) {\n                _context22.next = 3;\n                break;\n              }\n              return _context22.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                error: {\n                  code: 2,\n                  message: \"please pass in at least 1 rpcUrl\"\n                }\n              });\n            case 3:\n              if (!(!request.chainName || request.chainName.trim() === \"\")) {\n                _context22.next = 5;\n                break;\n              }\n              throw eth_rpc_errors_1.ethErrors.provider.custom({\n                code: 0,\n                message: \"chainName is a required field\"\n              });\n            case 5:\n              if (request.nativeCurrency) {\n                _context22.next = 7;\n                break;\n              }\n              throw eth_rpc_errors_1.ethErrors.provider.custom({\n                code: 0,\n                message: \"nativeCurrency is a required field\"\n              });\n            case 7:\n              chainIdNumber = parseInt(request.chainId, 16);\n              _context22.next = 10;\n              return this.addEthereumChain(chainIdNumber, (_b = request.rpcUrls) !== null && _b !== void 0 ? _b : [], (_c = request.blockExplorerUrls) !== null && _c !== void 0 ? _c : [], request.chainName, (_d = request.iconUrls) !== null && _d !== void 0 ? _d : [], request.nativeCurrency);\n            case 10:\n              success = _context22.sent;\n              if (!success) {\n                _context22.next = 15;\n                break;\n              }\n              return _context22.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: null\n              });\n            case 15:\n              return _context22.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                error: {\n                  code: 2,\n                  message: \"unable to add ethereum chain\"\n                }\n              });\n            case 16:\n            case \"end\":\n              return _context22.stop();\n          }\n        }, _callee22, this);\n      }));\n      function _wallet_addEthereumChain(_x36) {\n        return _wallet_addEthereumChain2.apply(this, arguments);\n      }\n      return _wallet_addEthereumChain;\n    }()\n  }, {\n    key: \"_wallet_switchEthereumChain\",\n    value: function () {\n      var _wallet_switchEthereumChain2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee23(params) {\n        var request;\n        return _regeneratorRuntime().wrap(function _callee23$(_context23) {\n          while (1) switch (_context23.prev = _context23.next) {\n            case 0:\n              request = params[0];\n              _context23.next = 3;\n              return this.switchEthereumChain(parseInt(request.chainId, 16));\n            case 3:\n              return _context23.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: null\n              });\n            case 4:\n            case \"end\":\n              return _context23.stop();\n          }\n        }, _callee23, this);\n      }));\n      function _wallet_switchEthereumChain(_x37) {\n        return _wallet_switchEthereumChain2.apply(this, arguments);\n      }\n      return _wallet_switchEthereumChain;\n    }()\n  }, {\n    key: \"_wallet_watchAsset\",\n    value: function () {\n      var _wallet_watchAsset2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee24(params) {\n        var request, chainId, _request$options, address, symbol, image, decimals, res;\n        return _regeneratorRuntime().wrap(function _callee24$(_context24) {\n          while (1) switch (_context24.prev = _context24.next) {\n            case 0:\n              request = Array.isArray(params) ? params[0] : params;\n              if (request.type) {\n                _context24.next = 3;\n                break;\n              }\n              throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({\n                message: \"Type is required\"\n              });\n            case 3:\n              if (!((request === null || request === void 0 ? void 0 : request.type) !== \"ERC20\")) {\n                _context24.next = 5;\n                break;\n              }\n              throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({\n                message: \"Asset of type '\".concat(request.type, \"' is not supported\")\n              });\n            case 5:\n              if (request === null || request === void 0 ? void 0 : request.options) {\n                _context24.next = 7;\n                break;\n              }\n              throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({\n                message: \"Options are required\"\n              });\n            case 7:\n              if (request === null || request === void 0 ? void 0 : request.options.address) {\n                _context24.next = 9;\n                break;\n              }\n              throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({\n                message: \"Address is required\"\n              });\n            case 9:\n              chainId = this.getChainId();\n              _request$options = request.options, address = _request$options.address, symbol = _request$options.symbol, image = _request$options.image, decimals = _request$options.decimals;\n              _context24.next = 13;\n              return this.watchAsset(request.type, address, symbol, decimals, image, chainId);\n            case 13:\n              res = _context24.sent;\n              return _context24.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: res\n              });\n            case 15:\n            case \"end\":\n              return _context24.stop();\n          }\n        }, _callee24, this);\n      }));\n      function _wallet_watchAsset(_x38) {\n        return _wallet_watchAsset2.apply(this, arguments);\n      }\n      return _wallet_watchAsset;\n    }()\n  }, {\n    key: \"_eth_uninstallFilter\",\n    value: function _eth_uninstallFilter(params) {\n      var filterId = (0, util_1.ensureHexString)(params[0]);\n      return this._filterPolyfill.uninstallFilter(filterId);\n    }\n  }, {\n    key: \"_eth_newFilter\",\n    value: function () {\n      var _eth_newFilter2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee25(params) {\n        var param, filterId;\n        return _regeneratorRuntime().wrap(function _callee25$(_context25) {\n          while (1) switch (_context25.prev = _context25.next) {\n            case 0:\n              param = params[0];\n              _context25.next = 3;\n              return this._filterPolyfill.newFilter(param);\n            case 3:\n              filterId = _context25.sent;\n              return _context25.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: filterId\n              });\n            case 5:\n            case \"end\":\n              return _context25.stop();\n          }\n        }, _callee25, this);\n      }));\n      function _eth_newFilter(_x39) {\n        return _eth_newFilter2.apply(this, arguments);\n      }\n      return _eth_newFilter;\n    }()\n  }, {\n    key: \"_eth_newBlockFilter\",\n    value: function () {\n      var _eth_newBlockFilter2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee26() {\n        var filterId;\n        return _regeneratorRuntime().wrap(function _callee26$(_context26) {\n          while (1) switch (_context26.prev = _context26.next) {\n            case 0:\n              _context26.next = 2;\n              return this._filterPolyfill.newBlockFilter();\n            case 2:\n              filterId = _context26.sent;\n              return _context26.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: filterId\n              });\n            case 4:\n            case \"end\":\n              return _context26.stop();\n          }\n        }, _callee26, this);\n      }));\n      function _eth_newBlockFilter() {\n        return _eth_newBlockFilter2.apply(this, arguments);\n      }\n      return _eth_newBlockFilter;\n    }()\n  }, {\n    key: \"_eth_newPendingTransactionFilter\",\n    value: function () {\n      var _eth_newPendingTransactionFilter2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee27() {\n        var filterId;\n        return _regeneratorRuntime().wrap(function _callee27$(_context27) {\n          while (1) switch (_context27.prev = _context27.next) {\n            case 0:\n              _context27.next = 2;\n              return this._filterPolyfill.newPendingTransactionFilter();\n            case 2:\n              filterId = _context27.sent;\n              return _context27.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: filterId\n              });\n            case 4:\n            case \"end\":\n              return _context27.stop();\n          }\n        }, _callee27, this);\n      }));\n      function _eth_newPendingTransactionFilter() {\n        return _eth_newPendingTransactionFilter2.apply(this, arguments);\n      }\n      return _eth_newPendingTransactionFilter;\n    }()\n  }, {\n    key: \"_eth_getFilterChanges\",\n    value: function _eth_getFilterChanges(params) {\n      var filterId = (0, util_1.ensureHexString)(params[0]);\n      return this._filterPolyfill.getFilterChanges(filterId);\n    }\n  }, {\n    key: \"_eth_getFilterLogs\",\n    value: function _eth_getFilterLogs(params) {\n      var filterId = (0, util_1.ensureHexString)(params[0]);\n      return this._filterPolyfill.getFilterLogs(filterId);\n    }\n  }, {\n    key: \"initializeRelay\",\n    value: function initializeRelay() {\n      var _this5 = this;\n      if (this._relay) {\n        return Promise.resolve(this._relay);\n      }\n      return this._relayProvider().then(function (relay) {\n        relay.setAccountsCallback(function (accounts, isDisconnect) {\n          return _this5._setAddresses(accounts, isDisconnect);\n        });\n        relay.setChainCallback(function (chainId, jsonRpcUrl) {\n          _this5.updateProviderInfo(jsonRpcUrl, parseInt(chainId, 10));\n        });\n        relay.setDappDefaultChainCallback(_this5._chainIdFromOpts);\n        _this5._relay = relay;\n        return relay;\n      });\n    }\n  }]);\n  return CoinbaseWalletProvider;\n}(safe_event_emitter_1.default);\nexports.CoinbaseWalletProvider = CoinbaseWalletProvider;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","CoinbaseWalletProvider","safe_event_emitter_1","require","bn_js_1","eth_rpc_errors_1","DiagnosticLogger_1","Session_1","WalletSDKRelayAbstract_1","util_1","eth_eip712_util_1","FilterPolyfill_1","JSONRPC_1","SubscriptionManager_1","DEFAULT_CHAIN_ID_KEY","DEFAULT_JSON_RPC_URL","options","_a","_b","_filterPolyfill","FilterPolyfill","_subscriptionManager","SubscriptionManager","_relay","_addresses","hasMadeFirstChainChangedEmission","_send","send","bind","_sendAsync","sendAsync","setProviderInfo","updateProviderInfo","getChainId","setAppInfo","enable","close","request","_setAddresses","scanQRCode","genericRequest","_chainIdFromOpts","chainId","_jsonRpcUrlFromOpts","jsonRpcUrl","_overrideIsMetaMask","overrideIsMetaMask","_relayProvider","relayProvider","_storage","storage","_relayEventManager","relayEventManager","diagnostic","diagnosticLogger","reloadOnDisconnect","isCoinbaseWallet","overrideIsCoinbaseWallet","isCoinbaseBrowser","overrideIsCoinbaseBrowser","qrUrl","supportsAddressSwitching","isLedger","chainIdStr","prepend0x","toString","emit","cachedAddresses","getItem","LOCAL_STORAGE_ADDRESSES_KEY","addresses","split","map","address","ensureAddressString","events","on","notification","type","method","data","params","length","initializeRelay","window","addEventListener","event","origin","location","source","action","_chainId","Number","undefined","setItem","originalChainId","chainChanged","ensureIntNumber","symbol","decimals","image","relay","watchAsset","promise","result","rpcUrls","blockExplorerUrls","chainName","iconUrls","nativeCurrency","isWhitelistedNetworkOrStandalone","inlineAddEthereumChain","_isAuthorized","requestEthereumAccounts","addEthereumChain","res","isApproved","switchEthereumChain","selectedAddress","errorCode","ethErrors","provider","custom","code","switchResponse","rpcUrl","appName","appLogoUrl","then","log","EVENTS","ETH_ACCOUNTS_STATE","addresses_length","sessionIdHash","Session","hash","session","id","JSONRPCMethod","eth_requestAccounts","resetAndReload","requestOrMethod","callbackOrParams","Array","isArray","jsonrpc","_sendRequestAsync","callback","requests","r","_sendRequest","req","Error","arrayCb","_sendMultipleRequestsAsync","responses","catch","err","cb","response","args","rpc","invalidRequest","message","newParams","makeRequestId","match","ensureRegExpString","providerOptions","selectProvider","_handleSynchronousMethods","isDisconnect","newAddresses","JSON","stringify","join","Promise","resolve","reject","syncResult","filterPromise","_handleAsynchronousFilterMethods","assign","subscriptionPromise","_handleSubscriptionMethods","_handleAsynchronousMethods","all","eth_accounts","_eth_accounts","eth_coinbase","_eth_coinbase","eth_uninstallFilter","_eth_uninstallFilter","net_version","_net_version","eth_chainId","_eth_chainId","eth_sign","eth_ecRecover","personal_sign","personal_ecRecover","eth_signTransaction","eth_sendRawTransaction","eth_sendTransaction","eth_signTypedData_v1","eth_signTypedData_v2","eth_signTypedData_v3","eth_signTypedData_v4","eth_signTypedData","cbWallet_arbitrary","wallet_addEthereumChain","wallet_switchEthereumChain","wallet_watchAsset","_eth_requestAccounts","_eth_sign","_eth_ecRecover","_personal_sign","_personal_ecRecover","_eth_signTransaction","_eth_sendRawTransaction","_eth_sendTransaction","_eth_signTypedData_v1","_throwUnsupportedMethodError","_eth_signTypedData_v3","_eth_signTypedData_v4","_cbwallet_arbitrary","_wallet_addEthereumChain","_wallet_switchEthereumChain","_wallet_watchAsset","makeEthereumJSONRPCRequest","eth_newFilter","_eth_newFilter","eth_newBlockFilter","_eth_newBlockFilter","eth_newPendingTransactionFilter","_eth_newPendingTransactionFilter","eth_getFilterChanges","_eth_getFilterChanges","eth_getFilterLogs","_eth_getFilterLogs","eth_subscribe","eth_unsubscribe","handleRequest","addressString","addressStr","lowercaseAddresses","includes","_isKnownAddress","UNKNOWN_ADDRESS_ENCOUNTERED","tx","fromAddress","from","_ensureKnownAddress","toAddress","to","weiValue","ensureBN","default","ensureBuffer","Buffer","alloc","nonce","gasPriceInWei","gasPrice","maxFeePerGas","maxPriorityFeePerGas","gasLimit","gas","unauthorized","unsupportedMethod","addPrefix","typedDataJson","signEthereumMessage","userRejectedRequest","signature","ethereumAddressFromSignedMessage","hexStringFromIntNumber","parseInt","_requireAuthorization","_signEthereumMessage","_ethereumAddressFromSignedMessage","_prepareTransactionParams","signEthereumTransaction","signedTransaction","submitEthereumTransaction","signAndSubmitEthereumTransaction","typedData","ensureParsedJSONObject","hashForSignTypedDataLegacy","typedDataJSON","hashForSignTypedData_v3","hashForSignTypedData_v4","error","trim","chainIdNumber","_c","_d","success","invalidParams","filterId","ensureHexString","uninstallFilter","param","newFilter","newBlockFilter","newPendingTransactionFilter","getFilterChanges","getFilterLogs","setAccountsCallback","accounts","setChainCallback","setDappDefaultChainCallback"],"sources":["C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@coinbase/wallet-sdk/dist/provider/CoinbaseWalletProvider.js"],"sourcesContent":["\"use strict\";\n// Copyright (c) 2018-2022 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CoinbaseWalletProvider = void 0;\nconst safe_event_emitter_1 = __importDefault(require(\"@metamask/safe-event-emitter\"));\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst eth_rpc_errors_1 = require(\"eth-rpc-errors\");\nconst DiagnosticLogger_1 = require(\"../connection/DiagnosticLogger\");\nconst Session_1 = require(\"../relay/Session\");\nconst WalletSDKRelayAbstract_1 = require(\"../relay/WalletSDKRelayAbstract\");\nconst util_1 = require(\"../util\");\nconst eth_eip712_util_1 = __importDefault(require(\"../vendor-js/eth-eip712-util\"));\nconst FilterPolyfill_1 = require(\"./FilterPolyfill\");\nconst JSONRPC_1 = require(\"./JSONRPC\");\nconst SubscriptionManager_1 = require(\"./SubscriptionManager\");\nconst DEFAULT_CHAIN_ID_KEY = \"DefaultChainId\";\nconst DEFAULT_JSON_RPC_URL = \"DefaultJsonRpcUrl\";\nclass CoinbaseWalletProvider extends safe_event_emitter_1.default {\n    constructor(options) {\n        var _a, _b;\n        super();\n        this._filterPolyfill = new FilterPolyfill_1.FilterPolyfill(this);\n        this._subscriptionManager = new SubscriptionManager_1.SubscriptionManager(this);\n        this._relay = null;\n        this._addresses = [];\n        this.hasMadeFirstChainChangedEmission = false;\n        this._send = this.send.bind(this);\n        this._sendAsync = this.sendAsync.bind(this);\n        this.setProviderInfo = this.setProviderInfo.bind(this);\n        this.updateProviderInfo = this.updateProviderInfo.bind(this);\n        this.getChainId = this.getChainId.bind(this);\n        this.setAppInfo = this.setAppInfo.bind(this);\n        this.enable = this.enable.bind(this);\n        this.close = this.close.bind(this);\n        this.send = this.send.bind(this);\n        this.sendAsync = this.sendAsync.bind(this);\n        this.request = this.request.bind(this);\n        this._setAddresses = this._setAddresses.bind(this);\n        this.scanQRCode = this.scanQRCode.bind(this);\n        this.genericRequest = this.genericRequest.bind(this);\n        this._chainIdFromOpts = options.chainId;\n        this._jsonRpcUrlFromOpts = options.jsonRpcUrl;\n        this._overrideIsMetaMask = options.overrideIsMetaMask;\n        this._relayProvider = options.relayProvider;\n        this._storage = options.storage;\n        this._relayEventManager = options.relayEventManager;\n        this.diagnostic = options.diagnosticLogger;\n        this.reloadOnDisconnect = true;\n        this.isCoinbaseWallet = (_a = options.overrideIsCoinbaseWallet) !== null && _a !== void 0 ? _a : true;\n        this.isCoinbaseBrowser = (_b = options.overrideIsCoinbaseBrowser) !== null && _b !== void 0 ? _b : false;\n        this.qrUrl = options.qrUrl;\n        this.supportsAddressSwitching = options.supportsAddressSwitching;\n        this.isLedger = options.isLedger;\n        const chainId = this.getChainId();\n        const chainIdStr = (0, util_1.prepend0x)(chainId.toString(16));\n        // indicate that we've connected, for EIP-1193 compliance\n        this.emit(\"connect\", { chainIdStr });\n        const cachedAddresses = this._storage.getItem(WalletSDKRelayAbstract_1.LOCAL_STORAGE_ADDRESSES_KEY);\n        if (cachedAddresses) {\n            const addresses = cachedAddresses.split(\" \");\n            if (addresses[0] !== \"\") {\n                this._addresses = addresses.map(address => (0, util_1.ensureAddressString)(address));\n                this.emit(\"accountsChanged\", addresses);\n            }\n        }\n        this._subscriptionManager.events.on(\"notification\", (notification) => {\n            this.emit(\"message\", {\n                type: notification.method,\n                data: notification.params,\n            });\n        });\n        if (this._addresses.length > 0) {\n            void this.initializeRelay();\n        }\n        window.addEventListener(\"message\", event => {\n            var _a;\n            // Used to verify the source and window are correct before proceeding\n            if (event.origin !== location.origin || event.source !== window) {\n                return;\n            }\n            if (event.data.type !== \"walletLinkMessage\")\n                return; // compatibility with CBW extension\n            if (event.data.data.action === \"defaultChainChanged\" ||\n                event.data.data.action === \"dappChainSwitched\") {\n                const _chainId = event.data.data.chainId;\n                const jsonRpcUrl = (_a = event.data.data.jsonRpcUrl) !== null && _a !== void 0 ? _a : this.jsonRpcUrl;\n                this.updateProviderInfo(jsonRpcUrl, Number(_chainId));\n            }\n            if (event.data.data.action === \"addressChanged\") {\n                this._setAddresses([event.data.data.address]);\n            }\n        });\n    }\n    get selectedAddress() {\n        return this._addresses[0] || undefined;\n    }\n    get networkVersion() {\n        return this.getChainId().toString(10);\n    }\n    get chainId() {\n        return (0, util_1.prepend0x)(this.getChainId().toString(16));\n    }\n    get isWalletLink() {\n        // backward compatibility\n        return true;\n    }\n    /**\n     * Some DApps (i.e. Alpha Homora) seem to require the window.ethereum object return\n     * true for this method.\n     */\n    get isMetaMask() {\n        return this._overrideIsMetaMask;\n    }\n    get host() {\n        return this.jsonRpcUrl;\n    }\n    get connected() {\n        return true;\n    }\n    isConnected() {\n        return true;\n    }\n    get jsonRpcUrl() {\n        var _a;\n        return ((_a = this._storage.getItem(DEFAULT_JSON_RPC_URL)) !== null && _a !== void 0 ? _a : this._jsonRpcUrlFromOpts);\n    }\n    set jsonRpcUrl(value) {\n        this._storage.setItem(DEFAULT_JSON_RPC_URL, value);\n    }\n    disableReloadOnDisconnect() {\n        this.reloadOnDisconnect = false;\n    }\n    /**\n     * this function is called when coinbase provider is being injected to a dapp\n     * standalone + walletlinked extension, ledger, in-app browser using cipher-web-view\n     */\n    setProviderInfo(jsonRpcUrl, chainId) {\n        // extension tend to use the chianId from the dapp, while in-app browser and ledger overrides the default network\n        if (!(this.isLedger || this.isCoinbaseBrowser)) {\n            this._chainIdFromOpts = chainId;\n            this._jsonRpcUrlFromOpts = jsonRpcUrl;\n        }\n        this.updateProviderInfo(this.jsonRpcUrl, this.getChainId());\n    }\n    updateProviderInfo(jsonRpcUrl, chainId) {\n        this.jsonRpcUrl = jsonRpcUrl;\n        // emit chainChanged event if necessary\n        const originalChainId = this.getChainId();\n        this._storage.setItem(DEFAULT_CHAIN_ID_KEY, chainId.toString(10));\n        const chainChanged = (0, util_1.ensureIntNumber)(chainId) !== originalChainId;\n        if (chainChanged || !this.hasMadeFirstChainChangedEmission) {\n            this.emit(\"chainChanged\", this.getChainId());\n            this.hasMadeFirstChainChangedEmission = true;\n        }\n    }\n    async watchAsset(type, address, symbol, decimals, image, chainId) {\n        const relay = await this.initializeRelay();\n        const result = await relay.watchAsset(type, address, symbol, decimals, image, chainId === null || chainId === void 0 ? void 0 : chainId.toString()).promise;\n        return !!result.result;\n    }\n    async addEthereumChain(chainId, rpcUrls, blockExplorerUrls, chainName, iconUrls, nativeCurrency) {\n        var _a, _b;\n        if ((0, util_1.ensureIntNumber)(chainId) === this.getChainId()) {\n            return false;\n        }\n        const relay = await this.initializeRelay();\n        const isWhitelistedNetworkOrStandalone = relay.inlineAddEthereumChain(chainId.toString());\n        if (!this._isAuthorized() && !isWhitelistedNetworkOrStandalone) {\n            await relay.requestEthereumAccounts().promise;\n        }\n        const res = await relay.addEthereumChain(chainId.toString(), rpcUrls, iconUrls, blockExplorerUrls, chainName, nativeCurrency).promise;\n        if (((_a = res.result) === null || _a === void 0 ? void 0 : _a.isApproved) === true) {\n            this.updateProviderInfo(rpcUrls[0], chainId);\n        }\n        return ((_b = res.result) === null || _b === void 0 ? void 0 : _b.isApproved) === true;\n    }\n    async switchEthereumChain(chainId) {\n        const relay = await this.initializeRelay();\n        const res = await relay.switchEthereumChain(chainId.toString(10), this.selectedAddress || undefined).promise;\n        if (res.errorCode) {\n            throw eth_rpc_errors_1.ethErrors.provider.custom({\n                code: res.errorCode,\n            });\n        }\n        const switchResponse = res.result;\n        if (switchResponse.isApproved && switchResponse.rpcUrl.length > 0) {\n            this.updateProviderInfo(switchResponse.rpcUrl, chainId);\n        }\n    }\n    setAppInfo(appName, appLogoUrl) {\n        void this.initializeRelay().then(relay => relay.setAppInfo(appName, appLogoUrl));\n    }\n    async enable() {\n        var _a;\n        (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.ETH_ACCOUNTS_STATE, {\n            method: \"provider::enable\",\n            addresses_length: this._addresses.length,\n            sessionIdHash: this._relay\n                ? Session_1.Session.hash(this._relay.session.id)\n                : undefined,\n        });\n        if (this._addresses.length > 0) {\n            return [...this._addresses];\n        }\n        return await this._send(JSONRPC_1.JSONRPCMethod.eth_requestAccounts);\n    }\n    async close() {\n        const relay = await this.initializeRelay();\n        relay.resetAndReload();\n    }\n    send(requestOrMethod, callbackOrParams) {\n        // send<T>(method, params): Promise<T>\n        if (typeof requestOrMethod === \"string\") {\n            const method = requestOrMethod;\n            const params = Array.isArray(callbackOrParams)\n                ? callbackOrParams\n                : callbackOrParams !== undefined\n                    ? [callbackOrParams]\n                    : [];\n            const request = {\n                jsonrpc: \"2.0\",\n                id: 0,\n                method,\n                params,\n            };\n            return this._sendRequestAsync(request).then(res => res.result);\n        }\n        // send(JSONRPCRequest | JSONRPCRequest[], callback): void\n        if (typeof callbackOrParams === \"function\") {\n            const request = requestOrMethod;\n            const callback = callbackOrParams;\n            return this._sendAsync(request, callback);\n        }\n        // send(JSONRPCRequest[]): JSONRPCResponse[]\n        if (Array.isArray(requestOrMethod)) {\n            const requests = requestOrMethod;\n            return requests.map(r => this._sendRequest(r));\n        }\n        // send(JSONRPCRequest): JSONRPCResponse\n        const req = requestOrMethod;\n        return this._sendRequest(req);\n    }\n    async sendAsync(request, callback) {\n        if (typeof callback !== \"function\") {\n            throw new Error(\"callback is required\");\n        }\n        // send(JSONRPCRequest[], callback): void\n        if (Array.isArray(request)) {\n            const arrayCb = callback;\n            this._sendMultipleRequestsAsync(request)\n                .then(responses => arrayCb(null, responses))\n                .catch(err => arrayCb(err, null));\n            return;\n        }\n        // send(JSONRPCRequest, callback): void\n        const cb = callback;\n        return this._sendRequestAsync(request)\n            .then(response => cb(null, response))\n            .catch(err => cb(err, null));\n    }\n    async request(args) {\n        if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n            throw eth_rpc_errors_1.ethErrors.rpc.invalidRequest({\n                message: \"Expected a single, non-array, object argument.\",\n                data: args,\n            });\n        }\n        const { method, params } = args;\n        if (typeof method !== \"string\" || method.length === 0) {\n            throw eth_rpc_errors_1.ethErrors.rpc.invalidRequest({\n                message: \"'args.method' must be a non-empty string.\",\n                data: args,\n            });\n        }\n        if (params !== undefined &&\n            !Array.isArray(params) &&\n            (typeof params !== \"object\" || params === null)) {\n            throw eth_rpc_errors_1.ethErrors.rpc.invalidRequest({\n                message: \"'args.params' must be an object or array if provided.\",\n                data: args,\n            });\n        }\n        const newParams = params === undefined ? [] : params;\n        // Coinbase Wallet Requests\n        const id = this._relayEventManager.makeRequestId();\n        const result = await this._sendRequestAsync({\n            method,\n            params: newParams,\n            jsonrpc: \"2.0\",\n            id,\n        });\n        return result.result;\n    }\n    async scanQRCode(match) {\n        const relay = await this.initializeRelay();\n        const res = await relay.scanQRCode((0, util_1.ensureRegExpString)(match)).promise;\n        if (typeof res.result !== \"string\") {\n            throw new Error(\"result was not a string\");\n        }\n        return res.result;\n    }\n    async genericRequest(data, action) {\n        const relay = await this.initializeRelay();\n        const res = await relay.genericRequest(data, action).promise;\n        if (typeof res.result !== \"string\") {\n            throw new Error(\"result was not a string\");\n        }\n        return res.result;\n    }\n    async selectProvider(providerOptions) {\n        const relay = await this.initializeRelay();\n        const res = await relay.selectProvider(providerOptions).promise;\n        if (typeof res.result !== \"string\") {\n            throw new Error(\"result was not a string\");\n        }\n        return res.result;\n    }\n    supportsSubscriptions() {\n        return false;\n    }\n    subscribe() {\n        throw new Error(\"Subscriptions are not supported\");\n    }\n    unsubscribe() {\n        throw new Error(\"Subscriptions are not supported\");\n    }\n    disconnect() {\n        return true;\n    }\n    _sendRequest(request) {\n        const response = {\n            jsonrpc: \"2.0\",\n            id: request.id,\n        };\n        const { method } = request;\n        response.result = this._handleSynchronousMethods(request);\n        if (response.result === undefined) {\n            throw new Error(`Coinbase Wallet does not support calling ${method} synchronously without ` +\n                `a callback. Please provide a callback parameter to call ${method} ` +\n                `asynchronously.`);\n        }\n        return response;\n    }\n    _setAddresses(addresses, isDisconnect) {\n        if (!Array.isArray(addresses)) {\n            throw new Error(\"addresses is not an array\");\n        }\n        const newAddresses = addresses.map(address => (0, util_1.ensureAddressString)(address));\n        if (JSON.stringify(newAddresses) === JSON.stringify(this._addresses)) {\n            return;\n        }\n        if (this._addresses.length > 0 &&\n            this.supportsAddressSwitching === false &&\n            !isDisconnect) {\n            /**\n             * The extension currently doesn't support switching selected wallet index\n             * make sure walletlink doesn't update it's address in this case\n             */\n            return;\n        }\n        this._addresses = newAddresses;\n        this.emit(\"accountsChanged\", this._addresses);\n        this._storage.setItem(WalletSDKRelayAbstract_1.LOCAL_STORAGE_ADDRESSES_KEY, newAddresses.join(\" \"));\n    }\n    _sendRequestAsync(request) {\n        return new Promise((resolve, reject) => {\n            try {\n                const syncResult = this._handleSynchronousMethods(request);\n                if (syncResult !== undefined) {\n                    return resolve({\n                        jsonrpc: \"2.0\",\n                        id: request.id,\n                        result: syncResult,\n                    });\n                }\n                const filterPromise = this._handleAsynchronousFilterMethods(request);\n                if (filterPromise !== undefined) {\n                    filterPromise\n                        .then(res => resolve(Object.assign(Object.assign({}, res), { id: request.id })))\n                        .catch(err => reject(err));\n                    return;\n                }\n                const subscriptionPromise = this._handleSubscriptionMethods(request);\n                if (subscriptionPromise !== undefined) {\n                    subscriptionPromise\n                        .then(res => resolve({\n                        jsonrpc: \"2.0\",\n                        id: request.id,\n                        result: res.result,\n                    }))\n                        .catch(err => reject(err));\n                    return;\n                }\n            }\n            catch (err) {\n                return reject(err);\n            }\n            this._handleAsynchronousMethods(request)\n                .then(res => res && resolve(Object.assign(Object.assign({}, res), { id: request.id })))\n                .catch(err => reject(err));\n        });\n    }\n    _sendMultipleRequestsAsync(requests) {\n        return Promise.all(requests.map(r => this._sendRequestAsync(r)));\n    }\n    _handleSynchronousMethods(request) {\n        const { method } = request;\n        const params = request.params || [];\n        switch (method) {\n            case JSONRPC_1.JSONRPCMethod.eth_accounts:\n                return this._eth_accounts();\n            case JSONRPC_1.JSONRPCMethod.eth_coinbase:\n                return this._eth_coinbase();\n            case JSONRPC_1.JSONRPCMethod.eth_uninstallFilter:\n                return this._eth_uninstallFilter(params);\n            case JSONRPC_1.JSONRPCMethod.net_version:\n                return this._net_version();\n            case JSONRPC_1.JSONRPCMethod.eth_chainId:\n                return this._eth_chainId();\n            default:\n                return undefined;\n        }\n    }\n    async _handleAsynchronousMethods(request) {\n        const { method } = request;\n        const params = request.params || [];\n        switch (method) {\n            case JSONRPC_1.JSONRPCMethod.eth_requestAccounts:\n                return this._eth_requestAccounts();\n            case JSONRPC_1.JSONRPCMethod.eth_sign:\n                return this._eth_sign(params);\n            case JSONRPC_1.JSONRPCMethod.eth_ecRecover:\n                return this._eth_ecRecover(params);\n            case JSONRPC_1.JSONRPCMethod.personal_sign:\n                return this._personal_sign(params);\n            case JSONRPC_1.JSONRPCMethod.personal_ecRecover:\n                return this._personal_ecRecover(params);\n            case JSONRPC_1.JSONRPCMethod.eth_signTransaction:\n                return this._eth_signTransaction(params);\n            case JSONRPC_1.JSONRPCMethod.eth_sendRawTransaction:\n                return this._eth_sendRawTransaction(params);\n            case JSONRPC_1.JSONRPCMethod.eth_sendTransaction:\n                return this._eth_sendTransaction(params);\n            case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v1:\n                return this._eth_signTypedData_v1(params);\n            case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v2:\n                return this._throwUnsupportedMethodError();\n            case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v3:\n                return this._eth_signTypedData_v3(params);\n            case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v4:\n            case JSONRPC_1.JSONRPCMethod.eth_signTypedData:\n                return this._eth_signTypedData_v4(params);\n            case JSONRPC_1.JSONRPCMethod.cbWallet_arbitrary:\n                return this._cbwallet_arbitrary(params);\n            case JSONRPC_1.JSONRPCMethod.wallet_addEthereumChain:\n                return this._wallet_addEthereumChain(params);\n            case JSONRPC_1.JSONRPCMethod.wallet_switchEthereumChain:\n                return this._wallet_switchEthereumChain(params);\n            case JSONRPC_1.JSONRPCMethod.wallet_watchAsset:\n                return this._wallet_watchAsset(params);\n        }\n        const relay = await this.initializeRelay();\n        return relay.makeEthereumJSONRPCRequest(request, this.jsonRpcUrl);\n    }\n    _handleAsynchronousFilterMethods(request) {\n        const { method } = request;\n        const params = request.params || [];\n        switch (method) {\n            case JSONRPC_1.JSONRPCMethod.eth_newFilter:\n                return this._eth_newFilter(params);\n            case JSONRPC_1.JSONRPCMethod.eth_newBlockFilter:\n                return this._eth_newBlockFilter();\n            case JSONRPC_1.JSONRPCMethod.eth_newPendingTransactionFilter:\n                return this._eth_newPendingTransactionFilter();\n            case JSONRPC_1.JSONRPCMethod.eth_getFilterChanges:\n                return this._eth_getFilterChanges(params);\n            case JSONRPC_1.JSONRPCMethod.eth_getFilterLogs:\n                return this._eth_getFilterLogs(params);\n        }\n        return undefined;\n    }\n    _handleSubscriptionMethods(request) {\n        switch (request.method) {\n            case JSONRPC_1.JSONRPCMethod.eth_subscribe:\n            case JSONRPC_1.JSONRPCMethod.eth_unsubscribe:\n                return this._subscriptionManager.handleRequest(request);\n        }\n        return undefined;\n    }\n    _isKnownAddress(addressString) {\n        try {\n            const addressStr = (0, util_1.ensureAddressString)(addressString);\n            const lowercaseAddresses = this._addresses.map(address => (0, util_1.ensureAddressString)(address));\n            return lowercaseAddresses.includes(addressStr);\n        }\n        catch (_a) { }\n        return false;\n    }\n    _ensureKnownAddress(addressString) {\n        var _a;\n        if (!this._isKnownAddress(addressString)) {\n            (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.UNKNOWN_ADDRESS_ENCOUNTERED);\n            throw new Error(\"Unknown Ethereum address\");\n        }\n    }\n    _prepareTransactionParams(tx) {\n        const fromAddress = tx.from\n            ? (0, util_1.ensureAddressString)(tx.from)\n            : this.selectedAddress;\n        if (!fromAddress) {\n            throw new Error(\"Ethereum address is unavailable\");\n        }\n        this._ensureKnownAddress(fromAddress);\n        const toAddress = tx.to ? (0, util_1.ensureAddressString)(tx.to) : null;\n        const weiValue = tx.value != null ? (0, util_1.ensureBN)(tx.value) : new bn_js_1.default(0);\n        const data = tx.data ? (0, util_1.ensureBuffer)(tx.data) : Buffer.alloc(0);\n        const nonce = tx.nonce != null ? (0, util_1.ensureIntNumber)(tx.nonce) : null;\n        const gasPriceInWei = tx.gasPrice != null ? (0, util_1.ensureBN)(tx.gasPrice) : null;\n        const maxFeePerGas = tx.maxFeePerGas != null ? (0, util_1.ensureBN)(tx.maxFeePerGas) : null;\n        const maxPriorityFeePerGas = tx.maxPriorityFeePerGas != null\n            ? (0, util_1.ensureBN)(tx.maxPriorityFeePerGas)\n            : null;\n        const gasLimit = tx.gas != null ? (0, util_1.ensureBN)(tx.gas) : null;\n        const chainId = this.getChainId();\n        return {\n            fromAddress,\n            toAddress,\n            weiValue,\n            data,\n            nonce,\n            gasPriceInWei,\n            maxFeePerGas,\n            maxPriorityFeePerGas,\n            gasLimit,\n            chainId,\n        };\n    }\n    _isAuthorized() {\n        return this._addresses.length > 0;\n    }\n    _requireAuthorization() {\n        if (!this._isAuthorized()) {\n            throw eth_rpc_errors_1.ethErrors.provider.unauthorized({});\n        }\n    }\n    _throwUnsupportedMethodError() {\n        throw eth_rpc_errors_1.ethErrors.provider.unsupportedMethod({});\n    }\n    async _signEthereumMessage(message, address, addPrefix, typedDataJson) {\n        this._ensureKnownAddress(address);\n        try {\n            const relay = await this.initializeRelay();\n            const res = await relay.signEthereumMessage(message, address, addPrefix, typedDataJson).promise;\n            return { jsonrpc: \"2.0\", id: 0, result: res.result };\n        }\n        catch (err) {\n            if (typeof err.message === \"string\" &&\n                err.message.match(/(denied|rejected)/i)) {\n                throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied message signature\");\n            }\n            throw err;\n        }\n    }\n    async _ethereumAddressFromSignedMessage(message, signature, addPrefix) {\n        const relay = await this.initializeRelay();\n        const res = await relay.ethereumAddressFromSignedMessage(message, signature, addPrefix).promise;\n        return { jsonrpc: \"2.0\", id: 0, result: res.result };\n    }\n    _eth_accounts() {\n        return [...this._addresses];\n    }\n    _eth_coinbase() {\n        return this.selectedAddress || null;\n    }\n    _net_version() {\n        return this.getChainId().toString(10);\n    }\n    _eth_chainId() {\n        return (0, util_1.hexStringFromIntNumber)(this.getChainId());\n    }\n    getChainId() {\n        const chainIdStr = this._storage.getItem(DEFAULT_CHAIN_ID_KEY);\n        if (!chainIdStr) {\n            return (0, util_1.ensureIntNumber)(this._chainIdFromOpts);\n        }\n        const chainId = parseInt(chainIdStr, 10);\n        return (0, util_1.ensureIntNumber)(chainId);\n    }\n    async _eth_requestAccounts() {\n        var _a;\n        (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.ETH_ACCOUNTS_STATE, {\n            method: \"provider::_eth_requestAccounts\",\n            addresses_length: this._addresses.length,\n            sessionIdHash: this._relay\n                ? Session_1.Session.hash(this._relay.session.id)\n                : undefined,\n        });\n        if (this._addresses.length > 0) {\n            return Promise.resolve({\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: this._addresses,\n            });\n        }\n        let res;\n        try {\n            const relay = await this.initializeRelay();\n            res = await relay.requestEthereumAccounts().promise;\n        }\n        catch (err) {\n            if (typeof err.message === \"string\" &&\n                err.message.match(/(denied|rejected)/i)) {\n                throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied account authorization\");\n            }\n            throw err;\n        }\n        if (!res.result) {\n            throw new Error(\"accounts received is empty\");\n        }\n        this._setAddresses(res.result);\n        if (!(this.isLedger || this.isCoinbaseBrowser)) {\n            await this.switchEthereumChain(this.getChainId());\n        }\n        return { jsonrpc: \"2.0\", id: 0, result: this._addresses };\n    }\n    _eth_sign(params) {\n        this._requireAuthorization();\n        const address = (0, util_1.ensureAddressString)(params[0]);\n        const message = (0, util_1.ensureBuffer)(params[1]);\n        return this._signEthereumMessage(message, address, false);\n    }\n    _eth_ecRecover(params) {\n        const message = (0, util_1.ensureBuffer)(params[0]);\n        const signature = (0, util_1.ensureBuffer)(params[1]);\n        return this._ethereumAddressFromSignedMessage(message, signature, false);\n    }\n    _personal_sign(params) {\n        this._requireAuthorization();\n        const message = (0, util_1.ensureBuffer)(params[0]);\n        const address = (0, util_1.ensureAddressString)(params[1]);\n        return this._signEthereumMessage(message, address, true);\n    }\n    _personal_ecRecover(params) {\n        const message = (0, util_1.ensureBuffer)(params[0]);\n        const signature = (0, util_1.ensureBuffer)(params[1]);\n        return this._ethereumAddressFromSignedMessage(message, signature, true);\n    }\n    async _eth_signTransaction(params) {\n        this._requireAuthorization();\n        const tx = this._prepareTransactionParams(params[0] || {});\n        try {\n            const relay = await this.initializeRelay();\n            const res = await relay.signEthereumTransaction(tx).promise;\n            return { jsonrpc: \"2.0\", id: 0, result: res.result };\n        }\n        catch (err) {\n            if (typeof err.message === \"string\" &&\n                err.message.match(/(denied|rejected)/i)) {\n                throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied transaction signature\");\n            }\n            throw err;\n        }\n    }\n    async _eth_sendRawTransaction(params) {\n        const signedTransaction = (0, util_1.ensureBuffer)(params[0]);\n        const relay = await this.initializeRelay();\n        const res = await relay.submitEthereumTransaction(signedTransaction, this.getChainId()).promise;\n        return { jsonrpc: \"2.0\", id: 0, result: res.result };\n    }\n    async _eth_sendTransaction(params) {\n        this._requireAuthorization();\n        const tx = this._prepareTransactionParams(params[0] || {});\n        try {\n            const relay = await this.initializeRelay();\n            const res = await relay.signAndSubmitEthereumTransaction(tx).promise;\n            return { jsonrpc: \"2.0\", id: 0, result: res.result };\n        }\n        catch (err) {\n            if (typeof err.message === \"string\" &&\n                err.message.match(/(denied|rejected)/i)) {\n                throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied transaction signature\");\n            }\n            throw err;\n        }\n    }\n    async _eth_signTypedData_v1(params) {\n        this._requireAuthorization();\n        const typedData = (0, util_1.ensureParsedJSONObject)(params[0]);\n        const address = (0, util_1.ensureAddressString)(params[1]);\n        this._ensureKnownAddress(address);\n        const message = eth_eip712_util_1.default.hashForSignTypedDataLegacy({ data: typedData });\n        const typedDataJSON = JSON.stringify(typedData, null, 2);\n        return this._signEthereumMessage(message, address, false, typedDataJSON);\n    }\n    async _eth_signTypedData_v3(params) {\n        this._requireAuthorization();\n        const address = (0, util_1.ensureAddressString)(params[0]);\n        const typedData = (0, util_1.ensureParsedJSONObject)(params[1]);\n        this._ensureKnownAddress(address);\n        const message = eth_eip712_util_1.default.hashForSignTypedData_v3({ data: typedData });\n        const typedDataJSON = JSON.stringify(typedData, null, 2);\n        return this._signEthereumMessage(message, address, false, typedDataJSON);\n    }\n    async _eth_signTypedData_v4(params) {\n        this._requireAuthorization();\n        const address = (0, util_1.ensureAddressString)(params[0]);\n        const typedData = (0, util_1.ensureParsedJSONObject)(params[1]);\n        this._ensureKnownAddress(address);\n        const message = eth_eip712_util_1.default.hashForSignTypedData_v4({ data: typedData });\n        const typedDataJSON = JSON.stringify(typedData, null, 2);\n        return this._signEthereumMessage(message, address, false, typedDataJSON);\n    }\n    /** @deprecated */\n    async _cbwallet_arbitrary(params) {\n        const action = params[0];\n        const data = params[1];\n        if (typeof data !== \"string\") {\n            throw new Error(\"parameter must be a string\");\n        }\n        if (typeof action !== \"object\" || action === null) {\n            throw new Error(\"parameter must be an object\");\n        }\n        const result = await this.genericRequest(action, data);\n        return { jsonrpc: \"2.0\", id: 0, result };\n    }\n    async _wallet_addEthereumChain(params) {\n        var _a, _b, _c, _d;\n        const request = params[0];\n        if (((_a = request.rpcUrls) === null || _a === void 0 ? void 0 : _a.length) === 0) {\n            return {\n                jsonrpc: \"2.0\",\n                id: 0,\n                error: { code: 2, message: `please pass in at least 1 rpcUrl` },\n            };\n        }\n        if (!request.chainName || request.chainName.trim() === \"\") {\n            throw eth_rpc_errors_1.ethErrors.provider.custom({\n                code: 0,\n                message: \"chainName is a required field\",\n            });\n        }\n        if (!request.nativeCurrency) {\n            throw eth_rpc_errors_1.ethErrors.provider.custom({\n                code: 0,\n                message: \"nativeCurrency is a required field\",\n            });\n        }\n        const chainIdNumber = parseInt(request.chainId, 16);\n        const success = await this.addEthereumChain(chainIdNumber, (_b = request.rpcUrls) !== null && _b !== void 0 ? _b : [], (_c = request.blockExplorerUrls) !== null && _c !== void 0 ? _c : [], request.chainName, (_d = request.iconUrls) !== null && _d !== void 0 ? _d : [], request.nativeCurrency);\n        if (success) {\n            return { jsonrpc: \"2.0\", id: 0, result: null };\n        }\n        else {\n            return {\n                jsonrpc: \"2.0\",\n                id: 0,\n                error: { code: 2, message: `unable to add ethereum chain` },\n            };\n        }\n    }\n    async _wallet_switchEthereumChain(params) {\n        const request = params[0];\n        await this.switchEthereumChain(parseInt(request.chainId, 16));\n        return { jsonrpc: \"2.0\", id: 0, result: null };\n    }\n    async _wallet_watchAsset(params) {\n        const request = (Array.isArray(params) ? params[0] : params);\n        if (!request.type) {\n            throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({\n                message: \"Type is required\",\n            });\n        }\n        if ((request === null || request === void 0 ? void 0 : request.type) !== \"ERC20\") {\n            throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({\n                message: `Asset of type '${request.type}' is not supported`,\n            });\n        }\n        if (!(request === null || request === void 0 ? void 0 : request.options)) {\n            throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({\n                message: \"Options are required\",\n            });\n        }\n        if (!(request === null || request === void 0 ? void 0 : request.options.address)) {\n            throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({\n                message: \"Address is required\",\n            });\n        }\n        const chainId = this.getChainId();\n        const { address, symbol, image, decimals } = request.options;\n        const res = await this.watchAsset(request.type, address, symbol, decimals, image, chainId);\n        return { jsonrpc: \"2.0\", id: 0, result: res };\n    }\n    _eth_uninstallFilter(params) {\n        const filterId = (0, util_1.ensureHexString)(params[0]);\n        return this._filterPolyfill.uninstallFilter(filterId);\n    }\n    async _eth_newFilter(params) {\n        const param = params[0];\n        const filterId = await this._filterPolyfill.newFilter(param);\n        return { jsonrpc: \"2.0\", id: 0, result: filterId };\n    }\n    async _eth_newBlockFilter() {\n        const filterId = await this._filterPolyfill.newBlockFilter();\n        return { jsonrpc: \"2.0\", id: 0, result: filterId };\n    }\n    async _eth_newPendingTransactionFilter() {\n        const filterId = await this._filterPolyfill.newPendingTransactionFilter();\n        return { jsonrpc: \"2.0\", id: 0, result: filterId };\n    }\n    _eth_getFilterChanges(params) {\n        const filterId = (0, util_1.ensureHexString)(params[0]);\n        return this._filterPolyfill.getFilterChanges(filterId);\n    }\n    _eth_getFilterLogs(params) {\n        const filterId = (0, util_1.ensureHexString)(params[0]);\n        return this._filterPolyfill.getFilterLogs(filterId);\n    }\n    initializeRelay() {\n        if (this._relay) {\n            return Promise.resolve(this._relay);\n        }\n        return this._relayProvider().then(relay => {\n            relay.setAccountsCallback((accounts, isDisconnect) => this._setAddresses(accounts, isDisconnect));\n            relay.setChainCallback((chainId, jsonRpcUrl) => {\n                this.updateProviderInfo(jsonRpcUrl, parseInt(chainId, 10));\n            });\n            relay.setDappDefaultChainCallback(this._chainIdFromOpts);\n            this._relay = relay;\n            return relay;\n        });\n    }\n}\nexports.CoinbaseWalletProvider = CoinbaseWalletProvider;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}