{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _objectSpread = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _asyncToGenerator = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar configure = require('../lib/configure');\nvar toUrlSearchParams = require('../lib/to-url-search-params');\nvar _require = require('multiaddr'),\n  Multiaddr = _require.Multiaddr;\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bootstrap').API<HTTPClientExtraOptions>} BootstrapAPI\n */\n\nmodule.exports = configure(function (api) {\n  /**\n   * @type {BootstrapAPI[\"add\"]}\n   */\n  function add(_x) {\n    return _add.apply(this, arguments);\n  }\n  function _add() {\n    _add = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(addr) {\n      var options,\n        res,\n        _yield$res$json,\n        Peers,\n        _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n            _context.next = 3;\n            return api.post('bootstrap/add', {\n              signal: options.signal,\n              searchParams: toUrlSearchParams(_objectSpread({\n                arg: addr\n              }, options)),\n              headers: options.headers\n            });\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.json();\n          case 6:\n            _yield$res$json = _context.sent;\n            Peers = _yield$res$json.Peers;\n            return _context.abrupt(\"return\", {\n              Peers: Peers.map(function ( /** @type {string} */ma) {\n                return new Multiaddr(ma);\n              })\n            });\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return _add.apply(this, arguments);\n  }\n  return add;\n});","map":{"version":3,"names":["configure","require","toUrlSearchParams","Multiaddr","module","exports","api","add","addr","options","post","signal","searchParams","arg","headers","res","json","Peers","map","ma"],"sources":["C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/ipfs-http-client/src/bootstrap/add.js"],"sourcesContent":["'use strict'\n\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\nconst { Multiaddr } = require('multiaddr')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bootstrap').API<HTTPClientExtraOptions>} BootstrapAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {BootstrapAPI[\"add\"]}\n   */\n  async function add (addr, options = {}) {\n    const res = await api.post('bootstrap/add', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: addr,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    const { Peers } = await res.json()\n\n    return { Peers: Peers.map((/** @type {string} */ ma) => new Multiaddr(ma)) }\n  }\n\n  return add\n})\n"],"mappings":"AAAA,YAAY;;AAAA;AAAA;AAAA;AAEZ,IAAMA,SAAS,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAC7C,IAAMC,iBAAiB,GAAGD,OAAO,CAAC,6BAA6B,CAAC;AAChE,eAAsBA,OAAO,CAAC,WAAW,CAAC;EAAlCE,SAAS,YAATA,SAAS;;AAEjB;AACA;AACA;AACA;;AAEAC,MAAM,CAACC,OAAO,GAAGL,SAAS,CAAC,UAAAM,GAAG,EAAI;EAChC;AACF;AACA;EAFE,SAGeC,GAAG;IAAA;EAAA;EAAA;IAAA,kEAAlB,iBAAoBC,IAAI;MAAA;QAAA;QAAA;QAAA;QAAA;MAAA;QAAA;UAAA;YAAEC,OAAO,2DAAG,CAAC,CAAC;YAAA;YAAA,OAClBH,GAAG,CAACI,IAAI,CAAC,eAAe,EAAE;cAC1CC,MAAM,EAAEF,OAAO,CAACE,MAAM;cACtBC,YAAY,EAAEV,iBAAiB;gBAC7BW,GAAG,EAAEL;cAAI,GACNC,OAAO,EACV;cACFK,OAAO,EAAEL,OAAO,CAACK;YACnB,CAAC,CAAC;UAAA;YAPIC,GAAG;YAAA;YAAA,OASeA,GAAG,CAACC,IAAI,EAAE;UAAA;YAAA;YAA1BC,KAAK,mBAALA,KAAK;YAAA,iCAEN;cAAEA,KAAK,EAAEA,KAAK,CAACC,GAAG,CAAC,WAAC,qBAAsBC,EAAE;gBAAA,OAAK,IAAIhB,SAAS,CAACgB,EAAE,CAAC;cAAA;YAAE,CAAC;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA,CAC7E;IAAA;EAAA;EAED,OAAOZ,GAAG;AACZ,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}