{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _wrapAsyncGenerator = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/wrapAsyncGenerator.js\").default;\nvar _awaitAsyncGenerator = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/awaitAsyncGenerator.js\").default;\nvar _asyncGeneratorDelegate = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/asyncGeneratorDelegate.js\").default;\nvar _asyncIterator = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/asyncIterator.js\").default;\nvar configure = require('../lib/configure');\nvar toUrlSearchParams = require('../lib/to-url-search-params');\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dag').API<HTTPClientExtraOptions>} DAGAPI\n */\n\nmodule.exports = configure(function (api) {\n  /**\n   * @type {DAGAPI[\"export\"]}\n   */\n  function dagExport(_x) {\n    return _dagExport.apply(this, arguments);\n  }\n  function _dagExport() {\n    _dagExport = _wrapAsyncGenerator(function (root) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var res;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _awaitAsyncGenerator(api.post('dag/export', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams({\n                  arg: root.toString()\n                }),\n                headers: options.headers\n              }));\n            case 2:\n              res = _context.sent;\n              return _context.delegateYield(_asyncGeneratorDelegate(_asyncIterator(res.iterator()), _awaitAsyncGenerator), \"t0\", 4);\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      })();\n    });\n    return _dagExport.apply(this, arguments);\n  }\n  return dagExport;\n});","map":{"version":3,"names":["configure","require","toUrlSearchParams","module","exports","api","dagExport","root","options","post","signal","searchParams","arg","toString","headers","res","iterator"],"sources":["C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/ipfs-http-client/src/dag/export.js"],"sourcesContent":["'use strict'\n\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dag').API<HTTPClientExtraOptions>} DAGAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {DAGAPI[\"export\"]}\n   */\n  async function * dagExport (root, options = {}) {\n    const res = await api.post('dag/export', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: root.toString()\n      }),\n      headers: options.headers\n    })\n\n    yield * res.iterator()\n  }\n\n  return dagExport\n})\n"],"mappings":"AAAA,YAAY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEZ,IAAMA,SAAS,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAC7C,IAAMC,iBAAiB,GAAGD,OAAO,CAAC,6BAA6B,CAAC;;AAEhE;AACA;AACA;AACA;;AAEAE,MAAM,CAACC,OAAO,GAAGJ,SAAS,CAAC,UAAAK,GAAG,EAAI;EAChC;AACF;AACA;EAFE,SAGiBC,SAAS;IAAA;EAAA;EAAA;IAAA,iCAA1B,UAA4BC,IAAI;MAAA,IAAEC,OAAO,uEAAG,CAAC,CAAC;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;cAAA,4BAC1BH,GAAG,CAACI,IAAI,CAAC,YAAY,EAAE;gBACvCC,MAAM,EAAEF,OAAO,CAACE,MAAM;gBACtBC,YAAY,EAAET,iBAAiB,CAAC;kBAC9BU,GAAG,EAAEL,IAAI,CAACM,QAAQ;gBACpB,CAAC,CAAC;gBACFC,OAAO,EAAEN,OAAO,CAACM;cACnB,CAAC,CAAC;YAAA;cANIC,GAAG;cAQT,qEAAQA,GAAG,CAACC,QAAQ,EAAE;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CACvB;IAAA;EAAA;EAED,OAAOV,SAAS;AAClB,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}