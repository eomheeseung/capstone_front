{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _asyncIterator = require(\"C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/@babel/runtime/helpers/asyncIterator.js\").default;\nvar errCode = require('err-code');\nvar itPeekable = require('it-peekable');\nvar browserStreamToIt = require('browser-readablestream-to-it');\nvar all = require('it-all');\nvar _require = require('./utils'),\n  isBytes = _require.isBytes,\n  isBlob = _require.isBlob,\n  isReadableStream = _require.isReadableStream;\n\n/**\n * @param {import('./normalise-input').ToContent} input\n */\nfunction toBlob(_x) {\n  return _toBlob.apply(this, arguments);\n}\n/**\n * @param {AsyncIterable<BlobPart>|Iterable<BlobPart>} stream\n */\nfunction _toBlob() {\n  _toBlob = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(input) {\n    var peekable, _yield$peekable$peek, value, done;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (!isBytes(input)) {\n            _context.next = 2;\n            break;\n          }\n          return _context.abrupt(\"return\", new Blob([input]));\n        case 2:\n          if (!(typeof input === 'string' || input instanceof String)) {\n            _context.next = 4;\n            break;\n          }\n          return _context.abrupt(\"return\", new Blob([input.toString()]));\n        case 4:\n          if (!isBlob(input)) {\n            _context.next = 6;\n            break;\n          }\n          return _context.abrupt(\"return\", input);\n        case 6:\n          // Browser stream\n          if (isReadableStream(input)) {\n            input = browserStreamToIt(input);\n          }\n\n          // (Async)Iterator<?>\n          if (!(Symbol.iterator in input || Symbol.asyncIterator in input)) {\n            _context.next = 28;\n            break;\n          }\n          /** @type {any} peekable */\n          peekable = itPeekable(input);\n          /** @type {any} value **/\n          _context.next = 11;\n          return peekable.peek();\n        case 11:\n          _yield$peekable$peek = _context.sent;\n          value = _yield$peekable$peek.value;\n          done = _yield$peekable$peek.done;\n          if (!done) {\n            _context.next = 16;\n            break;\n          }\n          return _context.abrupt(\"return\", itToBlob(peekable));\n        case 16:\n          peekable.push(value);\n\n          // (Async)Iterable<Number>\n          if (!Number.isInteger(value)) {\n            _context.next = 26;\n            break;\n          }\n          _context.t0 = Blob;\n          _context.t1 = Uint8Array;\n          _context.next = 22;\n          return all(peekable);\n        case 22:\n          _context.t2 = _context.sent;\n          _context.t3 = _context.t1.from.call(_context.t1, _context.t2);\n          _context.t4 = [_context.t3];\n          return _context.abrupt(\"return\", new _context.t0(_context.t4));\n        case 26:\n          if (!(isBytes(value) || typeof value === 'string' || value instanceof String)) {\n            _context.next = 28;\n            break;\n          }\n          return _context.abrupt(\"return\", itToBlob(peekable));\n        case 28:\n          throw errCode(new Error(\"Unexpected input: \".concat(input)), 'ERR_UNEXPECTED_INPUT');\n        case 29:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _toBlob.apply(this, arguments);\n}\nfunction itToBlob(_x2) {\n  return _itToBlob.apply(this, arguments);\n}\nfunction _itToBlob() {\n  _itToBlob = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(stream) {\n    var parts, _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, chunk;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          parts = [];\n          _iteratorAbruptCompletion = false;\n          _didIteratorError = false;\n          _context2.prev = 3;\n          _iterator = _asyncIterator(stream);\n        case 5:\n          _context2.next = 7;\n          return _iterator.next();\n        case 7:\n          if (!(_iteratorAbruptCompletion = !(_step = _context2.sent).done)) {\n            _context2.next = 13;\n            break;\n          }\n          chunk = _step.value;\n          parts.push(chunk);\n        case 10:\n          _iteratorAbruptCompletion = false;\n          _context2.next = 5;\n          break;\n        case 13:\n          _context2.next = 19;\n          break;\n        case 15:\n          _context2.prev = 15;\n          _context2.t0 = _context2[\"catch\"](3);\n          _didIteratorError = true;\n          _iteratorError = _context2.t0;\n        case 19:\n          _context2.prev = 19;\n          _context2.prev = 20;\n          if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n            _context2.next = 24;\n            break;\n          }\n          _context2.next = 24;\n          return _iterator.return();\n        case 24:\n          _context2.prev = 24;\n          if (!_didIteratorError) {\n            _context2.next = 27;\n            break;\n          }\n          throw _iteratorError;\n        case 27:\n          return _context2.finish(24);\n        case 28:\n          return _context2.finish(19);\n        case 29:\n          return _context2.abrupt(\"return\", new Blob(parts));\n        case 30:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2, null, [[3, 15, 19, 29], [20,, 24, 28]]);\n  }));\n  return _itToBlob.apply(this, arguments);\n}\nmodule.exports = toBlob;","map":{"version":3,"names":["errCode","require","itPeekable","browserStreamToIt","all","isBytes","isBlob","isReadableStream","toBlob","input","Blob","String","toString","Symbol","iterator","asyncIterator","peekable","peek","value","done","itToBlob","push","Number","isInteger","Uint8Array","from","Error","stream","parts","chunk","module","exports"],"sources":["C:/Users/paete/Prototype/nftmusicProtoCopy/client/node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js"],"sourcesContent":["'use strict'\n\nconst errCode = require('err-code')\nconst itPeekable = require('it-peekable')\nconst browserStreamToIt = require('browser-readablestream-to-it')\nconst all = require('it-all')\n\nconst {\n  isBytes,\n  isBlob,\n  isReadableStream\n} = require('./utils')\n\n/**\n * @param {import('./normalise-input').ToContent} input\n */\nasync function toBlob (input) {\n  // Bytes\n  if (isBytes(input)) {\n    return new Blob([input])\n  }\n\n  // String\n  if (typeof input === 'string' || input instanceof String) {\n    return new Blob([input.toString()])\n  }\n\n  // Blob | File\n  if (isBlob(input)) {\n    return input\n  }\n\n  // Browser stream\n  if (isReadableStream(input)) {\n    input = browserStreamToIt(input)\n  }\n\n  // (Async)Iterator<?>\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    /** @type {any} peekable */\n    const peekable = itPeekable(input)\n\n    /** @type {any} value **/\n    const { value, done } = await peekable.peek()\n\n    if (done) {\n      // make sure empty iterators result in empty files\n      return itToBlob(peekable)\n    }\n\n    peekable.push(value)\n\n    // (Async)Iterable<Number>\n    if (Number.isInteger(value)) {\n      return new Blob([Uint8Array.from(await all(peekable))])\n    }\n\n    // (Async)Iterable<Bytes|String>\n    if (isBytes(value) || typeof value === 'string' || value instanceof String) {\n      return itToBlob(peekable)\n    }\n  }\n\n  throw errCode(new Error(`Unexpected input: ${input}`), 'ERR_UNEXPECTED_INPUT')\n}\n\n/**\n * @param {AsyncIterable<BlobPart>|Iterable<BlobPart>} stream\n */\nasync function itToBlob (stream) {\n  const parts = []\n\n  for await (const chunk of stream) {\n    parts.push(chunk)\n  }\n\n  return new Blob(parts)\n}\n\nmodule.exports = toBlob\n"],"mappings":"AAAA,YAAY;;AAAA;AAAA;AAAA;AAEZ,IAAMA,OAAO,GAAGC,OAAO,CAAC,UAAU,CAAC;AACnC,IAAMC,UAAU,GAAGD,OAAO,CAAC,aAAa,CAAC;AACzC,IAAME,iBAAiB,GAAGF,OAAO,CAAC,8BAA8B,CAAC;AACjE,IAAMG,GAAG,GAAGH,OAAO,CAAC,QAAQ,CAAC;AAE7B,eAIIA,OAAO,CAAC,SAAS,CAAC;EAHpBI,OAAO,YAAPA,OAAO;EACPC,MAAM,YAANA,MAAM;EACNC,gBAAgB,YAAhBA,gBAAgB;;AAGlB;AACA;AACA;AAFA,SAGeC,MAAM;EAAA;AAAA;AAkDrB;AACA;AACA;AAFA;EAAA,qEAlDA,iBAAuBC,KAAK;IAAA;IAAA;MAAA;QAAA;UAAA,KAEtBJ,OAAO,CAACI,KAAK,CAAC;YAAA;YAAA;UAAA;UAAA,iCACT,IAAIC,IAAI,CAAC,CAACD,KAAK,CAAC,CAAC;QAAA;UAAA,MAItB,OAAOA,KAAK,KAAK,QAAQ,IAAIA,KAAK,YAAYE,MAAM;YAAA;YAAA;UAAA;UAAA,iCAC/C,IAAID,IAAI,CAAC,CAACD,KAAK,CAACG,QAAQ,EAAE,CAAC,CAAC;QAAA;UAAA,KAIjCN,MAAM,CAACG,KAAK,CAAC;YAAA;YAAA;UAAA;UAAA,iCACRA,KAAK;QAAA;UAGd;UACA,IAAIF,gBAAgB,CAACE,KAAK,CAAC,EAAE;YAC3BA,KAAK,GAAGN,iBAAiB,CAACM,KAAK,CAAC;UAClC;;UAEA;UAAA,MACII,MAAM,CAACC,QAAQ,IAAIL,KAAK,IAAII,MAAM,CAACE,aAAa,IAAIN,KAAK;YAAA;YAAA;UAAA;UAC3D;UACMO,QAAQ,GAAGd,UAAU,CAACO,KAAK,CAAC;UAElC;UAAA;UAAA,OAC8BO,QAAQ,CAACC,IAAI,EAAE;QAAA;UAAA;UAArCC,KAAK,wBAALA,KAAK;UAAEC,IAAI,wBAAJA,IAAI;UAAA,KAEfA,IAAI;YAAA;YAAA;UAAA;UAAA,iCAECC,QAAQ,CAACJ,QAAQ,CAAC;QAAA;UAG3BA,QAAQ,CAACK,IAAI,CAACH,KAAK,CAAC;;UAEpB;UAAA,KACII,MAAM,CAACC,SAAS,CAACL,KAAK,CAAC;YAAA;YAAA;UAAA;UAAA,cACdR,IAAI;UAAA,cAAEc,UAAU;UAAA;UAAA,OAAYpB,GAAG,CAACY,QAAQ,CAAC;QAAA;UAAA;UAAA,0BAAxBS,IAAI;UAAA;UAAA;QAAA;UAAA,MAI9BpB,OAAO,CAACa,KAAK,CAAC,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAIA,KAAK,YAAYP,MAAM;YAAA;YAAA;UAAA;UAAA,iCACjES,QAAQ,CAACJ,QAAQ,CAAC;QAAA;UAAA,MAIvBhB,OAAO,CAAC,IAAI0B,KAAK,6BAAsBjB,KAAK,EAAG,EAAE,sBAAsB,CAAC;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,CAC/E;EAAA;AAAA;AAAA,SAKcW,QAAQ;EAAA;AAAA;AAAA;EAAA,uEAAvB,kBAAyBO,MAAM;IAAA;IAAA;MAAA;QAAA;UACvBC,KAAK,GAAG,EAAE;UAAA;UAAA;UAAA;UAAA,2BAEUD,MAAM;QAAA;UAAA;UAAA;QAAA;UAAA;YAAA;YAAA;UAAA;UAAfE,KAAK;UACpBD,KAAK,CAACP,IAAI,CAACQ,KAAK,CAAC;QAAA;UAAA;UAAA;UAAA;QAAA;UAAA;UAAA;QAAA;UAAA;UAAA;UAAA;UAAA;QAAA;UAAA;UAAA;UAAA;YAAA;YAAA;UAAA;UAAA;UAAA;QAAA;UAAA;UAAA;YAAA;YAAA;UAAA;UAAA;QAAA;UAAA;QAAA;UAAA;QAAA;UAAA,kCAGZ,IAAInB,IAAI,CAACkB,KAAK,CAAC;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,CACvB;EAAA;AAAA;AAEDE,MAAM,CAACC,OAAO,GAAGvB,MAAM"},"metadata":{},"sourceType":"script","externalDependencies":[]}