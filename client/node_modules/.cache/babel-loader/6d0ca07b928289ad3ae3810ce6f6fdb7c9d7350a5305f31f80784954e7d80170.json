{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\paete\\\\Prototype\\\\nftmusicProtoCopy\\\\client\\\\src\\\\contexts\\\\EthContext\\\\EthProvider.jsx\",\n  _s = $RefreshSig$();\nimport React, { useReducer, useCallback, useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\nimport EthContext from \"./EthContext\";\nimport { reducer, actions, initialState } from \"./state\";\nimport WalletConnectProvdier from \"@walletconnect/web3-provider\";\n// import { infuraProvider } from 'wagmi/providers/infura'\n\n// import {\n//   EthereumClient,\n//   modalConnectors,\n//   walletConnectProvider,\n// } from \"@web3modal/ethereum\";\n\n// import { Web3Modal } from \"@web3modal/react\";\n\n// import { configureChains, createClient, WagmiConfig } from \"wagmi\";\n\n// import { arbitrum, mainnet, polygon } from \"wagmi/chains\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar newjson = [];\nvar imgjson = [];\nexport function EthProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [proset, setProvider] = useState(false);\n  const chains = [arbitrum, mainnet, polygon];\n\n  // Wagmi client\n  // const { provider } = configureChains(chains,[infuraProvider({ apiKey:'ff2d998f9cdf4be29197ce3ffb727d89' })], [\n  //   walletConnectProvider({ projectId: \"251542da3c8552393e55d6d3b636127e\" }),\n  // ]);\n  // const wagmiClient = createClient({\n  //   autoConnect: true,\n  //   connectors: modalConnectors({\n  //     projectId: \"251542da3c8552393e55d6d3b636127e\",\n  //     version: \"1\", // or \"2\"\n  //     appName: \"web3Modal\",\n  //     chains,\n  //   }),\n  //   provider,\n  // });\n\n  // // Web3Modal Ethereum Client\n  // const ethereumClient = new EthereumClient(wagmiClient, chains);\n\n  const provider = new WalletConnectProvdier({\n    rpc: {\n      5: 'https://goerli.infura.io/v3/ff2d998f9cdf4be29197ce3ffb727d89'\n    },\n    infuraId: \"ff2d998f9cdf4be29197ce3ffb727d89\",\n    qrcodeModalOptions: {\n      desktopLinks: ['ledger', 'tokenary', 'wallet', 'wallet 3', 'secuX', 'ambire', 'wallet3', 'apolloX', 'zerion', 'sequence', 'punkWallet', 'kryptoGO', 'nft', 'riceWallet', 'vision', 'keyring'],\n      mobileLinks: [\"rainbow\", \"metamask\", \"argent\", \"trust\", \"imtoken\", \"pillar\"]\n    }\n  });\n  const init = useCallback(async artifact => {\n    if (artifact) {\n      // const web3 = new Web3(Web3.givenProvider || \"ws://127.0.0.1:7545\");\n\n      console.log(provider);\n      const web3 = new Web3(provider);\n\n      // await provider.disconnect();            \n      // await provider.enable();\n      // Subscribe to accounts change\n      provider.on(\"accountsChanged\", accounts => {\n        console.log(accounts);\n      });\n\n      // Subscribe to chainId change\n      provider.on(\"chainChanged\", chainId => {\n        console.log(chainId);\n      });\n\n      // Subscribe to session disconnection\n      provider.on(\"disconnect\", (code, reason) => {\n        console.log(code, reason);\n      });\n\n      // const web3 = new Web3(Web3.givenProvider || \"ws://goerli.infura.io/v3/ff2d998f9cdf4be29197ce3ffb727d89\");\n      const accounts = await web3.eth.getAccounts();\n      const networkID = await web3.eth.net.getId();\n      const {\n        abi\n      } = artifact;\n      let address, contract;\n      try {\n        address = artifact.networks[networkID].address;\n        contract = new web3.eth.Contract(abi, address);\n      } catch (err) {\n        console.error(err);\n        console.log(\"에러위치\");\n      }\n      dispatch({\n        type: actions.init,\n        data: {\n          artifact,\n          web3,\n          accounts,\n          networkID,\n          contract,\n          newjson,\n          provider\n        }\n      });\n    }\n  }, []);\n  useEffect(() => {\n    const tryInit = async () => {\n      try {\n        const artifact = require(\"../../contracts/ArtGrowNFT.json\");\n        init(artifact);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    tryInit();\n  }, [init]);\n  useEffect(() => {\n    const events = [\"chainChanged\", \"accountsChanged\"];\n    const handleChange = () => {\n      init(state.artifact);\n    };\n    events.forEach(e => window.ethereum.on(e, handleChange));\n    return () => {\n      events.forEach(e => window.ethereum.removeListener(e, handleChange));\n    };\n  }, [init, state.artifact]);\n  async function Provide() {\n    console.log(provider);\n    await provider.enable();\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EthContext.Provider, {\n      value: {\n        state,\n        dispatch\n      },\n      children: [children, /*#__PURE__*/_jsxDEV(WagmiConfig, {\n        client: wagmiClient\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Web3Modal, {\n        projectId: \"251542da3c8552393e55d6d3b636127e\",\n        ethereumClient: ethereumClient\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 6\n  }, this);\n}\n_s(EthProvider, \"zAynNKLG8PA4TBxKYif2YtVwKQ0=\");\n_c = EthProvider;\nexport default EthProvider;\nvar _c;\n$RefreshReg$(_c, \"EthProvider\");","map":{"version":3,"names":["React","useReducer","useCallback","useEffect","useState","Web3","EthContext","reducer","actions","initialState","WalletConnectProvdier","newjson","imgjson","EthProvider","children","state","dispatch","proset","setProvider","chains","arbitrum","mainnet","polygon","provider","rpc","infuraId","qrcodeModalOptions","desktopLinks","mobileLinks","init","artifact","console","log","web3","on","accounts","chainId","code","reason","eth","getAccounts","networkID","net","getId","abi","address","contract","networks","Contract","err","error","type","data","tryInit","require","events","handleChange","forEach","e","window","ethereum","removeListener","Provide","enable","wagmiClient","ethereumClient"],"sources":["C:/Users/paete/Prototype/nftmusicProtoCopy/client/src/contexts/EthContext/EthProvider.jsx"],"sourcesContent":["import React, { useReducer, useCallback, useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\nimport EthContext from \"./EthContext\";\nimport { reducer, actions, initialState } from \"./state\";\nimport WalletConnectProvdier from \"@walletconnect/web3-provider\";\n// import { infuraProvider } from 'wagmi/providers/infura'\n  \n// import {\n//   EthereumClient,\n//   modalConnectors,\n//   walletConnectProvider,\n// } from \"@web3modal/ethereum\";\n\n// import { Web3Modal } from \"@web3modal/react\";\n\n// import { configureChains, createClient, WagmiConfig } from \"wagmi\";\n\n// import { arbitrum, mainnet, polygon } from \"wagmi/chains\";\n\nvar newjson=[]\nvar imgjson=[];\n\n\nexport function EthProvider({ children }) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [proset,setProvider]=useState(false);\n  const chains = [arbitrum, mainnet, polygon];\n\n// Wagmi client\n// const { provider } = configureChains(chains,[infuraProvider({ apiKey:'ff2d998f9cdf4be29197ce3ffb727d89' })], [\n//   walletConnectProvider({ projectId: \"251542da3c8552393e55d6d3b636127e\" }),\n// ]);\n// const wagmiClient = createClient({\n//   autoConnect: true,\n//   connectors: modalConnectors({\n//     projectId: \"251542da3c8552393e55d6d3b636127e\",\n//     version: \"1\", // or \"2\"\n//     appName: \"web3Modal\",\n//     chains,\n//   }),\n//   provider,\n// });\n\n// // Web3Modal Ethereum Client\n// const ethereumClient = new EthereumClient(wagmiClient, chains);\n\n     \n const provider = new WalletConnectProvdier({\n  \n  rpc: {\n    5:'https://goerli.infura.io/v3/ff2d998f9cdf4be29197ce3ffb727d89'\n    \n  },\n  infuraId: \"ff2d998f9cdf4be29197ce3ffb727d89\",\n  \n \n qrcodeModalOptions: {\n   desktopLinks: [\n     'ledger',\n     'tokenary',\n     'wallet',\n     'wallet 3',\n     'secuX',\n     'ambire',\n     'wallet3',\n     'apolloX',\n     'zerion',\n     'sequence',\n     'punkWallet',\n     'kryptoGO',\n     'nft',\n     'riceWallet',\n     'vision',\n     'keyring'\n   ],\n   mobileLinks: [\n     \"rainbow\",\n     \"metamask\",\n     \"argent\",\n     \"trust\",\n     \"imtoken\",\n     \"pillar\",\n     \n   ],}});\n\n\n  const init = useCallback(\n    async artifact => {\n      if (artifact) {\n        // const web3 = new Web3(Web3.givenProvider || \"ws://127.0.0.1:7545\");\n\n              console.log(provider);\n              const web3 = new Web3(provider);\n              \n  // await provider.disconnect();            \n  // await provider.enable();\n              // Subscribe to accounts change\nprovider.on(\"accountsChanged\", (accounts) => {\n  console.log(accounts);\n});\n\n// Subscribe to chainId change\nprovider.on(\"chainChanged\", (chainId) => {\n  console.log(chainId);\n});\n\n// Subscribe to session disconnection\nprovider.on(\"disconnect\", (code,reason) => {\n  console.log(code, reason);\n});\n           \n \n           \n        // const web3 = new Web3(Web3.givenProvider || \"ws://goerli.infura.io/v3/ff2d998f9cdf4be29197ce3ffb727d89\");\n        const accounts = await web3.eth.getAccounts();\n        const networkID = await web3.eth.net.getId();\n       \n        const { abi } = artifact;\n        let address, contract;\n        try {\n          address = artifact.networks[networkID].address;\n          contract = new web3.eth.Contract(abi, address);   \n          \n        } catch (err) {\n          console.error(err);\n          console.log(\"에러위치\");\n        }\n        dispatch({\n          type: actions.init,\n          data: { artifact, web3, accounts, networkID, contract,newjson,provider}\n        });\n      }\n    }, []);\n\n  \n \n    \n   \n  useEffect(() => {\n    const tryInit = async () => {\n      try {\n        const artifact = require(\"../../contracts/ArtGrowNFT.json\");\n        init(artifact);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    tryInit();\n  }, [init]);\n\n  \n\n  useEffect(() => {\n    const events = [\"chainChanged\", \"accountsChanged\"];\n    const handleChange = () => {\n      init(state.artifact);\n\n    };\n    events.forEach(e => window.ethereum.on(e, handleChange));\n    return () => {\n      events.forEach(e => window.ethereum.removeListener(e, handleChange));\n    };\n  }, [init,state.artifact]);\n\n  \n  \nasync function Provide()\n{\n\n  console.log(provider)\n  \n  await provider.enable();\n}\n  return (\n    \n     <React.Fragment>\n       <EthContext.Provider value={{\n      state,\n      dispatch\n    }}>\n      \n      {children}\n      <WagmiConfig client={wagmiClient}>\n      \n      </WagmiConfig>\n\n      <Web3Modal\n        projectId=\"251542da3c8552393e55d6d3b636127e\"\n        ethereumClient={ethereumClient}\n      />\n  \n    </EthContext.Provider>\n     </React.Fragment>\n\n\n  );\n}\n\n\nexport default EthProvider;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3E,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,UAAU,MAAM,cAAc;AACrC,SAASC,OAAO,EAAEC,OAAO,EAAEC,YAAY,QAAQ,SAAS;AACxD,OAAOC,qBAAqB,MAAM,8BAA8B;AAChE;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AAAA;AAEA,IAAIC,OAAO,GAAC,EAAE;AACd,IAAIC,OAAO,GAAC,EAAE;AAGd,OAAO,SAASC,WAAW,OAAe;EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC;EACtC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGf,UAAU,CAACM,OAAO,EAAEE,YAAY,CAAC;EAC3D,MAAM,CAACQ,MAAM,EAACC,WAAW,CAAC,GAACd,QAAQ,CAAC,KAAK,CAAC;EAC1C,MAAMe,MAAM,GAAG,CAACC,QAAQ,EAAEC,OAAO,EAAEC,OAAO,CAAC;;EAE7C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAGC,MAAMC,QAAQ,GAAG,IAAIb,qBAAqB,CAAC;IAE1Cc,GAAG,EAAE;MACH,CAAC,EAAC;IAEJ,CAAC;IACDC,QAAQ,EAAE,kCAAkC;IAG7CC,kBAAkB,EAAE;MAClBC,YAAY,EAAE,CACZ,QAAQ,EACR,UAAU,EACV,QAAQ,EACR,UAAU,EACV,OAAO,EACP,QAAQ,EACR,SAAS,EACT,SAAS,EACT,QAAQ,EACR,UAAU,EACV,YAAY,EACZ,UAAU,EACV,KAAK,EACL,YAAY,EACZ,QAAQ,EACR,SAAS,CACV;MACDC,WAAW,EAAE,CACX,SAAS,EACT,UAAU,EACV,QAAQ,EACR,OAAO,EACP,SAAS,EACT,QAAQ;IAER;EAAC,CAAC,CAAC;EAGN,MAAMC,IAAI,GAAG3B,WAAW,CACtB,MAAM4B,QAAQ,IAAI;IAChB,IAAIA,QAAQ,EAAE;MACZ;;MAEMC,OAAO,CAACC,GAAG,CAACT,QAAQ,CAAC;MACrB,MAAMU,IAAI,GAAG,IAAI5B,IAAI,CAACkB,QAAQ,CAAC;;MAE3C;MACA;MACY;MACdA,QAAQ,CAACW,EAAE,CAAC,iBAAiB,EAAGC,QAAQ,IAAK;QAC3CJ,OAAO,CAACC,GAAG,CAACG,QAAQ,CAAC;MACvB,CAAC,CAAC;;MAEF;MACAZ,QAAQ,CAACW,EAAE,CAAC,cAAc,EAAGE,OAAO,IAAK;QACvCL,OAAO,CAACC,GAAG,CAACI,OAAO,CAAC;MACtB,CAAC,CAAC;;MAEF;MACAb,QAAQ,CAACW,EAAE,CAAC,YAAY,EAAE,CAACG,IAAI,EAACC,MAAM,KAAK;QACzCP,OAAO,CAACC,GAAG,CAACK,IAAI,EAAEC,MAAM,CAAC;MAC3B,CAAC,CAAC;;MAIM;MACA,MAAMH,QAAQ,GAAG,MAAMF,IAAI,CAACM,GAAG,CAACC,WAAW,EAAE;MAC7C,MAAMC,SAAS,GAAG,MAAMR,IAAI,CAACM,GAAG,CAACG,GAAG,CAACC,KAAK,EAAE;MAE5C,MAAM;QAAEC;MAAI,CAAC,GAAGd,QAAQ;MACxB,IAAIe,OAAO,EAAEC,QAAQ;MACrB,IAAI;QACFD,OAAO,GAAGf,QAAQ,CAACiB,QAAQ,CAACN,SAAS,CAAC,CAACI,OAAO;QAC9CC,QAAQ,GAAG,IAAIb,IAAI,CAACM,GAAG,CAACS,QAAQ,CAACJ,GAAG,EAAEC,OAAO,CAAC;MAEhD,CAAC,CAAC,OAAOI,GAAG,EAAE;QACZlB,OAAO,CAACmB,KAAK,CAACD,GAAG,CAAC;QAClBlB,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;MACrB;MACAhB,QAAQ,CAAC;QACPmC,IAAI,EAAE3C,OAAO,CAACqB,IAAI;QAClBuB,IAAI,EAAE;UAAEtB,QAAQ;UAAEG,IAAI;UAAEE,QAAQ;UAAEM,SAAS;UAAEK,QAAQ;UAACnC,OAAO;UAACY;QAAQ;MACxE,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,EAAE,CAAC;EAMRpB,SAAS,CAAC,MAAM;IACd,MAAMkD,OAAO,GAAG,YAAY;MAC1B,IAAI;QACF,MAAMvB,QAAQ,GAAGwB,OAAO,CAAC,iCAAiC,CAAC;QAC3DzB,IAAI,CAACC,QAAQ,CAAC;MAChB,CAAC,CAAC,OAAOmB,GAAG,EAAE;QACZlB,OAAO,CAACmB,KAAK,CAACD,GAAG,CAAC;MACpB;IACF,CAAC;IAEDI,OAAO,EAAE;EACX,CAAC,EAAE,CAACxB,IAAI,CAAC,CAAC;EAIV1B,SAAS,CAAC,MAAM;IACd,MAAMoD,MAAM,GAAG,CAAC,cAAc,EAAE,iBAAiB,CAAC;IAClD,MAAMC,YAAY,GAAG,MAAM;MACzB3B,IAAI,CAACd,KAAK,CAACe,QAAQ,CAAC;IAEtB,CAAC;IACDyB,MAAM,CAACE,OAAO,CAACC,CAAC,IAAIC,MAAM,CAACC,QAAQ,CAAC1B,EAAE,CAACwB,CAAC,EAAEF,YAAY,CAAC,CAAC;IACxD,OAAO,MAAM;MACXD,MAAM,CAACE,OAAO,CAACC,CAAC,IAAIC,MAAM,CAACC,QAAQ,CAACC,cAAc,CAACH,CAAC,EAAEF,YAAY,CAAC,CAAC;IACtE,CAAC;EACH,CAAC,EAAE,CAAC3B,IAAI,EAACd,KAAK,CAACe,QAAQ,CAAC,CAAC;EAI3B,eAAegC,OAAO,GACtB;IAEE/B,OAAO,CAACC,GAAG,CAACT,QAAQ,CAAC;IAErB,MAAMA,QAAQ,CAACwC,MAAM,EAAE;EACzB;EACE,oBAEG,QAAC,KAAK,CAAC,QAAQ;IAAA,uBACb,QAAC,UAAU,CAAC,QAAQ;MAAC,KAAK,EAAE;QAC7BhD,KAAK;QACLC;MACF,CAAE;MAAA,WAECF,QAAQ,eACT,QAAC,WAAW;QAAC,MAAM,EAAEkD;MAAY;QAAA;QAAA;QAAA;MAAA,QAEnB,eAEd,QAAC,SAAS;QACR,SAAS,EAAC,kCAAkC;QAC5C,cAAc,EAAEC;MAAe;QAAA;QAAA;QAAA;MAAA,QAC/B;IAAA;MAAA;MAAA;MAAA;IAAA;EAEkB;IAAA;IAAA;IAAA;EAAA,QACJ;AAItB;AAAC,GA9KepD,WAAW;AAAA,KAAXA,WAAW;AAiL3B,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}